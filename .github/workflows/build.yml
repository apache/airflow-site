# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Build docs

on:
  push:
    branches: ['main']
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ["ubuntu-22.04"]
    steps:
      # Based on https://github.com/actions/runner-images/issues/2840
      - name: 🪓 Remove some stuff we don't need
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - name: 🟢 Install stuff we need
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y
      - name: 🗂 Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9  # v3.5.3
        with:
          submodules: recursive
          lfs: true
          fetch-depth: 1
      - name: Create /mnt/airflow-site directory
        run: sudo mkdir -p /mnt/airflow-site
      - name: Move repository to /mnt
        run: |
          sudo mv /home/runner/work/airflow-site/airflow-site /mnt/
          # Create symbolic link
          sudo mkdir -p /home/runner/work/airflow-site
          sudo ln -s /mnt/airflow-site /home/runner/work/airflow-site/airflow-site
      - name: Set working directory to /mnt/airflow-site
        working-directory: /mnt/airflow-site
        run: echo "Working directory set to /mnt/airflow-site"

      - name: Display disk free
        run: /mnt/airflow-site/.github/scripts/print_df.sh
        working-directory: /mnt/airflow-site
      - name: 🐍 Setup Python
        uses: actions/setup-python@bd6b4b6205c4dbad673328db7b31b7fab9e241c0  # v4.6.1
        with:
          python-version: '3.9'
      - name: ❤️  Install Node 16
        uses: actions/setup-node@v3.3.0  # v3.3.0
        with:
          node-version: 16
      - name: 📚 Install Hugo
        uses: peaceiris/actions-hugo@v2.4.13  # v2.4.13
        with:
          hugo-version: '0.91.2'
          extended: true
      - name: 🟢 Install node dependencies
        run: |
          /mnt/airflow-site/site.sh install-node-deps
          /mnt/airflow-site/.github/scripts/print_df.sh
      - name: 🐍 Install Python dependencies
        run: |
          pip install -r requirements.txt
          /mnt/airflow-site/.github/scripts/print_df.sh
      - name: Ensure cache directory exists and adjust permissions
        run: |
          mkdir -p /mnt/airflow-site/.cache/pre-commit
          sudo chmod -R 777 /mnt/airflow-site/.cache/pre-commit
      - name: 🔎 Lint
        run: |
          pip install pre-commit
          pip install pre-commit-uv
          pre-commit run --all-files
      - name: 🗂 Checkout publish branch with minimum depth
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9  # 3.5.3
        if: ${{ github.event_name == 'push' }}
        with:
          ref: publish
          fetch-depth: 1
          path: dist
      - name: 🔧 Build site
        run: |
          /mnt/airflow-site/site.sh build-site
          /mnt/airflow-site/.github/scripts/print_df.sh

      - name: Install AWS CLI v2
        if: ${{ github.event_name == 'push' }}
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o /tmp/awscliv2.zip
          unzip -q /tmp/awscliv2.zip -d /tmp
          rm /tmp/awscliv2.zip
          sudo /tmp/aws/install --update
          rm -rf /tmp/aws/

      - name: Configure AWS credentials
        if: ${{ github.event_name == 'push' }}
        uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a  # v4.0.1
        with:
          aws-access-key-id: ${{ secrets.DOCS_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DOCS_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Copy docs index page to S3 docs
        if: ${{ github.event_name == 'push' }}
        run: |
          aws s3 cp ./dist/docs/index.html s3://live-docs-airflow-apache-org/docs/index.html
          aws s3 cp ./dist/docs/index.xml s3://live-docs-airflow-apache-org/docs/index.xml

      - name: 🐅 Optimize artifacts
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          rm -rf ./dist/docs/*
          echo "These files have been deleted to optimize the size of the artifacts." > ./dist/docs/index.html
          echo "Here was the contents of the ./docs-archive directory" >> ./dist/docs/index.html
          find ./dist/
          /mnt/airflow-site/.github/scripts/print_df.sh
      - uses: actions/upload-artifact@v4
        name: 🚀 Upload website as artifact
        if: ${{ github.event_name == 'pull_request' }}
        with:
          name: airflow-website
          path: './dist'
          if-no-files-found: error
          retention-days: 14
      - name: 👷 Copy .asf.yaml to /dist/
        if: ${{ github.event_name == 'push' }}
        run: |
          # The asf.yaml file must be in the branch from which the files are published.
          # Otherwise, ASF publising tools cannot detect it.
          cp .asf.yaml ./dist/
          /mnt/airflow-site/.github/scripts/print_df.sh
      - name: 🪓 Remove node and node modules
        run: |
          rm -rf node_modules
          sudo rm -rf "$AGENT_TOOLSDIRECTORY/node"
          /mnt/airflow-site/.github/scripts/print_df.sh
      - name: 🔄Refresh PMC/COMMITTERS profiles
        env:
          PMC_COMMITTERS_FILES: landing-pages/site/data/committers.json,landing-pages/site/data/pmc.json
        run: |
          python3 ./.github/scripts/refresh_pmc_committer_images.py
      - name: 🚀 Add commit to publish branch and deploy it
        if: ${{ github.event_name == 'push' }}
        working-directory: dist
        run: |
          ../.github/scripts/print_df.sh
          echo "Running git config"
          git config user.name "GitHub Actions"
          git config user.email "actions@users.noreply.github.com"
          echo "Running git add"
          git add .
          ../.github/scripts/print_df.sh
          echo "Running git commit"
          git commit --no-edit -m "Docs updated via ${{ github.ref }}:${{ github.sha }}" > ../git_commit.log
          ../.github/scripts/print_df.sh
          git push origin publish
          ../.github/scripts/print_df.sh
      - name: 🚀 Upload git commit log as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: airflow-git-commit-log
          path: './git_commit.log'
          retention-days: 5
      - name: 🔧 Copy files from site to theme
        run: |
          ./site.sh prepare-theme
          ./.github/scripts/print_df.sh
      - name: 🔧 Prepare sphinx_airflow_theme package ️
        working-directory: sphinx_airflow_theme
        run: |
          python3 -m pip install --user --upgrade setuptools wheel
          python3 setup.py sdist bdist_wheel
          ../.github/scripts/print_df.sh
      - name: 🚀 Upload sphinx_airflow_theme package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: airflow-sphinx-theme
          path: './sphinx_airflow_theme/dist'
          if-no-files-found: error
          retention-days: 14
      - name: 🔧 Build theme demo
        working-directory: sphinx_airflow_theme
        run: |
          pip install ./dist/sphinx_airflow_theme-*.whl
          cd demo
          ./docs.sh build
          ../../.github/scripts/print_df.sh
      - name: 🚀 Upload sphinx_airflow_theme demo as artifact
        uses: actions/upload-artifact@v4
        with:
          name: airflow-sphinx-theme-demo
          path: './sphinx_airflow_theme/demo/_build'
          if-no-files-found: error
          retention-days: 14
      - name: 🚀 Create releases on GitHub
        working-directory: sphinx_airflow_theme
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_COMMIT: ${{ github.sha }}
          GITHUB_REF: ${{ github.ref }}
        if: >
          github.ref == 'refs/heads/main' && github.repository == 'apache/airflow-site' &&
          github.event_name == 'push'
        run: |
          set -x
          gh auth status
          VERSION="$(python setup.py --version 2>/dev/null | tail -1)"
          TITLE=$(date "+%Y-%m-%d %H:%M:%S")
          NOTES="Commit: ${GITHUB_COMMIT}
          Source: ${GITHUB_REF}"

          gh release delete "${VERSION}" -y || true
          gh release create "${VERSION}" \
            --title "${TITLE}" \
            --notes "${NOTES}" \
            ./dist/*
          ../.github/scripts/print_df.sh
