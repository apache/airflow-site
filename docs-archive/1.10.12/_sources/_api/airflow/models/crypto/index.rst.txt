:mod:`airflow.models.crypto`
============================

.. py:module:: airflow.models.crypto


Module Contents
---------------

.. data:: log
   

   

.. py:exception:: InvalidFernetToken

   Bases: :class:`Exception`


.. py:class:: NullFernet

   Bases: :class:`object`

   A "Null" encryptor class that doesn't encrypt or decrypt but that presents
   a similar interface to Fernet.

   The purpose of this is to make the rest of the code not have to know the
   difference, and to only display the message once, not 20 times when
   `airflow initdb` is ran.

   .. attribute:: is_encrypted
      :annotation: = False

      

   
   .. method:: decrypt(self, b)



   
   .. method:: encrypt(self, b)




.. data:: _fernet
   

   

.. function:: get_fernet()
   Deferred load of Fernet key.

   This function could fail either because Cryptography is not installed
   or because the Fernet key is invalid.

   :return: Fernet object
   :raises: airflow.exceptions.AirflowException if there's a problem trying to load Fernet


