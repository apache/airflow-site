:py:mod:`airflow.providers.alibaba.cloud.log.oss_task_handler`
==============================================================

.. py:module:: airflow.providers.alibaba.cloud.log.oss_task_handler


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.alibaba.cloud.log.oss_task_handler.OSSTaskHandler



Functions
~~~~~~~~~

.. autoapisummary::

   airflow.providers.alibaba.cloud.log.oss_task_handler.get_default_delete_local_copy



.. py:function:: get_default_delete_local_copy()

   Load delete_local_logs conf if Airflow version > 2.6 and return False if not.

   TODO: delete this function when min airflow version >= 2.6


.. py:class:: OSSTaskHandler(base_log_folder, oss_log_folder, filename_template=None, **kwargs)


   Bases: :py:obj:`airflow.utils.log.file_task_handler.FileTaskHandler`, :py:obj:`airflow.utils.log.logging_mixin.LoggingMixin`

   OSSTaskHandler is a python log handler that handles and reads task instance logs.

   Extends airflow FileTaskHandler and uploads to and reads from OSS remote storage.

   .. py:method:: hook()


   .. py:method:: set_context(ti)

      Set the context of the handler.


   .. py:method:: close()

      Close and upload local log file to remote storage OSS.


   .. py:method:: oss_log_exists(remote_log_location)

      Check if remote_log_location exists in remote storage.

      :param remote_log_location: log's location in remote storage
      :return: True if location exists else False


   .. py:method:: oss_read(remote_log_location, return_error=False)

      Return the log at the remote_log_location or '' if no logs are found or there is an error.

      :param remote_log_location: the log's location in remote storage
      :param return_error: if True, returns a string error message if an
          error occurs. Otherwise, returns '' when an error occurs.


   .. py:method:: oss_write(log, remote_log_location, append=True)

      Write the log to remote_log_location and return `True`; fails silently and returns `False` on error.

      :param log: the log to write to the remote_log_location
      :param remote_log_location: the log's location in remote storage
      :param append: if False, any existing log file is overwritten. If True,
          the new log is appended to any existing logs.
      :return: whether the log is successfully written to remote location or not.



