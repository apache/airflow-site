:py:mod:`airflow.providers.alibaba.cloud.operators.oss`
=======================================================

.. py:module:: airflow.providers.alibaba.cloud.operators.oss

.. autoapi-nested-parse::

   This module contains Alibaba Cloud OSS operators.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.alibaba.cloud.operators.oss.OSSCreateBucketOperator
   airflow.providers.alibaba.cloud.operators.oss.OSSDeleteBucketOperator
   airflow.providers.alibaba.cloud.operators.oss.OSSUploadObjectOperator
   airflow.providers.alibaba.cloud.operators.oss.OSSDownloadObjectOperator
   airflow.providers.alibaba.cloud.operators.oss.OSSDeleteBatchObjectOperator
   airflow.providers.alibaba.cloud.operators.oss.OSSDeleteObjectOperator




.. py:class:: OSSCreateBucketOperator(region, bucket_name = None, oss_conn_id = 'oss_default', **kwargs)


   Bases: :py:obj:`airflow.models.BaseOperator`

   This operator creates an OSS bucket.

   :param region: OSS region you want to create bucket
   :param bucket_name: This is bucket name you want to create
   :param oss_conn_id: The Airflow connection used for OSS credentials.

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: OSSDeleteBucketOperator(region, bucket_name = None, oss_conn_id = 'oss_default', **kwargs)


   Bases: :py:obj:`airflow.models.BaseOperator`

   This operator to delete an OSS bucket.

   :param region: OSS region you want to create bucket
   :param bucket_name: This is bucket name you want to delete
   :param oss_conn_id: The Airflow connection used for OSS credentials.

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: OSSUploadObjectOperator(key, file, region, bucket_name = None, oss_conn_id = 'oss_default', **kwargs)


   Bases: :py:obj:`airflow.models.BaseOperator`

   This operator to upload an file-like object.

   :param key: the OSS path of the object
   :param file: local file to upload.
   :param region: OSS region you want to create bucket
   :param bucket_name: This is bucket name you want to create
   :param oss_conn_id: The Airflow connection used for OSS credentials.

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: OSSDownloadObjectOperator(key, file, region, bucket_name = None, oss_conn_id = 'oss_default', **kwargs)


   Bases: :py:obj:`airflow.models.BaseOperator`

   This operator to Download an OSS object.

   :param key: key of the object to download.
   :param local_file: local path + file name to save.
   :param region: OSS region
   :param bucket_name: OSS bucket name
   :param oss_conn_id: The Airflow connection used for OSS credentials.

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: OSSDeleteBatchObjectOperator(keys, region, bucket_name = None, oss_conn_id = 'oss_default', **kwargs)


   Bases: :py:obj:`airflow.models.BaseOperator`

   This operator to delete OSS objects.

   :param key: key list of the objects to delete.
   :param region: OSS region
   :param bucket_name: OSS bucket name
   :param oss_conn_id: The Airflow connection used for OSS credentials.

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: OSSDeleteObjectOperator(key, region, bucket_name = None, oss_conn_id = 'oss_default', **kwargs)


   Bases: :py:obj:`airflow.models.BaseOperator`

   This operator to delete an OSS object.

   :param key: key of the object to delete.
   :param region: OSS region
   :param bucket_name: OSS bucket name
   :param oss_conn_id: The Airflow connection used for OSS credentials.

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



