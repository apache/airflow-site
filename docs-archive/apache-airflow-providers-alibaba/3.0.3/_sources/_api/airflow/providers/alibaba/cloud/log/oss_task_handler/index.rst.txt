airflow.providers.alibaba.cloud.log.oss_task_handler
====================================================

.. py:module:: airflow.providers.alibaba.cloud.log.oss_task_handler


Classes
-------

.. autoapisummary::

   airflow.providers.alibaba.cloud.log.oss_task_handler.OSSRemoteLogIO
   airflow.providers.alibaba.cloud.log.oss_task_handler.OSSTaskHandler


Module Contents
---------------

.. py:class:: OSSRemoteLogIO(context=None)

   Bases: :py:obj:`airflow.utils.log.logging_mixin.LoggingMixin`


   Convenience super-class to have a logger configured with the class name.


   .. py:attribute:: base_log_folder
      :type:  pathlib.Path


   .. py:attribute:: remote_base
      :type:  str
      :value: ''



   .. py:attribute:: delete_local_copy
      :type:  bool
      :value: True



   .. py:attribute:: processors
      :value: ()



   .. py:method:: upload(path, ti)

      Upload the given log path to the remote storage.



   .. py:property:: base_folder


   .. py:property:: bucket_name


   .. py:property:: hook


   .. py:method:: read(relative_path, ti)


   .. py:method:: oss_log_exists(remote_log_location)

      Check if remote_log_location exists in remote storage.

      :param remote_log_location: log's location in remote storage
      :return: True if location exists else False



   .. py:method:: oss_read(remote_log_location, return_error=False)

      Return the log at the remote_log_location or '' if no logs are found or there is an error.

      :param remote_log_location: the log's location in remote storage
      :param return_error: if True, returns a string error message if an
          error occurs. Otherwise, returns '' when an error occurs.



   .. py:method:: oss_write(log, remote_log_location, append=True)

      Write the log to remote_log_location and return `True`; fails silently and returns `False` on error.

      :param log: the log to write to the remote_log_location
      :param remote_log_location: the log's location in remote storage
      :param append: if False, any existing log file is overwritten. If True,
          the new log is appended to any existing logs.
      :return: whether the log is successfully written to remote location or not.



.. py:class:: OSSTaskHandler(base_log_folder, oss_log_folder, **kwargs)

   Bases: :py:obj:`airflow.utils.log.file_task_handler.FileTaskHandler`, :py:obj:`airflow.utils.log.logging_mixin.LoggingMixin`


   OSSTaskHandler is a python log handler that handles and reads task instance logs.

   Extends airflow FileTaskHandler and uploads to and reads from OSS remote storage.


   .. py:attribute:: log_relative_path
      :value: ''



   .. py:attribute:: closed
      :value: False



   .. py:attribute:: upload_on_close
      :value: True



   .. py:attribute:: delete_local_copy


   .. py:attribute:: io


   .. py:method:: set_context(ti)

      Set the context of the handler.



   .. py:method:: close()

      Close and upload local log file to remote storage OSS.



