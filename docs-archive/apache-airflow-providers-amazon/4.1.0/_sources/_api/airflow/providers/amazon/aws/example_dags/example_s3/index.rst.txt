:py:mod:`airflow.providers.amazon.aws.example_dags.example_s3`
==============================================================

.. py:module:: airflow.providers.amazon.aws.example_dags.example_s3


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.example_dags.example_s3.check_fn



Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.example_dags.example_s3.BUCKET_NAME
   airflow.providers.amazon.aws.example_dags.example_s3.BUCKET_NAME_2
   airflow.providers.amazon.aws.example_dags.example_s3.KEY
   airflow.providers.amazon.aws.example_dags.example_s3.KEY_2
   airflow.providers.amazon.aws.example_dags.example_s3.PREFIX
   airflow.providers.amazon.aws.example_dags.example_s3.DELIMITER
   airflow.providers.amazon.aws.example_dags.example_s3.TAG_KEY
   airflow.providers.amazon.aws.example_dags.example_s3.TAG_VALUE
   airflow.providers.amazon.aws.example_dags.example_s3.DATA


.. py:data:: BUCKET_NAME
   

   

.. py:data:: BUCKET_NAME_2
   

   

.. py:data:: KEY
   

   

.. py:data:: KEY_2
   

   

.. py:data:: PREFIX
   

   

.. py:data:: DELIMITER
   

   

.. py:data:: TAG_KEY
   

   

.. py:data:: TAG_VALUE
   

   

.. py:data:: DATA
   

   

.. py:function:: check_fn(files)

   Example of custom check: check if all files are bigger than ``1kB``

   :param files: List of S3 object attributes.
   :return: true if the criteria is met
   :rtype: bool


