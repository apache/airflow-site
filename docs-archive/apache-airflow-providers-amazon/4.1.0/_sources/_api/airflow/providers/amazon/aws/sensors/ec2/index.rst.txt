:py:mod:`airflow.providers.amazon.aws.sensors.ec2`
==================================================

.. py:module:: airflow.providers.amazon.aws.sensors.ec2


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.sensors.ec2.EC2InstanceStateSensor




.. py:class:: EC2InstanceStateSensor(*, target_state, instance_id, aws_conn_id = 'aws_default', region_name = None, **kwargs)

   Bases: :py:obj:`airflow.sensors.base.BaseSensorOperator`

   Check the state of the AWS EC2 instance until
   state of the instance become equal to the target state.

   .. seealso::
       For more information on how to use this sensor, take a look at the guide:
       :ref:`howto/sensor:EC2InstanceStateSensor`

   :param target_state: target state of instance
   :param instance_id: id of the AWS EC2 instance
   :param region_name: (optional) aws region name associated with the client

   .. py:attribute:: template_fields
      :annotation: :Sequence[str] = ['target_state', 'instance_id', 'region_name']

      

   .. py:attribute:: ui_color
      :annotation: = #cc8811

      

   .. py:attribute:: ui_fgcolor
      :annotation: = #ffffff

      

   .. py:attribute:: valid_states
      :annotation: = ['running', 'stopped', 'terminated']

      

   .. py:method:: poke(self, context)

      Function that the sensors defined while deriving this class should
      override.



