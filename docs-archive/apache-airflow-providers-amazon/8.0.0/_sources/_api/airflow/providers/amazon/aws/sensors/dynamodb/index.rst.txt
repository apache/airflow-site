:py:mod:`airflow.providers.amazon.aws.sensors.dynamodb`
=======================================================

.. py:module:: airflow.providers.amazon.aws.sensors.dynamodb


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.sensors.dynamodb.DynamoDBValueSensor




.. py:class:: DynamoDBValueSensor(table_name, partition_key_name, partition_key_value, attribute_name, attribute_value, sort_key_name = None, sort_key_value = None, aws_conn_id = DynamoDBHook.default_conn_name, region_name = None, **kwargs)

   Bases: :py:obj:`airflow.sensors.base.BaseSensorOperator`

   Waits for an attribute value to be present for an item in a DynamoDB table.

   :param partition_key_name: DynamoDB partition key name
   :param partition_key_value: DynamoDB partition key value
   :param attribute_name: DynamoDB attribute name
   :param attribute_value: DynamoDB attribute value
   :param sort_key_name: (optional) DynamoDB sort key name
   :param sort_key_value: (optional) DynamoDB sort key value

   .. py:method:: poke(context)

      Test DynamoDB item for matching attribute value


   .. py:method:: hook()

      Create and return a DynamoDBHook



