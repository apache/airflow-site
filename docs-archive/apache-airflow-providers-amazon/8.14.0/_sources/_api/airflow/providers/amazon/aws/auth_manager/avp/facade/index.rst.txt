:py:mod:`airflow.providers.amazon.aws.auth_manager.avp.facade`
==============================================================

.. py:module:: airflow.providers.amazon.aws.auth_manager.avp.facade


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.auth_manager.avp.facade.AwsAuthManagerAmazonVerifiedPermissionsFacade




.. py:class:: AwsAuthManagerAmazonVerifiedPermissionsFacade(context=None)


   Bases: :py:obj:`airflow.utils.log.logging_mixin.LoggingMixin`

   Facade for Amazon Verified Permissions.

   Used as an intermediate layer between AWS auth manager and Amazon Verified Permissions.

   .. py:method:: avp_client()

      Build Amazon Verified Permissions client.


   .. py:method:: avp_policy_store_id()

      Get the Amazon Verified Permission policy store ID from config.


   .. py:method:: is_authorized(*, method, entity_type, user, entity_id = None, entity_fetcher = None)

      Make an authorization decision against Amazon Verified Permissions.

      Check whether the user has permissions to access given resource.

      :param method: the method to perform
      :param entity_type: the entity type the user accesses
      :param user: the user
      :param entity_id: the entity ID the user accesses. If not provided, all entities of the type will be
          considered.
      :param entity_fetcher: function that returns list of entities to be passed to Amazon Verified
          Permissions. Only needed if some resource properties are used in the policies (e.g. DAG folder).



