:py:mod:`airflow.providers.amazon.aws.triggers.kinesis_analytics`
=================================================================

.. py:module:: airflow.providers.amazon.aws.triggers.kinesis_analytics


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.triggers.kinesis_analytics.KinesisAnalyticsV2ApplicationOperationCompleteTrigger




.. py:class:: KinesisAnalyticsV2ApplicationOperationCompleteTrigger(application_name, waiter_name, waiter_delay = 120, waiter_max_attempts = 75, aws_conn_id = 'aws_default', **kwargs)


   Bases: :py:obj:`airflow.providers.amazon.aws.triggers.base.AwsBaseWaiterTrigger`

   Trigger when a Managed Service for Apache Flink application Start or Stop is complete.

   :param application_name: Application name.
   :param waiter_name: The name of the waiter for stop or start application.
   :param waiter_delay: The amount of time in seconds to wait between attempts. (default: 120)
   :param waiter_max_attempts: The maximum number of attempts to be made. (default: 75)
   :param aws_conn_id: The Airflow connection used for AWS credentials.

   .. py:method:: hook()

      Override in subclasses to return the right hook.



