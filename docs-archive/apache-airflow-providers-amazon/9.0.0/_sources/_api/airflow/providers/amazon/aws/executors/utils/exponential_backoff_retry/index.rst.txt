:py:mod:`airflow.providers.amazon.aws.executors.utils.exponential_backoff_retry`
================================================================================

.. py:module:: airflow.providers.amazon.aws.executors.utils.exponential_backoff_retry


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.executors.utils.exponential_backoff_retry.calculate_next_attempt_delay
   airflow.providers.amazon.aws.executors.utils.exponential_backoff_retry.exponential_backoff_retry



Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.executors.utils.exponential_backoff_retry.log


.. py:data:: log

   

.. py:function:: calculate_next_attempt_delay(attempt_number, max_delay = 60 * 2, exponent_base = 4)

   Calculate the exponential backoff (in seconds) until the next attempt.

   :param attempt_number: Number of attempts since last success.
   :param max_delay: Maximum delay in seconds between retries. Default 120.
   :param exponent_base: Exponent base to calculate delay. Default 4.


.. py:function:: exponential_backoff_retry(last_attempt_time, attempts_since_last_successful, callable_function, max_delay = 60 * 2, max_attempts = -1, exponent_base = 4)

   Retry a callable function with exponential backoff between attempts if it raises an exception.

   :param last_attempt_time: Timestamp of last attempt call.
   :param attempts_since_last_successful: Number of attempts since last success.
   :param callable_function: Callable function that will be called if enough time has passed.
   :param max_delay: Maximum delay in seconds between retries. Default 120.
   :param max_attempts: Maximum number of attempts before giving up. Default -1 (no limit).
   :param exponent_base: Exponent base to calculate delay. Default 4.


