:py:mod:`airflow.providers.amazon.aws.hooks.glue_databrew`
==========================================================

.. py:module:: airflow.providers.amazon.aws.hooks.glue_databrew


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.hooks.glue_databrew.GlueDataBrewHook




.. py:class:: GlueDataBrewHook(*args, **kwargs)


   Bases: :py:obj:`airflow.providers.amazon.aws.hooks.base_aws.AwsBaseHook`

   Interact with AWS DataBrew.

   Additional arguments (such as ``aws_conn_id``) may be specified and
   are passed down to the underlying AwsBaseHook.

   .. seealso::
       - :class:`~airflow.providers.amazon.aws.hooks.base_aws.AwsBaseHook`

   .. py:method:: job_completion(job_name, run_id, delay = 10, max_attempts = 60)

      Wait until Glue DataBrew job reaches terminal status.

      :param job_name: The name of the job being processed during this run.
      :param run_id: The unique identifier of the job run.
      :param delay: Time in seconds to delay between polls
      :param maxAttempts: Maximum number of attempts to poll for completion
      :return: job status


   .. py:method:: get_job_state(job_name, run_id)

      Get the status of a job run.

      :param job_name: The name of the job being processed during this run.
      :param run_id: The unique identifier of the job run.
      :return: State of the job run.
          'STARTING'|'RUNNING'|'STOPPING'|'STOPPED'|'SUCCEEDED'|'FAILED'|'TIMEOUT'



