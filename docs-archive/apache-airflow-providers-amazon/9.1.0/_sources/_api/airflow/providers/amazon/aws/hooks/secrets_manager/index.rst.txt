:py:mod:`airflow.providers.amazon.aws.hooks.secrets_manager`
============================================================

.. py:module:: airflow.providers.amazon.aws.hooks.secrets_manager


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.hooks.secrets_manager.SecretsManagerHook




.. py:class:: SecretsManagerHook(*args, **kwargs)


   Bases: :py:obj:`airflow.providers.amazon.aws.hooks.base_aws.AwsBaseHook`

   Interact with Amazon SecretsManager Service.

   Provide thin wrapper around
   :external+boto3:py:class:`boto3.client("secretsmanager") <SecretsManager.Client>`.

   Additional arguments (such as ``aws_conn_id``) may be specified and
   are passed down to the underlying AwsBaseHook.

   .. seealso::
       - :class:`airflow.providers.amazon.aws.hooks.base_aws.AwsBaseHook`

   .. py:method:: get_secret(secret_name)

      Retrieve secret value from AWS Secrets Manager as a str or bytes.

      The value reflects format it stored in the AWS Secrets Manager.

      .. seealso::
          - :external+boto3:py:meth:`SecretsManager.Client.get_secret_value`

      :param secret_name: name of the secrets.
      :return: Union[str, bytes] with the information about the secrets


   .. py:method:: get_secret_as_dict(secret_name)

      Retrieve secret value from AWS Secrets Manager as a dict.

      :param secret_name: name of the secrets.
      :return: dict with the information about the secrets



