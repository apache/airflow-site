airflow.providers.amazon.aws.operators.sagemaker_unified_studio
===============================================================

.. py:module:: airflow.providers.amazon.aws.operators.sagemaker_unified_studio

.. autoapi-nested-parse::

   This module contains the Amazon SageMaker Unified Studio Notebook operator.



Classes
-------

.. autoapisummary::

   airflow.providers.amazon.aws.operators.sagemaker_unified_studio.SageMakerNotebookOperator


Module Contents
---------------

.. py:class:: SageMakerNotebookOperator(task_id, input_config, output_config = None, compute = None, termination_condition = None, tags = None, wait_for_completion = True, waiter_delay = 10, waiter_max_attempts = 1440, deferrable = conf.getboolean('operators', 'default_deferrable', fallback=False), **kwargs)

   Bases: :py:obj:`airflow.models.BaseOperator`


   Provides Artifact execution functionality for Sagemaker Unified Studio Workflows.

   Examples:
    .. code-block:: python

       from airflow.providers.amazon.aws.operators.sagemaker_unified_studio import SageMakerNotebookOperator

       notebook_operator = SageMakerNotebookOperator(
           task_id="notebook_task",
           input_config={"input_path": "path/to/notebook.ipynb", "input_params": ""},
           output_config={"output_format": "ipynb"},
           wait_for_completion=True,
           waiter_delay=10,
           waiter_max_attempts=1440,
       )

   :param task_id: A unique, meaningful id for the task.
   :param input_config: Configuration for the input file. Input path should be specified as a relative path.
       The provided relative path will be automatically resolved to an absolute path within
       the context of the user's home directory in the IDE. Input params should be a dict.
       Example: {'input_path': 'folder/input/notebook.ipynb', 'input_params':{'key': 'value'}}
   :param output_config:  Configuration for the output format. It should include an output_format parameter to control
       the format of the notebook execution output.
       Example: {"output_formats": ["NOTEBOOK"]}
   :param compute: compute configuration to use for the artifact execution. This is a required attribute
       if the execution is on a remote compute.
       Example: { "InstanceType": "ml.m5.large", "VolumeSizeInGB": 30, "VolumeKmsKeyId": "", "ImageUri": "string", "ContainerEntrypoint": [ "string" ]}
   :param termination_condition: conditions to match to terminate the remote execution.
       Example: { "MaxRuntimeInSeconds": 3600 }
   :param tags: tags to be associated with the remote execution runs.
       Example: { "md_analytics": "logs" }
   :param wait_for_completion: Indicates whether to wait for the notebook execution to complete. If True, wait for completion; if False, don't wait.
   :param waiter_delay: Interval in seconds to check the notebook execution status.
   :param waiter_max_attempts: Number of attempts to wait before returning FAILED.
   :param deferrable: If True, the operator will wait asynchronously for the job to complete.
       This implies waiting for completion. This mode requires aiobotocore module to be installed.
       (default: False)

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:SageMakerNotebookOperator`


   .. py:attribute:: operator_extra_links


   .. py:attribute:: execution_name


   .. py:attribute:: input_config


   .. py:attribute:: output_config


   .. py:attribute:: compute


   .. py:attribute:: termination_condition


   .. py:attribute:: tags


   .. py:attribute:: wait_for_completion
      :value: True



   .. py:attribute:: waiter_delay
      :value: 10



   .. py:attribute:: waiter_max_attempts
      :value: 1440



   .. py:attribute:: deferrable
      :value: True



   .. py:attribute:: input_kwargs


   .. py:property:: notebook_execution_hook


   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



