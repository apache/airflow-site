airflow.providers.amazon.aws.sensors.sagemaker_unified_studio
=============================================================

.. py:module:: airflow.providers.amazon.aws.sensors.sagemaker_unified_studio

.. autoapi-nested-parse::

   This module contains the Amazon SageMaker Unified Studio Notebook sensor.



Classes
-------

.. autoapisummary::

   airflow.providers.amazon.aws.sensors.sagemaker_unified_studio.SageMakerNotebookSensor


Module Contents
---------------

.. py:class:: SageMakerNotebookSensor(*, execution_id, execution_name, **kwargs)

   Bases: :py:obj:`airflow.sensors.base.BaseSensorOperator`


   Waits for a Sagemaker Workflows Notebook execution to reach any of the status below.

   'FAILED', 'STOPPED', 'COMPLETED'

   :param execution_id: The Sagemaker Workflows Notebook running execution identifier
   :param execution_name: The Sagemaker Workflows Notebook unique execution name


   .. py:attribute:: execution_id


   .. py:attribute:: execution_name


   .. py:attribute:: success_state
      :value: ['COMPLETED']



   .. py:attribute:: in_progress_states
      :value: ['PENDING', 'RUNNING']



   .. py:method:: hook()


   .. py:method:: poke(context=None)

      Override when deriving this class.



   .. py:method:: execute(context)

      Derive when creating an operator.

      The main method to execute the task. Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



