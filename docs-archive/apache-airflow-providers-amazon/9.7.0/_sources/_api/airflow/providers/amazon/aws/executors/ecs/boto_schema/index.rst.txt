airflow.providers.amazon.aws.executors.ecs.boto_schema
======================================================

.. py:module:: airflow.providers.amazon.aws.executors.ecs.boto_schema

.. autoapi-nested-parse::

   AWS ECS Executor Boto Schema.

   Schemas for easily and consistently parsing boto responses.



Classes
-------

.. autoapisummary::

   airflow.providers.amazon.aws.executors.ecs.boto_schema.BotoContainerSchema
   airflow.providers.amazon.aws.executors.ecs.boto_schema.BotoTaskSchema
   airflow.providers.amazon.aws.executors.ecs.boto_schema.BotoFailureSchema
   airflow.providers.amazon.aws.executors.ecs.boto_schema.BotoRunTaskSchema
   airflow.providers.amazon.aws.executors.ecs.boto_schema.BotoDescribeTasksSchema


Module Contents
---------------

.. py:class:: BotoContainerSchema(*, only = None, exclude = (), many = None, context = None, load_only = (), dump_only = (), partial = None, unknown = None)

   Bases: :py:obj:`marshmallow.Schema`


   Botocore Serialization Object for ECS ``Container`` shape.

   Note that there are many more parameters, but the executor only needs the members listed below.


   .. py:attribute:: exit_code


   .. py:attribute:: last_status


   .. py:attribute:: name


   .. py:attribute:: reason


   .. py:attribute:: container_arn


   .. py:class:: Meta

      Options object for a Schema. See Schema.Meta for more details and valid values.


      .. py:attribute:: unknown
         :value: 'exclude'




.. py:class:: BotoTaskSchema(*, only = None, exclude = (), many = None, context = None, load_only = (), dump_only = (), partial = None, unknown = None)

   Bases: :py:obj:`marshmallow.Schema`


   Botocore Serialization Object for ECS ``Task`` shape.

   Note that there are many more parameters, but the executor only needs the members listed below.


   .. py:attribute:: task_arn


   .. py:attribute:: last_status


   .. py:attribute:: desired_status


   .. py:attribute:: containers


   .. py:attribute:: started_at


   .. py:attribute:: stopped_reason


   .. py:method:: make_task(data, **kwargs)

      Overwrite marshmallow load() to return an EcsExecutorTask instance instead of a dictionary.



   .. py:class:: Meta

      Options object for a Schema. See Schema.Meta for more details and valid values.


      .. py:attribute:: unknown
         :value: 'exclude'




.. py:class:: BotoFailureSchema(*, only = None, exclude = (), many = None, context = None, load_only = (), dump_only = (), partial = None, unknown = None)

   Bases: :py:obj:`marshmallow.Schema`


   Botocore Serialization Object for ECS ``Failure`` Shape.


   .. py:attribute:: arn


   .. py:attribute:: reason


   .. py:class:: Meta

      Options object for a Schema. See Schema.Meta for more details and valid values.


      .. py:attribute:: unknown
         :value: 'exclude'




.. py:class:: BotoRunTaskSchema(*, only = None, exclude = (), many = None, context = None, load_only = (), dump_only = (), partial = None, unknown = None)

   Bases: :py:obj:`marshmallow.Schema`


   Botocore Serialization Object for ECS ``RunTask`` Operation output.


   .. py:attribute:: tasks


   .. py:attribute:: failures


   .. py:class:: Meta

      Options object for a Schema. See Schema.Meta for more details and valid values.


      .. py:attribute:: unknown
         :value: 'exclude'




.. py:class:: BotoDescribeTasksSchema(*, only = None, exclude = (), many = None, context = None, load_only = (), dump_only = (), partial = None, unknown = None)

   Bases: :py:obj:`marshmallow.Schema`


   Botocore Serialization Object for ECS ``DescribeTask`` Operation output.


   .. py:attribute:: tasks


   .. py:attribute:: failures


   .. py:class:: Meta

      Options object for a Schema. See Schema.Meta for more details and valid values.


      .. py:attribute:: unknown
         :value: 'exclude'




