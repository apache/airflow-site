:py:mod:`airflow.providers.apache.druid.operators.druid`
========================================================

.. py:module:: airflow.providers.apache.druid.operators.druid


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.apache.druid.operators.druid.DruidOperator




.. py:class:: DruidOperator(*, json_index_file, druid_ingest_conn_id = 'druid_ingest_default', timeout = 1, max_ingestion_time = None, ingestion_type = IngestionType.BATCH, **kwargs)


   Bases: :py:obj:`airflow.models.BaseOperator`

   Allows to submit a task directly to druid.

   :param json_index_file: The filepath to the druid index specification
   :param druid_ingest_conn_id: The connection id of the Druid overlord which
       accepts index jobs
   :param timeout: The interval (in seconds) between polling the Druid job for the status
       of the ingestion job. Must be greater than or equal to 1
   :param max_ingestion_time: The maximum ingestion time before assuming the job failed
   :param ingestion_type: The ingestion type of the job. Could be IngestionType.Batch or IngestionType.MSQ

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('json_index_file',)

      

   .. py:attribute:: template_ext
      :type: Sequence[str]
      :value: ('.json',)

      

   .. py:attribute:: template_fields_renderers

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



