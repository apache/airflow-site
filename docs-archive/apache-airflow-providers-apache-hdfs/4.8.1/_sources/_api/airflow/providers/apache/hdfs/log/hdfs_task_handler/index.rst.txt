airflow.providers.apache.hdfs.log.hdfs_task_handler
===================================================

.. py:module:: airflow.providers.apache.hdfs.log.hdfs_task_handler


Classes
-------

.. autoapisummary::

   airflow.providers.apache.hdfs.log.hdfs_task_handler.HdfsRemoteLogIO
   airflow.providers.apache.hdfs.log.hdfs_task_handler.HdfsTaskHandler


Module Contents
---------------

.. py:class:: HdfsRemoteLogIO(context=None)

   Bases: :py:obj:`airflow.utils.log.logging_mixin.LoggingMixin`


   Convenience super-class to have a logger configured with the class name.


   .. py:attribute:: remote_base
      :type:  str


   .. py:attribute:: base_log_folder
      :type:  pathlib.Path


   .. py:attribute:: delete_local_copy
      :type:  bool


   .. py:attribute:: processors
      :value: ()



   .. py:method:: upload(path, ti)

      Upload the given log path to the remote storage.



   .. py:property:: hook

      Returns WebHDFSHook.



   .. py:method:: read(relative_path, ti)


.. py:class:: HdfsTaskHandler(base_log_folder, hdfs_log_folder, **kwargs)

   Bases: :py:obj:`airflow.utils.log.file_task_handler.FileTaskHandler`, :py:obj:`airflow.utils.log.logging_mixin.LoggingMixin`


   HdfsTaskHandler is a Python logging handler that handles and reads task instance logs.

   It extends airflow FileTaskHandler and uploads to and reads from HDFS.


   .. py:attribute:: handler
      :type:  logging.FileHandler | None
      :value: None



   .. py:attribute:: remote_base


   .. py:attribute:: log_relative_path
      :value: ''



   .. py:attribute:: closed
      :value: False



   .. py:attribute:: upload_on_close
      :value: True



   .. py:attribute:: io


   .. py:method:: set_context(ti, *, identifier = None)

      Provide task_instance context to airflow task handler.

      Generally speaking returns None.  But if attr `maintain_propagate` has
      been set to propagate, then returns sentinel MAINTAIN_PROPAGATE. This
      has the effect of overriding the default behavior to set `propagate`
      to False whenever set_context is called.  At time of writing, this
      functionality is only used in unit testing.

      :param ti: task instance object
      :param identifier: if set, adds suffix to log file. For use when relaying exceptional messages
          to task logs from a context other than task or trigger run



   .. py:method:: close()

      Close and upload local log file to HDFS.



