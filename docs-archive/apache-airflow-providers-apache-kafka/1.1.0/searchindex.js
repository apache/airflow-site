Search.setIndex({"docnames": ["_api/airflow/providers/apache/kafka/hooks/base/index", "_api/airflow/providers/apache/kafka/hooks/client/index", "_api/airflow/providers/apache/kafka/hooks/consume/index", "_api/airflow/providers/apache/kafka/hooks/index", "_api/airflow/providers/apache/kafka/hooks/produce/index", "_api/airflow/providers/apache/kafka/index", "_api/airflow/providers/apache/kafka/operators/consume/index", "_api/airflow/providers/apache/kafka/operators/index", "_api/airflow/providers/apache/kafka/operators/produce/index", "_api/airflow/providers/apache/kafka/sensors/index", "_api/airflow/providers/apache/kafka/sensors/kafka/index", "_api/airflow/providers/apache/kafka/triggers/await_message/index", "_api/airflow/providers/apache/kafka/triggers/index", "_api/tests/system/providers/apache/kafka/example_dag_event_listener/index", "_api/tests/system/providers/apache/kafka/example_dag_hello_kafka/index", "_api/tests/system/providers/apache/kafka/index", "commits", "connections/kafka", "hooks", "index", "installing-providers-from-sources", "operators/index", "sensors", "triggers"], "filenames": ["_api/airflow/providers/apache/kafka/hooks/base/index.rst", "_api/airflow/providers/apache/kafka/hooks/client/index.rst", "_api/airflow/providers/apache/kafka/hooks/consume/index.rst", "_api/airflow/providers/apache/kafka/hooks/index.rst", "_api/airflow/providers/apache/kafka/hooks/produce/index.rst", "_api/airflow/providers/apache/kafka/index.rst", "_api/airflow/providers/apache/kafka/operators/consume/index.rst", "_api/airflow/providers/apache/kafka/operators/index.rst", "_api/airflow/providers/apache/kafka/operators/produce/index.rst", "_api/airflow/providers/apache/kafka/sensors/index.rst", "_api/airflow/providers/apache/kafka/sensors/kafka/index.rst", "_api/airflow/providers/apache/kafka/triggers/await_message/index.rst", "_api/airflow/providers/apache/kafka/triggers/index.rst", "_api/tests/system/providers/apache/kafka/example_dag_event_listener/index.rst", "_api/tests/system/providers/apache/kafka/example_dag_hello_kafka/index.rst", "_api/tests/system/providers/apache/kafka/index.rst", "commits.rst", "connections/kafka.rst", "hooks.rst", "index.rst", "installing-providers-from-sources.rst", "operators/index.rst", "sensors.rst", "triggers.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.hooks.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.hooks.client</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.hooks.consume</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.hooks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.hooks.produce</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.operators.consume</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.operators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.operators.produce</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.sensors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.sensors.kafka</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.triggers.await_message</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.triggers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tests.system.providers.apache.kafka.example_dag_event_listener</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tests.system.providers.apache.kafka.example_dag_hello_kafka</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tests.system.providers.apache.kafka</span></code>", "Package apache-airflow-providers-apache-kafka", "Apache Kafka Connection", "Apache Kafka Hooks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apache-airflow-providers-apache-kafka</span></code>", "Installing from sources", "Apache Kafka Operators", "Apache Kafka Sensors", "Apache Kafka Triggers"], "terms": {"kafkabasehook": [0, 1, 2, 4], "kafka_config_id": [0, 1, 2, 4, 6, 8, 10, 11, 21, 22], "default_conn_nam": [0, 1, 2, 4], "arg": [0, 6], "kwarg": [0, 6, 8, 10], "sourc": [0, 1, 2, 4, 5, 6, 8, 10, 11, 13, 14, 19, 21, 22], "basehook": 0, "A": [0, 1, 2, 4, 6, 11, 17, 18, 22], "interact": [0, 1, 18], "paramet": [0, 1, 2, 4, 6, 8, 10, 11, 17, 18, 21, 22, 23], "The": [0, 1, 2, 4, 6, 8, 10, 11, 17, 19, 20, 21, 22, 23], "connect": [0, 1, 2, 4, 6, 8, 10, 11, 19], "object": [0, 1, 2, 4, 6, 8, 10, 11], "us": [0, 1, 2, 4, 6, 8, 10, 11, 16, 17, 18, 20], "default": [0, 1, 2, 4, 6, 8, 10, 11], "kafka_default": [0, 1, 2, 4, 6, 8, 10, 11, 17], "conn_name_attr": 0, "conn_typ": 0, "hook_nam": 0, "static": 0, "get_ui_field_behaviour": 0, "return": [0, 2, 4, 10, 11, 22, 23], "custom": 0, "field": [0, 17], "behaviour": 0, "get_conn": 0, "get": [0, 20], "configur": 0, "test_connect": 0, "test": [0, 17, 21, 22], "from": [0, 6, 10, 11, 17, 19, 21, 22, 23], "ui": [0, 17], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "7": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "dev0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "experiment": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "featur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "kafkaadminclienthook": 1, "base": [1, 2, 3, 4, 5, 6, 8, 10, 11, 18], "cluster": [1, 6, 10, 18, 21], "create_top": 1, "topic": [1, 2, 6, 8, 10, 11, 21, 22, 23], "creat": [1, 2, 4, 6, 8, 10, 18, 20, 21, 22], "sequenc": [1, 2, 6, 8, 10, 11], "ani": [1, 6, 8, 10, 11, 20, 22, 23], "list": [1, 2, 6, 16, 17, 19], "includ": [1, 16], "number": [1, 6, 21], "partit": 1, "replic": 1, "factor": 1, "format": 1, "topic_nam": 1, "kafkaconsumerhook": 2, "str": [2, 6, 8, 10, 11], "subscrib": [2, 6], "get_consum": 2, "ha": [2, 6, 17], "been": 2, "client": [3, 5, 11], "consum": [3, 5, 7, 10, 11, 18, 21, 22, 23], "produc": [3, 5, 7, 18, 21], "kafkaproducerhook": 4, "get_produc": 4, "send": 4, "messag": [4, 6, 8, 10, 11, 13, 14, 21, 22, 23], "hook": [5, 17, 19], "oper": [5, 10, 17, 19], "sensor": [5, 19], "trigger": [5, 10, 16, 19, 22], "await_messag": [5, 12], "__version__": [5, 16], "valid_commit_cad": [6, 10], "consumefromtopicoper": [6, 18], "apply_funct": [6, 10, 11, 21, 22], "none": [6, 8, 10, 11, 14, 20], "apply_function_batch": 6, "apply_function_arg": [6, 10, 11], "apply_function_kwarg": [6, 10, 11, 21], "commit_cad": [6, 21], "end_of_oper": 6, "max_messag": [6, 21], "max_batch_s": [6, 21], "1000": 6, "poll_timeout": [6, 8, 10, 11], "60": 6, "model": [6, 8, 10], "baseoper": [6, 8, 10], "": [6, 20, 21], "process": [6, 10, 11, 21, 23], "read": [6, 10, 21, 22], "batch": [6, 21], "them": [6, 21, 23], "user": [6, 20, 21], "suppli": [6, 21], "callabl": [6, 8, 10, 11, 21, 22, 23], "function": [6, 10, 11], "continu": [6, 10, 11, 21, 22], "until": [6, 10, 21, 22], "reach": [6, 10, 11, 21], "end": [6, 10, 11, 21], "log": [6, 8, 10, 11, 21], "maximum": [6, 21], "regex": [6, 10, 11], "pattern": 6, "should": [6, 8, 10, 11, 17, 20], "appli": [6, 8, 10, 11], "fetch": 6, "one": [6, 20, 21], "time": 6, "name": [6, 10], "dag": [6, 19], "file": [6, 20], "execut": [6, 8, 10], "delimit": 6, "can": [6, 19, 20], "intend": 6, "transact": 6, "workload": [6, 11], "where": 6, "expens": 6, "task": [6, 11], "might": 6, "call": [6, 8, 11], "befor": [6, 11], "after": [6, 8, 10, 11], "ar": [6, 11, 17, 19, 20], "taken": 6, "addit": [6, 8], "argument": [6, 8, 10, 11], "dict": [6, 8, 10, 11, 17], "kei": [6, 8, 10, 11, 17, 20, 21], "word": [6, 10, 11], "when": [6, 8, 10, 11, 18], "commit": [6, 10, 11, 16], "offset": [6, 10, 11], "never": 6, "end_of_batch": [6, 21], "made": [6, 20], "method": [6, 8, 10], "each": 6, "all": [6, 19], "close": 6, "without": 6, "int": 6, "total": 6, "impli": 6, "poll": [6, 8, 10, 11, 23], "float": [6, 8, 10, 11], "how": [6, 8, 10, 11, 20], "long": [6, 8, 10, 11], "wait": [6, 10, 11], "determin": [6, 10, 11], "more": [6, 8, 10, 17, 21], "avail": [6, 19, 20], "For": [6, 8, 16, 18, 20, 21, 22, 23], "inform": [6, 8, 11, 16, 18, 21, 22], "take": [6, 8, 18, 21, 22, 23], "look": [6, 8, 18, 21, 22, 23], "guid": [6, 8, 20], "blue": [6, 10], "ffefeb": [6, 10], "ui_color": [6, 10], "template_field": [6, 8, 10], "context": [6, 8, 10, 11], "main": [6, 8, 10, 20], "deriv": [6, 8, 10], "same": [6, 8, 10], "dictionari": [6, 8, 10], "render": [6, 8, 10], "jinja": [6, 8, 10], "templat": [6, 8, 10], "refer": [6, 8, 10], "get_template_context": [6, 8, 10], "local_logg": 8, "ack": 8, "err": 8, "msg": 8, "producetotopicoper": [8, 18], "producer_funct": [8, 14, 21], "producer_function_arg": 8, "producer_function_kwarg": 8, "delivery_callback": 8, "synchron": 8, "true": 8, "regist": [8, 10], "publish": [8, 10, 22], "gener": 8, "valu": [8, 17, 21], "pair": [8, 21], "product": 8, "keyword": [8, 11], "callback": 8, "deliveri": 8, "failur": 8, "bool": 8, "If": [8, 11, 17, 20, 22, 23], "write": 8, "fulli": 8, "delai": 8, "rais": [8, 10, 11, 22, 23], "airflowexcept": 8, "_description_": 8, "awaitmessagesensor": 10, "poll_interv": [10, 11], "5": [10, 11], "xcom_push_kei": [10, 22], "defer": [10, 11, 22], "specif": [10, 11, 22], "encount": [10, 22], "posit": [10, 22], "event": [10, 11, 22], "behavior": [10, 11], "follow": [10, 11, 20], "sleep": [10, 11], "data": [10, 11, 22, 23], "triggerev": [10, 11, 22, 23], "els": [10, 11], "next": [10, 11], "xcom": 10, "occur": 10, "As": 10, "dot": [10, 11], "notat": [10, 11], "string": [10, 11, 17], "arriv": [10, 11], "push": 10, "execute_complet": 10, "awaitmessagetriggerfunctionsensor": 10, "event_triggered_funct": [10, 22], "goe": 10, "back": 10, "onc": [10, 20, 22], "awaitmessagetrigg": [11, 18], "basetrigg": 11, "match": [11, 20], "criteria": [11, 22], "search": 11, "locat": 11, "In": 11, "python": [11, 17, 19, 20], "set": [11, 17], "request": 11, "second": 11, "serial": 11, "need": 11, "reconstruct": 11, "tupl": 11, "path": 11, "re": 11, "instanti": 11, "type": [11, 17], "async": 11, "run": [11, 20], "asynchron": 11, "yield": 11, "whenev": 11, "want": [11, 20], "fire": 11, "off": 11, "finish": 11, "singl": 11, "thu": 11, "immedi": 11, "like": 11, "resum": 11, "veri": [11, 17], "quickli": 11, "mai": [11, 16], "e": 11, "g": 11, "being": 11, "move": 11, "anoth": 11, "multi": 11, "wa": 11, "either": 11, "case": 11, "assum": [11, 17], "thei": 11, "persist": 11, "reli": 11, "cleanup": 11, "longer": 11, "load_connect": [13, 14], "t0": [13, 14], "await_funct": [13, 14, 22], "test_run": [13, 14], "default_arg": 14, "consumer_logg": 14, "consumer_funct": [14, 21], "prefix": [14, 21], "consumer_function_batch": 14, "hello_kafka": 14, "example_dag_event_listen": [15, 22], "example_dag_hello_kafka": [15, 21, 22], "detail": [16, 19, 20], "chang": 16, "version": [16, 19, 20], "high": 16, "level": 16, "changelog": 16, "see": [16, 19, 21, 22], "latest": 16, "2023": 16, "05": 16, "18": 16, "subject": 16, "abea189022": 16, "31393": 16, "f5aed58d9f": 16, "fix": 16, "circular": 16, "import": [16, 20], "error": 16, "caus": 16, "check": [16, 17, 20], "31379": 16, "d9ff55cf6d": 16, "16": 16, "prepar": 16, "doc": 16, "wave": 16, "31252": 16, "eef5bc7f16": 16, "03": 16, "add": 16, "full": [16, 17], "autom": 16, "min": 16, "30994": 16, "a7eb32a5b2": 16, "04": 16, "30": 16, "bump": [16, 19], "minimum": [16, 17, 19], "30917": [16, 19], "9409446097": 16, "24": 16, "cli": 16, "cmd": 16, "info": 16, "30822": 16, "c585ad51c5": 16, "22": 16, "upgrad": 16, "ruff": 16, "262": 16, "30809": 16, "21": 16, "522661b6ad": 16, "30175": 16, "via": [17, 19, 20], "confluent": [17, 19], "packag": 17, "minim": 17, "than": 17, "most": [17, 20], "trivial": 17, "json": 17, "serializ": 17, "provid": [17, 20, 21, 22, 23], "extra": 17, "describ": [17, 20], "librari": 17, "you": [17, 19, 20], "defin": [17, 22], "airflow": [17, 20], "renam": 17, "config": [17, 18], "bootstrap": 17, "server": [17, 20], "exist": [17, 19], "valid": [17, 20], "class": [18, 19], "your": 18, "own": 18, "definit": [18, 21, 22, 23], "further": [18, 21, 22], "admin": 18, "document": [18, 21, 22], "api": 19, "exampl": [19, 20], "pypi": 19, "repositori": 19, "releas": 19, "top": [19, 20], "below": [19, 20], "support": 19, "pip": [19, 20], "4": 19, "asgiref": 19, "8": 19, "onli": 19, "explain": 19, "polici": 19, "initi": 19, "page": 20, "download": 20, "apach": 20, "kafka": 20, "offici": 20, "also": 20, "choos": 20, "differ": 20, "select": 20, "drop": 20, "down": 20, "left": 20, "sdist": 20, "whl": 20, "origin": 20, "checksum": 20, "signatur": 20, "softwar": 20, "foundat": 20, "asc": 20, "sha512": 20, "those": 20, "code": 20, "link": 20, "abov": [20, 22], "contain": 20, "build": 20, "pgp": 20, "It": 20, "essenti": 20, "sha": 20, "gpg": 20, "pleas": 20, "well": 20, "relev": 20, "distribut": 20, "recommend": 20, "directori": 20, "mirror": 20, "pgpk": 20, "ka": 20, "To": 20, "binari": 20, "pgpv": 20, "tar": 20, "gz": 20, "sat": 20, "11": 20, "sep": 20, "12": 20, "49": 20, "54": 20, "2021": 20, "bst": 20, "rsa": 20, "cde15c6e4d3a8ec4ecf4ba4b6674e08ad7de406f": 20, "issuer": 20, "kaxilnaik": 20, "org": 20, "good": 20, "kaxil": 20, "naik": 20, "unknown": 20, "aka": 20, "gmail": 20, "com": 20, "warn": 20, "id": 20, "certifi": 20, "trust": 20, "There": 20, "indic": 20, "belong": 20, "owner": 20, "primari": 20, "fingerprint": 20, "cde1": 20, "5c6e": 20, "4d3a": 20, "8ec4": 20, "ecf4": 20, "ba4b": 20, "6674": 20, "e08a": 20, "d7de": 20, "406f": 20, "correct": 20, "do": 20, "worri": 20, "about": 20, "certif": 20, "manag": 20, "self": 20, "sign": 20, "why": 20, "By": 20, "previou": 20, "step": 20, "know": 20, "alreadi": 20, "sum": 20, "shasum": 20, "512": 20, "diff": 20, "local": 20, "script": 20, "bin": 20, "bash": 20, "package_vers": 20, "package_nam": 20, "provider_download_dir": 20, "mktemp": 20, "d": 20, "dep": 20, "dest": 20, "curl": 20, "http": 20, "apache_airflow_providers_apache_kafka": 20, "py3": 20, "l": 20, "o": 20, "echo": 20, "la": 20, "instruct": 20, "chapter": 20, "remov": 20, "temporari": 20, "folder": 20, "system": [21, 22], "py": [21, 22], "t2": 21, "task_id": [21, 22], "consume_from_top": 21, "test_1": [21, 22], "10": 21, "t1": 21, "3": 21, "produce_to_top": 21, "fulfil": 22, "found": 22, "complet": 22, "successfulli": 22, "t5": 22, "awaiting_messag": 22, "retrieved_messag": 22, "similar": 22, "its": 22, "afterward": 22, "again": 22, "listen_for_messag": 22, "fizz_buzz_2": 22, "fizz_buzz": 22, "pick_downstream_dag": 22}, "objects": {"airflow.providers.apache": [[5, 0, 0, "-", "kafka"]], "airflow.providers.apache.kafka": [[5, 1, 1, "", "__version__"], [3, 0, 0, "-", "hooks"], [7, 0, 0, "-", "operators"], [9, 0, 0, "-", "sensors"], [12, 0, 0, "-", "triggers"]], "airflow.providers.apache.kafka.hooks": [[0, 0, 0, "-", "base"], [1, 0, 0, "-", "client"], [2, 0, 0, "-", "consume"], [4, 0, 0, "-", "produce"]], "airflow.providers.apache.kafka.hooks.base": [[0, 2, 1, "", "KafkaBaseHook"]], "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook": [[0, 3, 1, "", "conn_name_attr"], [0, 3, 1, "", "conn_type"], [0, 3, 1, "", "default_conn_name"], [0, 4, 1, "", "get_conn"], [0, 4, 1, "", "get_ui_field_behaviour"], [0, 3, 1, "", "hook_name"], [0, 4, 1, "", "test_connection"]], "airflow.providers.apache.kafka.hooks.client": [[1, 2, 1, "", "KafkaAdminClientHook"]], "airflow.providers.apache.kafka.hooks.client.KafkaAdminClientHook": [[1, 4, 1, "", "create_topic"]], "airflow.providers.apache.kafka.hooks.consume": [[2, 2, 1, "", "KafkaConsumerHook"]], "airflow.providers.apache.kafka.hooks.consume.KafkaConsumerHook": [[2, 4, 1, "", "get_consumer"]], "airflow.providers.apache.kafka.hooks.produce": [[4, 2, 1, "", "KafkaProducerHook"]], "airflow.providers.apache.kafka.hooks.produce.KafkaProducerHook": [[4, 4, 1, "", "get_producer"]], "airflow.providers.apache.kafka.operators": [[6, 0, 0, "-", "consume"], [8, 0, 0, "-", "produce"]], "airflow.providers.apache.kafka.operators.consume": [[6, 2, 1, "", "ConsumeFromTopicOperator"], [6, 1, 1, "", "VALID_COMMIT_CADENCE"]], "airflow.providers.apache.kafka.operators.consume.ConsumeFromTopicOperator": [[6, 3, 1, "", "BLUE"], [6, 4, 1, "", "execute"], [6, 3, 1, "", "template_fields"], [6, 3, 1, "", "ui_color"]], "airflow.providers.apache.kafka.operators.produce": [[8, 2, 1, "", "ProduceToTopicOperator"], [8, 5, 1, "", "acked"], [8, 1, 1, "", "local_logger"]], "airflow.providers.apache.kafka.operators.produce.ProduceToTopicOperator": [[8, 4, 1, "", "execute"], [8, 3, 1, "", "template_fields"]], "airflow.providers.apache.kafka.sensors": [[10, 0, 0, "-", "kafka"]], "airflow.providers.apache.kafka.sensors.kafka": [[10, 2, 1, "", "AwaitMessageSensor"], [10, 2, 1, "", "AwaitMessageTriggerFunctionSensor"], [10, 1, 1, "", "VALID_COMMIT_CADENCE"]], "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageSensor": [[10, 3, 1, "", "BLUE"], [10, 4, 1, "", "execute"], [10, 4, 1, "", "execute_complete"], [10, 3, 1, "", "template_fields"], [10, 3, 1, "", "ui_color"]], "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageTriggerFunctionSensor": [[10, 3, 1, "", "BLUE"], [10, 4, 1, "", "execute"], [10, 4, 1, "", "execute_complete"], [10, 3, 1, "", "template_fields"], [10, 3, 1, "", "ui_color"]], "airflow.providers.apache.kafka.triggers": [[11, 0, 0, "-", "await_message"]], "airflow.providers.apache.kafka.triggers.await_message": [[11, 2, 1, "", "AwaitMessageTrigger"]], "airflow.providers.apache.kafka.triggers.await_message.AwaitMessageTrigger": [[11, 4, 1, "", "run"], [11, 4, 1, "", "serialize"]], "tests.system.providers.apache": [[15, 0, 0, "-", "kafka"]], "tests.system.providers.apache.kafka": [[13, 0, 0, "-", "example_dag_event_listener"], [14, 0, 0, "-", "example_dag_hello_kafka"]], "tests.system.providers.apache.kafka.example_dag_event_listener": [[13, 5, 1, "", "await_function"], [13, 5, 1, "", "load_connections"], [13, 1, 1, "", "t0"], [13, 1, 1, "", "test_run"]], "tests.system.providers.apache.kafka.example_dag_hello_kafka": [[14, 5, 1, "", "await_function"], [14, 5, 1, "", "consumer_function"], [14, 5, 1, "", "consumer_function_batch"], [14, 1, 1, "", "consumer_logger"], [14, 1, 1, "", "default_args"], [14, 5, 1, "", "hello_kafka"], [14, 5, 1, "", "load_connections"], [14, 5, 1, "", "producer_function"], [14, 1, 1, "", "t0"], [14, 1, 1, "", "test_run"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"]}, "titleterms": {"airflow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19], "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19], "apach": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23], "kafka": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23], "hook": [0, 1, 2, 3, 4, 18], "base": 0, "modul": [0, 1, 2, 4, 6, 8, 10, 11, 13, 14], "content": [0, 1, 2, 4, 5, 6, 8, 10, 11, 13, 14, 19], "class": [0, 1, 2, 4, 6, 8, 10, 11], "client": 1, "consum": [2, 6], "submodul": [3, 7, 9, 12, 15], "produc": [4, 8], "subpackag": 5, "packag": [5, 16, 19, 20], "oper": [6, 7, 8, 21], "attribut": [6, 8, 10, 13, 14], "function": [8, 13, 14], "sensor": [9, 10, 22], "trigger": [11, 12, 23], "await_messag": 11, "test": [13, 14, 15], "system": [13, 14, 15], "example_dag_event_listen": 13, "example_dag_hello_kafka": 14, "1": [16, 19], "0": [16, 19], "connect": 17, "default": 17, "id": 17, "configur": 17, "kafkahook": 18, "kafkaadminclienthook": 18, "refer": [18, 19, 21, 22], "kafkaconsumerhook": 18, "kafkaproducerhook": 18, "guid": 19, "resourc": 19, "commit": 19, "instal": [19, 20], "requir": 19, "changelog": 19, "misc": 19, "from": 20, "sourc": 20, "releas": 20, "integr": 20, "verifi": 20, "pypi": 20, "consumefromtopicoper": 21, "us": [21, 22], "producetotopicoper": 21, "awaitmessagesensor": 22, "awaitmessagetriggerfunctionsensor": 22, "awaitmessagetrigg": 23}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"airflow.providers.apache.kafka.hooks.base": [[0, "module-airflow.providers.apache.kafka.hooks.base"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [4, "module-contents"], [6, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [13, "module-contents"], [14, "module-contents"]], "Classes": [[0, "classes"], [1, "classes"], [2, "classes"], [4, "classes"], [6, "classes"], [8, "classes"], [10, "classes"], [11, "classes"]], "airflow.providers.apache.kafka.hooks.client": [[1, "module-airflow.providers.apache.kafka.hooks.client"]], "airflow.providers.apache.kafka.hooks.consume": [[2, "module-airflow.providers.apache.kafka.hooks.consume"]], "airflow.providers.apache.kafka.hooks": [[3, "module-airflow.providers.apache.kafka.hooks"]], "Submodules": [[3, "submodules"], [7, "submodules"], [9, "submodules"], [12, "submodules"], [15, "submodules"]], "airflow.providers.apache.kafka.hooks.produce": [[4, "module-airflow.providers.apache.kafka.hooks.produce"]], "airflow.providers.apache.kafka": [[5, "module-airflow.providers.apache.kafka"]], "Subpackages": [[5, "subpackages"]], "Package Contents": [[5, "package-contents"]], "airflow.providers.apache.kafka.operators.consume": [[6, "module-airflow.providers.apache.kafka.operators.consume"]], "Attributes": [[6, "attributes"], [8, "attributes"], [10, "attributes"], [13, "attributes"], [14, "attributes"]], "airflow.providers.apache.kafka.operators": [[7, "module-airflow.providers.apache.kafka.operators"]], "airflow.providers.apache.kafka.operators.produce": [[8, "module-airflow.providers.apache.kafka.operators.produce"]], "Functions": [[8, "functions"], [13, "functions"], [14, "functions"]], "airflow.providers.apache.kafka.sensors": [[9, "module-airflow.providers.apache.kafka.sensors"]], "airflow.providers.apache.kafka.sensors.kafka": [[10, "module-airflow.providers.apache.kafka.sensors.kafka"]], "airflow.providers.apache.kafka.triggers.await_message": [[11, "module-airflow.providers.apache.kafka.triggers.await_message"]], "airflow.providers.apache.kafka.triggers": [[12, "module-airflow.providers.apache.kafka.triggers"]], "tests.system.providers.apache.kafka.example_dag_event_listener": [[13, "module-tests.system.providers.apache.kafka.example_dag_event_listener"]], "tests.system.providers.apache.kafka.example_dag_hello_kafka": [[14, "module-tests.system.providers.apache.kafka.example_dag_hello_kafka"]], "tests.system.providers.apache.kafka": [[15, "module-tests.system.providers.apache.kafka"]], "Package apache-airflow-providers-apache-kafka": [[16, "package-apache-airflow-providers-apache-kafka"], [19, "package-apache-airflow-providers-apache-kafka"]], "1.1.0": [[16, "id1"], [19, "id1"]], "1.0.0": [[16, "id3"], [19, "id2"]], "Apache Kafka Connection": [[17, "apache-kafka-connection"]], "Default Connection IDs": [[17, "default-connection-ids"]], "Configuring the Connection": [[17, "configuring-the-connection"]], "Apache Kafka Hooks": [[18, "apache-kafka-hooks"]], "KafkaHook": [[18, "kafkahook"]], "KafkaAdminClientHook": [[18, "kafkaadminclienthook"]], "Reference": [[18, "reference"], [18, "id1"], [18, "id2"], [21, "reference"], [21, "id2"], [22, "reference"], [22, "id2"]], "KafkaConsumerHook": [[18, "kafkaconsumerhook"]], "KafkaProducerHook": [[18, "kafkaproducerhook"]], "apache-airflow-providers-apache-kafka": [[19, "apache-airflow-providers-apache-kafka"]], "Content": [[19, "content"]], "Guides": [[19, null]], "References": [[19, null]], "Resources": [[19, null]], "Commits": [[19, null]], "Provider package": [[19, "provider-package"]], "Installation": [[19, "installation"]], "Requirements": [[19, "requirements"]], "Changelog": [[19, "changelog"]], "Misc": [[19, "misc"]], "Installing from sources": [[20, "installing-from-sources"]], "Released packages": [[20, "released-packages"]], "Release integrity": [[20, "release-integrity"]], "Verifying PyPI releases": [[20, "verifying-pypi-releases"]], "Apache Kafka Operators": [[21, "apache-kafka-operators"]], "ConsumeFromTopicOperator": [[21, "consumefromtopicoperator"]], "Using the operator": [[21, "using-the-operator"], [21, "id1"]], "ProduceToTopicOperator": [[21, "producetotopicoperator"]], "Apache Kafka Sensors": [[22, "apache-kafka-sensors"]], "AwaitMessageSensor": [[22, "awaitmessagesensor"]], "Using the sensor": [[22, "using-the-sensor"], [22, "id1"]], "AwaitMessageTriggerFunctionSensor": [[22, "awaitmessagetriggerfunctionsensor"]], "Apache Kafka Triggers": [[23, "apache-kafka-triggers"]], "AwaitMessageTrigger": [[23, "awaitmessagetrigger"]]}, "indexentries": {"kafkabasehook (class in airflow.providers.apache.kafka.hooks.base)": [[0, "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook"]], "airflow.providers.apache.kafka.hooks.base": [[0, "module-airflow.providers.apache.kafka.hooks.base"]], "conn_name_attr (airflow.providers.apache.kafka.hooks.base.kafkabasehook attribute)": [[0, "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook.conn_name_attr"]], "conn_type (airflow.providers.apache.kafka.hooks.base.kafkabasehook attribute)": [[0, "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook.conn_type"]], "default_conn_name (airflow.providers.apache.kafka.hooks.base.kafkabasehook attribute)": [[0, "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook.default_conn_name"]], "get_conn() (airflow.providers.apache.kafka.hooks.base.kafkabasehook method)": [[0, "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook.get_conn"]], "get_ui_field_behaviour() (airflow.providers.apache.kafka.hooks.base.kafkabasehook static method)": [[0, "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook.get_ui_field_behaviour"]], "hook_name (airflow.providers.apache.kafka.hooks.base.kafkabasehook attribute)": [[0, "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook.hook_name"]], "module": [[0, "module-airflow.providers.apache.kafka.hooks.base"], [1, "module-airflow.providers.apache.kafka.hooks.client"], [2, "module-airflow.providers.apache.kafka.hooks.consume"], [3, "module-airflow.providers.apache.kafka.hooks"], [4, "module-airflow.providers.apache.kafka.hooks.produce"], [5, "module-airflow.providers.apache.kafka"], [6, "module-airflow.providers.apache.kafka.operators.consume"], [7, "module-airflow.providers.apache.kafka.operators"], [8, "module-airflow.providers.apache.kafka.operators.produce"], [9, "module-airflow.providers.apache.kafka.sensors"], [10, "module-airflow.providers.apache.kafka.sensors.kafka"], [11, "module-airflow.providers.apache.kafka.triggers.await_message"], [12, "module-airflow.providers.apache.kafka.triggers"], [13, "module-tests.system.providers.apache.kafka.example_dag_event_listener"], [14, "module-tests.system.providers.apache.kafka.example_dag_hello_kafka"], [15, "module-tests.system.providers.apache.kafka"]], "test_connection() (airflow.providers.apache.kafka.hooks.base.kafkabasehook method)": [[0, "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook.test_connection"]], "kafkaadminclienthook (class in airflow.providers.apache.kafka.hooks.client)": [[1, "airflow.providers.apache.kafka.hooks.client.KafkaAdminClientHook"]], "airflow.providers.apache.kafka.hooks.client": [[1, "module-airflow.providers.apache.kafka.hooks.client"]], "create_topic() (airflow.providers.apache.kafka.hooks.client.kafkaadminclienthook method)": [[1, "airflow.providers.apache.kafka.hooks.client.KafkaAdminClientHook.create_topic"]], "kafkaconsumerhook (class in airflow.providers.apache.kafka.hooks.consume)": [[2, "airflow.providers.apache.kafka.hooks.consume.KafkaConsumerHook"]], "airflow.providers.apache.kafka.hooks.consume": [[2, "module-airflow.providers.apache.kafka.hooks.consume"]], "get_consumer() (airflow.providers.apache.kafka.hooks.consume.kafkaconsumerhook method)": [[2, "airflow.providers.apache.kafka.hooks.consume.KafkaConsumerHook.get_consumer"]], "airflow.providers.apache.kafka.hooks": [[3, "module-airflow.providers.apache.kafka.hooks"]], "kafkaproducerhook (class in airflow.providers.apache.kafka.hooks.produce)": [[4, "airflow.providers.apache.kafka.hooks.produce.KafkaProducerHook"]], "airflow.providers.apache.kafka.hooks.produce": [[4, "module-airflow.providers.apache.kafka.hooks.produce"]], "get_producer() (airflow.providers.apache.kafka.hooks.produce.kafkaproducerhook method)": [[4, "airflow.providers.apache.kafka.hooks.produce.KafkaProducerHook.get_producer"]], "__version__ (in module airflow.providers.apache.kafka)": [[5, "airflow.providers.apache.kafka.__version__"]], "airflow.providers.apache.kafka": [[5, "module-airflow.providers.apache.kafka"]], "blue (airflow.providers.apache.kafka.operators.consume.consumefromtopicoperator attribute)": [[6, "airflow.providers.apache.kafka.operators.consume.ConsumeFromTopicOperator.BLUE"]], "consumefromtopicoperator (class in airflow.providers.apache.kafka.operators.consume)": [[6, "airflow.providers.apache.kafka.operators.consume.ConsumeFromTopicOperator"]], "valid_commit_cadence (in module airflow.providers.apache.kafka.operators.consume)": [[6, "airflow.providers.apache.kafka.operators.consume.VALID_COMMIT_CADENCE"]], "airflow.providers.apache.kafka.operators.consume": [[6, "module-airflow.providers.apache.kafka.operators.consume"]], "execute() (airflow.providers.apache.kafka.operators.consume.consumefromtopicoperator method)": [[6, "airflow.providers.apache.kafka.operators.consume.ConsumeFromTopicOperator.execute"]], "template_fields (airflow.providers.apache.kafka.operators.consume.consumefromtopicoperator attribute)": [[6, "airflow.providers.apache.kafka.operators.consume.ConsumeFromTopicOperator.template_fields"]], "ui_color (airflow.providers.apache.kafka.operators.consume.consumefromtopicoperator attribute)": [[6, "airflow.providers.apache.kafka.operators.consume.ConsumeFromTopicOperator.ui_color"]], "airflow.providers.apache.kafka.operators": [[7, "module-airflow.providers.apache.kafka.operators"]], "producetotopicoperator (class in airflow.providers.apache.kafka.operators.produce)": [[8, "airflow.providers.apache.kafka.operators.produce.ProduceToTopicOperator"]], "acked() (in module airflow.providers.apache.kafka.operators.produce)": [[8, "airflow.providers.apache.kafka.operators.produce.acked"]], "airflow.providers.apache.kafka.operators.produce": [[8, "module-airflow.providers.apache.kafka.operators.produce"]], "execute() (airflow.providers.apache.kafka.operators.produce.producetotopicoperator method)": [[8, "airflow.providers.apache.kafka.operators.produce.ProduceToTopicOperator.execute"]], "local_logger (in module airflow.providers.apache.kafka.operators.produce)": [[8, "airflow.providers.apache.kafka.operators.produce.local_logger"]], "template_fields (airflow.providers.apache.kafka.operators.produce.producetotopicoperator attribute)": [[8, "airflow.providers.apache.kafka.operators.produce.ProduceToTopicOperator.template_fields"]], "airflow.providers.apache.kafka.sensors": [[9, "module-airflow.providers.apache.kafka.sensors"]], "awaitmessagesensor (class in airflow.providers.apache.kafka.sensors.kafka)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageSensor"]], "awaitmessagetriggerfunctionsensor (class in airflow.providers.apache.kafka.sensors.kafka)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageTriggerFunctionSensor"]], "blue (airflow.providers.apache.kafka.sensors.kafka.awaitmessagesensor attribute)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageSensor.BLUE"]], "blue (airflow.providers.apache.kafka.sensors.kafka.awaitmessagetriggerfunctionsensor attribute)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageTriggerFunctionSensor.BLUE"]], "valid_commit_cadence (in module airflow.providers.apache.kafka.sensors.kafka)": [[10, "airflow.providers.apache.kafka.sensors.kafka.VALID_COMMIT_CADENCE"]], "airflow.providers.apache.kafka.sensors.kafka": [[10, "module-airflow.providers.apache.kafka.sensors.kafka"]], "execute() (airflow.providers.apache.kafka.sensors.kafka.awaitmessagesensor method)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageSensor.execute"]], "execute() (airflow.providers.apache.kafka.sensors.kafka.awaitmessagetriggerfunctionsensor method)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageTriggerFunctionSensor.execute"]], "execute_complete() (airflow.providers.apache.kafka.sensors.kafka.awaitmessagesensor method)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageSensor.execute_complete"]], "execute_complete() (airflow.providers.apache.kafka.sensors.kafka.awaitmessagetriggerfunctionsensor method)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageTriggerFunctionSensor.execute_complete"]], "template_fields (airflow.providers.apache.kafka.sensors.kafka.awaitmessagesensor attribute)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageSensor.template_fields"]], "template_fields (airflow.providers.apache.kafka.sensors.kafka.awaitmessagetriggerfunctionsensor attribute)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageTriggerFunctionSensor.template_fields"]], "ui_color (airflow.providers.apache.kafka.sensors.kafka.awaitmessagesensor attribute)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageSensor.ui_color"]], "ui_color (airflow.providers.apache.kafka.sensors.kafka.awaitmessagetriggerfunctionsensor attribute)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageTriggerFunctionSensor.ui_color"]], "awaitmessagetrigger (class in airflow.providers.apache.kafka.triggers.await_message)": [[11, "airflow.providers.apache.kafka.triggers.await_message.AwaitMessageTrigger"]], "airflow.providers.apache.kafka.triggers.await_message": [[11, "module-airflow.providers.apache.kafka.triggers.await_message"]], "run() (airflow.providers.apache.kafka.triggers.await_message.awaitmessagetrigger method)": [[11, "airflow.providers.apache.kafka.triggers.await_message.AwaitMessageTrigger.run"]], "serialize() (airflow.providers.apache.kafka.triggers.await_message.awaitmessagetrigger method)": [[11, "airflow.providers.apache.kafka.triggers.await_message.AwaitMessageTrigger.serialize"]], "airflow.providers.apache.kafka.triggers": [[12, "module-airflow.providers.apache.kafka.triggers"]], "await_function() (in module tests.system.providers.apache.kafka.example_dag_event_listener)": [[13, "tests.system.providers.apache.kafka.example_dag_event_listener.await_function"]], "load_connections() (in module tests.system.providers.apache.kafka.example_dag_event_listener)": [[13, "tests.system.providers.apache.kafka.example_dag_event_listener.load_connections"]], "t0 (in module tests.system.providers.apache.kafka.example_dag_event_listener)": [[13, "tests.system.providers.apache.kafka.example_dag_event_listener.t0"]], "test_run (in module tests.system.providers.apache.kafka.example_dag_event_listener)": [[13, "tests.system.providers.apache.kafka.example_dag_event_listener.test_run"]], "tests.system.providers.apache.kafka.example_dag_event_listener": [[13, "module-tests.system.providers.apache.kafka.example_dag_event_listener"]], "await_function() (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.await_function"]], "consumer_function() (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.consumer_function"]], "consumer_function_batch() (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.consumer_function_batch"]], "consumer_logger (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.consumer_logger"]], "default_args (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.default_args"]], "hello_kafka() (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.hello_kafka"]], "load_connections() (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.load_connections"]], "producer_function() (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.producer_function"]], "t0 (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.t0"]], "test_run (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.test_run"]], "tests.system.providers.apache.kafka.example_dag_hello_kafka": [[14, "module-tests.system.providers.apache.kafka.example_dag_hello_kafka"]], "tests.system.providers.apache.kafka": [[15, "module-tests.system.providers.apache.kafka"]]}})