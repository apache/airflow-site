airflow.providers.atlassian.jira.notifications.jira
===================================================

.. py:module:: airflow.providers.atlassian.jira.notifications.jira


Attributes
----------

.. autoapisummary::

   airflow.providers.atlassian.jira.notifications.jira.send_jira_notification


Classes
-------

.. autoapisummary::

   airflow.providers.atlassian.jira.notifications.jira.JiraNotifier


Module Contents
---------------

.. py:class:: JiraNotifier(*, jira_conn_id = JiraHook.default_conn_name, proxies = None, description, summary, project_id, issue_type_id, labels = None)

   Bases: :py:obj:`airflow.providers.common.compat.notifier.BaseNotifier`


   Jira notifier for creating Jira issues upon failures.

   :param jira_conn_id: The HTTP connection ID for the Jira instance.
   :param proxies: Proxies to make the Jira REST API call. Optional
   :param description: The content for the body of the issue
   :param summary: The title of the issue
   :param project_id: The ID of the project under which the issue will be created
   :param issue_type_id: The ID of the issue category
   :param labels: The labels to be applied to the issue


   .. py:attribute:: template_fields
      :value: ('description', 'summary', 'project_id', 'issue_type_id', 'labels')



   .. py:attribute:: jira_conn_id
      :value: 'jira_default'



   .. py:attribute:: proxies
      :value: None



   .. py:attribute:: description


   .. py:attribute:: summary


   .. py:attribute:: project_id


   .. py:attribute:: issue_type_id


   .. py:attribute:: labels
      :value: []



   .. py:property:: hook
      :type: airflow.providers.atlassian.jira.hooks.jira.JiraHook



   .. py:method:: notify(context)

      Send a notification.

      :param context: The airflow context



.. py:data:: send_jira_notification

