:py:mod:`airflow.providers.cncf.kubernetes.operators.kueue`
===========================================================

.. py:module:: airflow.providers.cncf.kubernetes.operators.kueue

.. autoapi-nested-parse::

   Manage a Kubernetes Kueue.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.cncf.kubernetes.operators.kueue.KubernetesInstallKueueOperator
   airflow.providers.cncf.kubernetes.operators.kueue.KubernetesStartKueueJobOperator




.. py:class:: KubernetesInstallKueueOperator(kueue_version, kubernetes_conn_id = 'kubernetes_default', *args, **kwargs)


   Bases: :py:obj:`airflow.models.BaseOperator`

   Installs a Kubernetes Kueue.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:KubernetesInstallKueueOperator`

   :param kueue_version: The Kubernetes Kueue version to install.
   :param kubernetes_conn_id: The :ref:`kubernetes connection id <howto/connection:kubernetes>`
       for the Kubernetes cluster.

   .. py:attribute:: template_fields
      :type: collections.abc.Sequence[str]
      :value: ('kueue_version', 'kubernetes_conn_id')

      

   .. py:method:: hook()


   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: KubernetesStartKueueJobOperator(queue_name, *args, **kwargs)


   Bases: :py:obj:`airflow.providers.cncf.kubernetes.operators.job.KubernetesJobOperator`

   Executes a Kubernetes Job in Kueue.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:KubernetesStartKueueJobOperator`

   :param queue_name: The name of the Queue in the cluster

   .. py:attribute:: template_fields

      


