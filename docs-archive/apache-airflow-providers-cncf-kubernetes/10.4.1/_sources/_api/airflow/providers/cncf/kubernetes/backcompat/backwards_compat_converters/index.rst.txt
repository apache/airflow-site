airflow.providers.cncf.kubernetes.backcompat.backwards_compat_converters
========================================================================

.. py:module:: airflow.providers.cncf.kubernetes.backcompat.backwards_compat_converters

.. autoapi-nested-parse::

   Executes task in a Kubernetes POD.



Functions
---------

.. autoapisummary::

   airflow.providers.cncf.kubernetes.backcompat.backwards_compat_converters.convert_volume
   airflow.providers.cncf.kubernetes.backcompat.backwards_compat_converters.convert_volume_mount
   airflow.providers.cncf.kubernetes.backcompat.backwards_compat_converters.convert_port
   airflow.providers.cncf.kubernetes.backcompat.backwards_compat_converters.convert_env_vars
   airflow.providers.cncf.kubernetes.backcompat.backwards_compat_converters.convert_env_vars_or_raise_error
   airflow.providers.cncf.kubernetes.backcompat.backwards_compat_converters.convert_pod_runtime_info_env
   airflow.providers.cncf.kubernetes.backcompat.backwards_compat_converters.convert_image_pull_secrets
   airflow.providers.cncf.kubernetes.backcompat.backwards_compat_converters.convert_configmap
   airflow.providers.cncf.kubernetes.backcompat.backwards_compat_converters.convert_affinity
   airflow.providers.cncf.kubernetes.backcompat.backwards_compat_converters.convert_toleration


Module Contents
---------------

.. py:function:: convert_volume(volume)

   Convert an airflow Volume object into a k8s.V1Volume.

   :param volume:


.. py:function:: convert_volume_mount(volume_mount)

   Convert an airflow VolumeMount object into a k8s.V1VolumeMount.

   :param volume_mount:


.. py:function:: convert_port(port)

   Convert an airflow Port object into a k8s.V1ContainerPort.

   :param port:


.. py:function:: convert_env_vars(env_vars)

   Coerce env var collection for kubernetes.

   If the collection is a str-str dict, convert it into a list of ``V1EnvVar`` variables.


.. py:function:: convert_env_vars_or_raise_error(env_vars)

   Separate function to convert env var collection for kubernetes and then raise an error if it is still the wrong type.

   This is used after the template strings have been rendered.


.. py:function:: convert_pod_runtime_info_env(pod_runtime_info_envs)

   Convert a PodRuntimeInfoEnv into an k8s.V1EnvVar.

   :param pod_runtime_info_envs:


.. py:function:: convert_image_pull_secrets(image_pull_secrets)

   Convert a PodRuntimeInfoEnv into an k8s.V1EnvVar.

   :param image_pull_secrets:


.. py:function:: convert_configmap(configmaps)

   Convert a str into an k8s.V1EnvFromSource.

   :param configmaps:


.. py:function:: convert_affinity(affinity)

   Convert a dict into an k8s.V1Affinity.


.. py:function:: convert_toleration(toleration)

   Convert a dict into an k8s.V1Toleration.


