:py:mod:`airflow.providers.common.io.xcom.backend`
==================================================

.. py:module:: airflow.providers.common.io.xcom.backend


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.common.io.xcom.backend.XComObjectStorageBackend




Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.common.io.xcom.backend.T
   airflow.providers.common.io.xcom.backend.SECTION


.. py:data:: T

   

.. py:data:: SECTION
   :value: 'common.io'

   

.. py:class:: XComObjectStorageBackend(name, doc)


   Bases: :py:obj:`airflow.models.xcom.BaseXCom`

   XCom backend that stores data in an object store or database depending on the size of the data.

   If the value is larger than the configured threshold, it will be stored in an object store.
   Otherwise, it will be stored in the database. If it is stored in an object store, the path
   to the object in the store will be returned and saved in the database (by BaseXCom). Otherwise, the value
   itself will be returned and thus saved in the database.

   .. py:method:: serialize_value(value, *, key = None, task_id = None, dag_id = None, run_id = None, map_index = None)
      :staticmethod:

      Serialize XCom value to str or pickled object.


   .. py:method:: deserialize_value(result)
      :staticmethod:

      Deserializes the value from the database or object storage.

      Compression is inferred from the file extension.


   .. py:method:: purge(xcom, session)
      :staticmethod:

      Purge an XCom entry from underlying storage implementations.



