:py:mod:`airflow.providers.dbt.cloud.triggers.dbt`
==================================================

.. py:module:: airflow.providers.dbt.cloud.triggers.dbt


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.dbt.cloud.triggers.dbt.DbtCloudRunJobTrigger




.. py:class:: DbtCloudRunJobTrigger(conn_id, run_id, end_time, poll_interval, account_id)


   Bases: :py:obj:`airflow.triggers.base.BaseTrigger`

   Trigger to make an HTTP call to dbt and get the status for the job.

   This is done with run id in polling interval of time.

   :param conn_id: The connection identifier for connecting to Dbt.
   :param run_id: The ID of a dbt Cloud job.
   :param end_time: Time in seconds to wait for a job run to reach a terminal status. Defaults to 7 days.
   :param account_id: The ID of a dbt Cloud account.
   :param poll_interval:  polling period in seconds to check for the status.

   .. py:method:: serialize()

      Serialize DbtCloudRunJobTrigger arguments and classpath.


   .. py:method:: run()
      :async:

      Make async connection to Dbt, polls for the pipeline run status.


   .. py:method:: is_still_running(hook)
      :async:

      Check whether the submitted job is running.



