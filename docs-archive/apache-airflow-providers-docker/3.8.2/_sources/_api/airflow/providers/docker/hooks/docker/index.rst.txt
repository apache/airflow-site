:py:mod:`airflow.providers.docker.hooks.docker`
===============================================

.. py:module:: airflow.providers.docker.hooks.docker


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.docker.hooks.docker.DockerHook




.. py:class:: DockerHook(docker_conn_id = default_conn_name, base_url = None, version = None, tls = None, timeout = DEFAULT_TIMEOUT_SECONDS)


   Bases: :py:obj:`airflow.hooks.base.BaseHook`

   Interact with a Docker Daemon and Container Registry.

   This class provide a thin wrapper around the ``docker.APIClient``.

   .. seealso::
       - :ref:`Docker Connection <howto/connection:docker>`
       - `Docker SDK: Low-level API <https://docker-py.readthedocs.io/en/stable/api.html?low-level-api>`_

   :param docker_conn_id: :ref:`Docker connection id <howto/connection:docker>` where stored credentials
        to Docker Registry. If set to ``None`` or empty then hook does not login to Container Registry.
   :param base_url: URL to the Docker server.
   :param version: The version of the API to use. Use ``auto`` or ``None`` for automatically detect
       the server's version.
   :param tls: Is connection required TLS, for enable pass ``True`` for use with default options,
       or pass a `docker.tls.TLSConfig` object to use custom configurations.
   :param timeout: Default timeout for API calls, in seconds.

   .. py:property:: client_created
      :type: bool

      Is api_client created or not.


   .. py:attribute:: conn_name_attr
      :value: 'docker_conn_id'

      

   .. py:attribute:: default_conn_name
      :value: 'docker_default'

      

   .. py:attribute:: conn_type
      :value: 'docker'

      

   .. py:attribute:: hook_name
      :value: 'Docker'

      

   .. py:method:: construct_tls_config(ca_cert = None, client_cert = None, client_key = None, verify = True, assert_hostname = None, ssl_version = None)
      :staticmethod:

      Construct TLSConfig object from parts.

      :param ca_cert: Path to a PEM-encoded CA (Certificate Authority) certificate file.
      :param client_cert: Path to PEM-encoded certificate file.
      :param client_key: Path to PEM-encoded key file.
      :param verify: Set ``True`` to verify the validity of the provided certificate.
      :param assert_hostname: Hostname to match against the docker server certificate
          or ``False`` to disable the check.
      :param ssl_version: Version of SSL to use when communicating with docker daemon.


   .. py:method:: api_client()

      Create connection to docker host and return ``docker.APIClient`` (cached).


   .. py:method:: get_conn()

      Create connection to docker host and return ``docker.APIClient`` (cached).


   .. py:method:: get_connection_form_widgets()
      :staticmethod:

      Return connection form widgets.


   .. py:method:: get_ui_field_behaviour()
      :classmethod:

      Return custom field behaviour.



