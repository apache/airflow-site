airflow.providers.edge.cli.api_client
=====================================

.. py:module:: airflow.providers.edge.cli.api_client


Attributes
----------

.. autoapisummary::

   airflow.providers.edge.cli.api_client.logger
   airflow.providers.edge.cli.api_client.API_RETRIES
   airflow.providers.edge.cli.api_client.API_RETRY_WAIT_MIN
   airflow.providers.edge.cli.api_client.API_RETRY_WAIT_MAX


Functions
---------

.. autoapisummary::

   airflow.providers.edge.cli.api_client.worker_register
   airflow.providers.edge.cli.api_client.worker_set_state
   airflow.providers.edge.cli.api_client.jobs_fetch
   airflow.providers.edge.cli.api_client.jobs_set_state
   airflow.providers.edge.cli.api_client.logs_logfile_path
   airflow.providers.edge.cli.api_client.logs_push


Module Contents
---------------

.. py:data:: logger

.. py:data:: API_RETRIES

.. py:data:: API_RETRY_WAIT_MIN

.. py:data:: API_RETRY_WAIT_MAX

.. py:function:: worker_register(hostname, state, queues, sysinfo)

   Register worker with the Edge API.


.. py:function:: worker_set_state(hostname, state, jobs_active, queues, sysinfo, maintenance_comments = None)

   Update the state of the worker in the central site and thereby implicitly heartbeat.


.. py:function:: jobs_fetch(hostname, queues, free_concurrency)

   Fetch a job to execute on the edge worker.


.. py:function:: jobs_set_state(key, state)

   Set the state of a job.


.. py:function:: logs_logfile_path(task)

   Elaborate the path and filename to expect from task execution.


.. py:function:: logs_push(task, log_chunk_time, log_chunk_data)

   Push an incremental log chunk from Edge Worker to central site.


