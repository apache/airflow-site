airflow.providers.edge3.cli.edge_command
========================================

.. py:module:: airflow.providers.edge3.cli.edge_command


Attributes
----------

.. autoapisummary::

   airflow.providers.edge3.cli.edge_command.logger
   airflow.providers.edge3.cli.edge_command.EDGE_WORKER_PROCESS_NAME
   airflow.providers.edge3.cli.edge_command.EDGE_WORKER_HEADER
   airflow.providers.edge3.cli.edge_command.SIG_STATUS
   airflow.providers.edge3.cli.edge_command.ARG_CONCURRENCY
   airflow.providers.edge3.cli.edge_command.ARG_QUEUES
   airflow.providers.edge3.cli.edge_command.ARG_EDGE_HOSTNAME
   airflow.providers.edge3.cli.edge_command.ARG_MAINTENANCE
   airflow.providers.edge3.cli.edge_command.ARG_MAINTENANCE_COMMENT
   airflow.providers.edge3.cli.edge_command.ARG_WAIT_MAINT
   airflow.providers.edge3.cli.edge_command.ARG_WAIT_STOP
   airflow.providers.edge3.cli.edge_command.EDGE_COMMANDS


Functions
---------

.. autoapisummary::

   airflow.providers.edge3.cli.edge_command.force_use_internal_api_on_edge_worker
   airflow.providers.edge3.cli.edge_command.worker
   airflow.providers.edge3.cli.edge_command.status
   airflow.providers.edge3.cli.edge_command.maintenance
   airflow.providers.edge3.cli.edge_command.stop


Module Contents
---------------

.. py:data:: logger

.. py:data:: EDGE_WORKER_PROCESS_NAME
   :value: 'edge-worker'


.. py:data:: EDGE_WORKER_HEADER
   :value: ''


.. py:function:: force_use_internal_api_on_edge_worker()

   Ensure that the environment is configured for the internal API without needing to declare it outside.

   This is only required for an Edge worker and must to be done before the Click CLI wrapper is initiated.
   That is because the CLI wrapper will attempt to establish a DB connection, which will fail before the
   function call can take effect. In an Edge worker, we need to "patch" the environment before starting.


.. py:data:: SIG_STATUS

.. py:function:: worker(args)

   Start Airflow Edge Worker.


.. py:function:: status(args)

   Check for Airflow Edge Worker status.


.. py:function:: maintenance(args)

   Set or Unset maintenance mode of worker.


.. py:function:: stop(args)

   Stop a running Airflow Edge Worker.


.. py:data:: ARG_CONCURRENCY

.. py:data:: ARG_QUEUES

.. py:data:: ARG_EDGE_HOSTNAME

.. py:data:: ARG_MAINTENANCE

.. py:data:: ARG_MAINTENANCE_COMMENT

.. py:data:: ARG_WAIT_MAINT

.. py:data:: ARG_WAIT_STOP

.. py:data:: EDGE_COMMANDS
   :type:  list[airflow.cli.cli_config.ActionCommand]

