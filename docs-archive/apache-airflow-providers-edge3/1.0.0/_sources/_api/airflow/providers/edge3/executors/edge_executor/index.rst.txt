airflow.providers.edge3.executors.edge_executor
===============================================

.. py:module:: airflow.providers.edge3.executors.edge_executor


Attributes
----------

.. autoapisummary::

   airflow.providers.edge3.executors.edge_executor.TaskTuple
   airflow.providers.edge3.executors.edge_executor.PARALLELISM


Classes
-------

.. autoapisummary::

   airflow.providers.edge3.executors.edge_executor.EdgeExecutor


Module Contents
---------------

.. py:data:: TaskTuple

.. py:data:: PARALLELISM
   :type:  int

.. py:class:: EdgeExecutor(parallelism = PARALLELISM)

   Bases: :py:obj:`airflow.executors.base_executor.BaseExecutor`


   Implementation of the EdgeExecutor to distribute work to Edge Workers via HTTP.


   .. py:attribute:: last_reported_state
      :type:  dict[airflow.models.taskinstancekey.TaskInstanceKey, airflow.models.taskinstance.TaskInstanceState]


   .. py:method:: start(session = NEW_SESSION)

      If EdgeExecutor provider is loaded first time, ensure table exists.



   .. py:method:: execute_async(key, command, queue = None, executor_config = None, session = NEW_SESSION)

      Execute asynchronously. Airflow 2.10 entry point to execute a task.



   .. py:method:: queue_workload(workload, session = NEW_SESSION)

      Put new workload to queue. Airflow 3 entry point to execute a task.



   .. py:method:: sync(session = NEW_SESSION)

      Sync will get called periodically by the heartbeat method.



   .. py:method:: end()

      End the executor.



   .. py:method:: terminate()

      Terminate the executor is not doing anything.



   .. py:method:: try_adopt_task_instances(tis)

      Try to adopt running task instances that have been abandoned by a SchedulerJob dying.

      Anything that is not adopted will be cleared by the scheduler (and then become eligible for
      re-scheduling)

      :return: any TaskInstances that were unable to be adopted



   .. py:method:: get_cli_commands()
      :staticmethod:


      Vends CLI commands to be included in Airflow CLI.

      Override this method to expose commands via Airflow CLI to manage this executor. This can
      be commands to setup/teardown the executor, inspect state, etc.
      Make sure to choose unique names for those commands, to avoid collisions.



