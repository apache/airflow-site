airflow.providers.edge3.models.edge_logs
========================================

.. py:module:: airflow.providers.edge3.models.edge_logs


Classes
-------

.. autoapisummary::

   airflow.providers.edge3.models.edge_logs.EdgeLogsModel


Module Contents
---------------

.. py:class:: EdgeLogsModel(dag_id, task_id, run_id, map_index, try_number, log_chunk_time, log_chunk_data)

   Bases: :py:obj:`airflow.models.base.Base`, :py:obj:`airflow.utils.log.logging_mixin.LoggingMixin`


   Temporary collected logs from a Edge Worker while job runs on remote site.

   As the Edge Worker in most cases has a local file system and the web UI no access
   to read files from remote site, Edge Workers will send incremental chunks of logs
   of running jobs to the central site. As log storage backends in most cloud cases can not
   append logs, the table is used as buffer to receive. Upon task completion logs can be
   flushed to task log handler.

   Log data therefore is collected in chunks and is only temporary.


   .. py:attribute:: __tablename__
      :value: 'edge_logs'



   .. py:attribute:: dag_id


   .. py:attribute:: task_id


   .. py:attribute:: run_id


   .. py:attribute:: map_index


   .. py:attribute:: try_number


   .. py:attribute:: log_chunk_time


   .. py:attribute:: log_chunk_data


