:py:mod:`airflow.providers.fab.auth_manager.schemas.role_and_permission_schema`
===============================================================================

.. py:module:: airflow.providers.fab.auth_manager.schemas.role_and_permission_schema


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.fab.auth_manager.schemas.role_and_permission_schema.ActionSchema
   airflow.providers.fab.auth_manager.schemas.role_and_permission_schema.ResourceSchema
   airflow.providers.fab.auth_manager.schemas.role_and_permission_schema.ActionCollection
   airflow.providers.fab.auth_manager.schemas.role_and_permission_schema.ActionCollectionSchema
   airflow.providers.fab.auth_manager.schemas.role_and_permission_schema.ActionResourceSchema
   airflow.providers.fab.auth_manager.schemas.role_and_permission_schema.RoleSchema
   airflow.providers.fab.auth_manager.schemas.role_and_permission_schema.RoleCollection
   airflow.providers.fab.auth_manager.schemas.role_and_permission_schema.RoleCollectionSchema




Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.fab.auth_manager.schemas.role_and_permission_schema.role_schema
   airflow.providers.fab.auth_manager.schemas.role_and_permission_schema.role_collection_schema
   airflow.providers.fab.auth_manager.schemas.role_and_permission_schema.action_collection_schema


.. py:class:: ActionSchema(*args, **kwargs)


   Bases: :py:obj:`marshmallow_sqlalchemy.SQLAlchemySchema`

   Action Schema.

   .. py:class:: Meta


      Meta.

      .. py:attribute:: model

         


   .. py:attribute:: name

      


.. py:class:: ResourceSchema(*args, **kwargs)


   Bases: :py:obj:`marshmallow_sqlalchemy.SQLAlchemySchema`

   View menu Schema.

   .. py:class:: Meta


      Meta.

      .. py:attribute:: model

         


   .. py:attribute:: name

      


.. py:class:: ActionCollection


   Bases: :py:obj:`NamedTuple`

   Action Collection.

   .. py:attribute:: actions
      :type: list[airflow.providers.fab.auth_manager.models.Action]

      

   .. py:attribute:: total_entries
      :type: int

      


.. py:class:: ActionCollectionSchema(*, only = None, exclude = (), many = None, context = None, load_only = (), dump_only = (), partial = None, unknown = None)


   Bases: :py:obj:`marshmallow.Schema`

   Permissions list schema.

   .. py:attribute:: actions

      

   .. py:attribute:: total_entries

      


.. py:class:: ActionResourceSchema(*args, **kwargs)


   Bases: :py:obj:`marshmallow_sqlalchemy.SQLAlchemySchema`

   Action View Schema.

   .. py:class:: Meta


      Meta.

      .. py:attribute:: model

         


   .. py:attribute:: action

      

   .. py:attribute:: resource

      


.. py:class:: RoleSchema(*args, **kwargs)


   Bases: :py:obj:`marshmallow_sqlalchemy.SQLAlchemySchema`

   Role item schema.

   .. py:class:: Meta


      Meta.

      .. py:attribute:: model

         


   .. py:attribute:: name

      

   .. py:attribute:: permissions

      


.. py:class:: RoleCollection


   Bases: :py:obj:`NamedTuple`

   List of roles.

   .. py:attribute:: roles
      :type: list[airflow.providers.fab.auth_manager.models.Role]

      

   .. py:attribute:: total_entries
      :type: int

      


.. py:class:: RoleCollectionSchema(*, only = None, exclude = (), many = None, context = None, load_only = (), dump_only = (), partial = None, unknown = None)


   Bases: :py:obj:`marshmallow.Schema`

   List of roles.

   .. py:attribute:: roles

      

   .. py:attribute:: total_entries

      


.. py:data:: role_schema

   

.. py:data:: role_collection_schema

   

.. py:data:: action_collection_schema

   

