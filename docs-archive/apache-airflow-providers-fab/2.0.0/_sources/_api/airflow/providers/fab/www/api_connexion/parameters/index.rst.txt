airflow.providers.fab.www.api_connexion.parameters
==================================================

.. py:module:: airflow.providers.fab.www.api_connexion.parameters


Attributes
----------

.. autoapisummary::

   airflow.providers.fab.www.api_connexion.parameters.log
   airflow.providers.fab.www.api_connexion.parameters.T


Functions
---------

.. autoapisummary::

   airflow.providers.fab.www.api_connexion.parameters.validate_istimezone
   airflow.providers.fab.www.api_connexion.parameters.format_datetime
   airflow.providers.fab.www.api_connexion.parameters.check_limit
   airflow.providers.fab.www.api_connexion.parameters.format_parameters
   airflow.providers.fab.www.api_connexion.parameters.apply_sorting


Module Contents
---------------

.. py:data:: log

.. py:function:: validate_istimezone(value)

   Validate that a datetime is not naive.


.. py:function:: format_datetime(value)

   Format datetime objects.

   Datetime format parser for args since connexion doesn't parse datetimes
   https://github.com/zalando/connexion/issues/476

   This should only be used within connection views because it raises 400


.. py:function:: check_limit(value)

   Check the limit does not exceed configured value.

   This checks the limit passed to view and raises BadRequest if
   limit exceed user configured value


.. py:data:: T

.. py:function:: format_parameters(params_formatters)

   Create a decorator to convert parameters using given formatters.

   Using it allows you to separate parameter formatting from endpoint logic.

   :param params_formatters: Map of key name and formatter function


.. py:function:: apply_sorting(query, order_by, to_replace = None, allowed_attrs = None)

   Apply sorting to query.


