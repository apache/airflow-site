airflow.providers.fab.www.api_connexion.exceptions
==================================================

.. py:module:: airflow.providers.fab.www.api_connexion.exceptions


Attributes
----------

.. autoapisummary::

   airflow.providers.fab.www.api_connexion.exceptions.doc_link
   airflow.providers.fab.www.api_connexion.exceptions.EXCEPTIONS_LINK_MAP


Exceptions
----------

.. autoapisummary::

   airflow.providers.fab.www.api_connexion.exceptions.NotFound
   airflow.providers.fab.www.api_connexion.exceptions.BadRequest
   airflow.providers.fab.www.api_connexion.exceptions.Unauthenticated
   airflow.providers.fab.www.api_connexion.exceptions.PermissionDenied
   airflow.providers.fab.www.api_connexion.exceptions.Conflict
   airflow.providers.fab.www.api_connexion.exceptions.AlreadyExists
   airflow.providers.fab.www.api_connexion.exceptions.Unknown


Functions
---------

.. autoapisummary::

   airflow.providers.fab.www.api_connexion.exceptions.common_error_handler


Module Contents
---------------

.. py:data:: doc_link
   :value: 'http://apache-airflow-docs.s3-website.eu-central-1.amazonaws.com/docs/apache-airflow/stable/'


.. py:data:: EXCEPTIONS_LINK_MAP

.. py:function:: common_error_handler(exception)

   Use to capture connexion exceptions and add link to the type field.


.. py:exception:: NotFound(title = 'Not Found', detail = None, headers = None, **kwargs)

   Bases: :py:obj:`connexion.ProblemException`


   Raise when the object cannot be found.


.. py:exception:: BadRequest(title = 'Bad Request', detail = None, headers = None, **kwargs)

   Bases: :py:obj:`connexion.ProblemException`


   Raise when the server processes a bad request.


.. py:exception:: Unauthenticated(title = 'Unauthorized', detail = None, headers = None, **kwargs)

   Bases: :py:obj:`connexion.ProblemException`


   Raise when the user is not authenticated.


.. py:exception:: PermissionDenied(title = 'Forbidden', detail = None, headers = None, **kwargs)

   Bases: :py:obj:`connexion.ProblemException`


   Raise when the user does not have the required permissions.


.. py:exception:: Conflict(title='Conflict', detail = None, headers = None, **kwargs)

   Bases: :py:obj:`connexion.ProblemException`


   Raise when there is some conflict.


.. py:exception:: AlreadyExists(title='Conflict', detail = None, headers = None, **kwargs)

   Bases: :py:obj:`Conflict`


   Raise when the object already exists.


.. py:exception:: Unknown(title = 'Internal Server Error', detail = None, headers = None, **kwargs)

   Bases: :py:obj:`connexion.ProblemException`


   Returns a response body and status code for HTTP 500 exception.


