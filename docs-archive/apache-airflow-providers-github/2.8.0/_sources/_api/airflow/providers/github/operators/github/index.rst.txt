:py:mod:`airflow.providers.github.operators.github`
===================================================

.. py:module:: airflow.providers.github.operators.github


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.github.operators.github.GithubOperator




.. py:class:: GithubOperator(*, github_method, github_conn_id = 'github_default', github_method_args = None, result_processor = None, **kwargs)


   Bases: :py:obj:`airflow.models.BaseOperator`

   Interact and perform actions on GitHub API.

   This operator is designed to use GitHub's Python SDK: https://github.com/PyGithub/PyGithub

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GithubOperator`

   :param github_conn_id: Reference to a pre-defined GitHub Connection
   :param github_method: Method name from GitHub Python SDK to be called
   :param github_method_args: Method parameters for the github_method. (templated)
   :param result_processor: Function to further process the response from GitHub API

   .. py:attribute:: template_fields
      :value: ('github_method_args',)

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



