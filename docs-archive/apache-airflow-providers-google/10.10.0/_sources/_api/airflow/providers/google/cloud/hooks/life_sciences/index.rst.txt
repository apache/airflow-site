:py:mod:`airflow.providers.google.cloud.hooks.life_sciences`
============================================================

.. py:module:: airflow.providers.google.cloud.hooks.life_sciences

.. autoapi-nested-parse::

   Hook for Google Cloud Life Sciences service.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.google.cloud.hooks.life_sciences.LifeSciencesHook




Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.google.cloud.hooks.life_sciences.TIME_TO_SLEEP_IN_SECONDS


.. py:data:: TIME_TO_SLEEP_IN_SECONDS
   :value: 5

   

.. py:class:: LifeSciencesHook(api_version = 'v2beta', gcp_conn_id = 'google_cloud_default', impersonation_chain = None, **kwargs)


   Bases: :py:obj:`airflow.providers.google.common.hooks.base_google.GoogleBaseHook`

   Hook for the Google Cloud Life Sciences APIs.

   .. warning::
       This hook is deprecated. Consider using Google Cloud Batch Operators' hook instead.
       The Life Sciences API (beta) will be discontinued on July 8, 2025 in favor
       of Google Cloud Batch.

   All the methods in the hook where project_id is used must be called with
   keyword arguments rather than positional.

   :param api_version: API version used (for example v1 or v1beta1).
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account.

   .. py:method:: get_conn()

      Retrieves the connection to Cloud Life Sciences.

      :return: Google Cloud Life Sciences service object.


   .. py:method:: run_pipeline(body, location, project_id)

      Runs a pipeline.

      :param body: The request body.
      :param location: The location of the project. For example: "us-east1".
      :param project_id: Optional, Google Cloud Project project_id where the function belongs.
          If set to None or missing, the default project_id from the Google Cloud connection is used.



