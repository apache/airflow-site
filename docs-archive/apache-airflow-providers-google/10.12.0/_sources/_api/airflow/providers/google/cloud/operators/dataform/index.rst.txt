:py:mod:`airflow.providers.google.cloud.operators.dataform`
===========================================================

.. py:module:: airflow.providers.google.cloud.operators.dataform


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.google.cloud.operators.dataform.DataformCreateCompilationResultOperator
   airflow.providers.google.cloud.operators.dataform.DataformGetCompilationResultOperator
   airflow.providers.google.cloud.operators.dataform.DataformCreateWorkflowInvocationOperator
   airflow.providers.google.cloud.operators.dataform.DataformGetWorkflowInvocationOperator
   airflow.providers.google.cloud.operators.dataform.DataformCancelWorkflowInvocationOperator
   airflow.providers.google.cloud.operators.dataform.DataformCreateRepositoryOperator
   airflow.providers.google.cloud.operators.dataform.DataformDeleteRepositoryOperator
   airflow.providers.google.cloud.operators.dataform.DataformCreateWorkspaceOperator
   airflow.providers.google.cloud.operators.dataform.DataformDeleteWorkspaceOperator
   airflow.providers.google.cloud.operators.dataform.DataformWriteFileOperator
   airflow.providers.google.cloud.operators.dataform.DataformMakeDirectoryOperator
   airflow.providers.google.cloud.operators.dataform.DataformRemoveFileOperator
   airflow.providers.google.cloud.operators.dataform.DataformRemoveDirectoryOperator
   airflow.providers.google.cloud.operators.dataform.DataformInstallNpmPackagesOperator




.. py:class:: DataformCreateCompilationResultOperator(project_id, region, repository_id, compilation_result, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, *args, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Creates a new CompilationResult in a given project and location.

   :param project_id: Required. The ID of the Google Cloud project that the task belongs to.
   :param region: Required. The ID of the Google Cloud region that the task belongs to.
   :param repository_id: Required. The ID of the Dataform repository that the task belongs to.
   :param compilation_result:  Required. The compilation result to create.
   :param retry: Designation of what errors, if any, should be retried.
   :param timeout: The timeout for this request.
   :param metadata: Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :value: ('project_id', 'region', 'repository_id', 'compilation_result', 'impersonation_chain')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: DataformGetCompilationResultOperator(project_id, region, repository_id, compilation_result_id, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, *args, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Fetches a single CompilationResult.

   :param project_id: Required. The ID of the Google Cloud project that the task belongs to.
   :param region: Required. The ID of the Google Cloud region that the task belongs to.
   :param repository_id: Required. The ID of the Dataform repository that the task belongs to.
   :param compilation_result_id:  The Id of the Dataform Compilation Result
   :param retry: Designation of what errors, if any, should be retried.
   :param timeout: The timeout for this request.
   :param metadata: Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :value: ('project_id', 'region', 'repository_id', 'compilation_result_id', 'impersonation_chain')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: DataformCreateWorkflowInvocationOperator(project_id, region, repository_id, workflow_invocation, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, asynchronous = False, wait_time = 10, *args, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Creates a new WorkflowInvocation in a given Repository.

   :param project_id: Required. The ID of the Google Cloud project that the task belongs to.
   :param region: Required. The ID of the Google Cloud region that the task belongs to.
   :param repository_id: Required. The ID of the Dataform repository that the task belongs to.
   :param workflow_invocation:  Required. The workflow invocation resource to create.
   :param retry: Designation of what errors, if any, should be retried.
   :param timeout: The timeout for this request.
   :param metadata: Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).
   :param asynchronous: Flag to return workflow_invocation_id from the Dataform API.
       This is useful for submitting long-running workflows and
       waiting on them asynchronously using the DataformWorkflowInvocationStateSensor
   :param wait_time: Number of seconds between checks

   .. py:attribute:: template_fields
      :value: ('project_id', 'region', 'repository_id', 'workflow_invocation', 'impersonation_chain')

      

   .. py:attribute:: operator_extra_links
      :value: ()

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: DataformGetWorkflowInvocationOperator(project_id, region, repository_id, workflow_invocation_id, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, *args, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Fetches a single WorkflowInvocation.

   :param project_id: Required. The ID of the Google Cloud project that the task belongs to.
   :param region: Required. The ID of the Google Cloud region that the task belongs to.
   :param repository_id: Required. The ID of the Dataform repository that the task belongs to.
   :param workflow_invocation_id:  the workflow invocation resource's id.
   :param retry: Designation of what errors, if any, should be retried.
   :param timeout: The timeout for this request.
   :param metadata: Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :value: ('project_id', 'region', 'repository_id', 'workflow_invocation_id', 'impersonation_chain')

      

   .. py:attribute:: operator_extra_links
      :value: ()

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: DataformCancelWorkflowInvocationOperator(project_id, region, repository_id, workflow_invocation_id, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, *args, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Requests cancellation of a running WorkflowInvocation.

   :param project_id: Required. The ID of the Google Cloud project that the task belongs to.
   :param region: Required. The ID of the Google Cloud region that the task belongs to.
   :param repository_id: Required. The ID of the Dataform repository that the task belongs to.
   :param workflow_invocation_id:  the workflow invocation resource's id.
   :param retry: Designation of what errors, if any, should be retried.
   :param timeout: The timeout for this request.
   :param metadata: Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :value: ('project_id', 'region', 'repository_id', 'workflow_invocation_id', 'impersonation_chain')

      

   .. py:attribute:: operator_extra_links
      :value: ()

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: DataformCreateRepositoryOperator(project_id, region, repository_id, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, *args, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Creates repository.

   :param project_id: Required. The ID of the Google Cloud project that the task belongs to.
   :param region: Required. The ID of the Google Cloud region that the task belongs to.
   :param repository_id: Required. The ID of the Dataform repository that the task belongs to.
   :param retry: Designation of what errors, if any, should be retried.
   :param timeout: The timeout for this request.
   :param metadata: Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: operator_extra_links
      :value: ()

      

   .. py:attribute:: template_fields
      :value: ('project_id', 'region', 'repository_id', 'impersonation_chain')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: DataformDeleteRepositoryOperator(project_id, region, repository_id, force = True, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, *args, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Deletes repository.

   :param project_id: Required. The ID of the Google Cloud project where repository located.
   :param region: Required. The ID of the Google Cloud region where repository located.
   :param repository_id: Required. The ID of the Dataform repository that should be deleted.
   :param retry: Designation of what errors, if any, should be retried.
   :param timeout: The timeout for this request.
   :param metadata: Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :value: ('project_id', 'region', 'repository_id', 'impersonation_chain')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: DataformCreateWorkspaceOperator(project_id, region, repository_id, workspace_id, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, *args, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Creates workspace.

   :param project_id: Required. The ID of the Google Cloud project where workspace should be in.
   :param region: Required. Name of the Google Cloud region that where workspace should be in.
   :param repository_id: Required. The ID of the Dataform repository that the workspace belongs to.
   :param workspace_id: Required. The ID of the new workspace that will be created.
   :param retry: Designation of what errors, if any, should be retried.
   :param timeout: The timeout for this request.
   :param metadata: Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: operator_extra_links
      :value: ()

      

   .. py:attribute:: template_fields
      :value: ('project_id', 'region', 'repository_id', 'workspace_id', 'impersonation_chain')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: DataformDeleteWorkspaceOperator(project_id, region, repository_id, workspace_id, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, *args, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Deletes workspace.

   :param project_id: Required. The ID of the Google Cloud project where workspace located.
   :param region: Required. The ID of the Google Cloud region where workspace located.
   :param repository_id: Required. The ID of the Dataform repository where workspace located.
   :param workspace_id: Required. The ID of the Dataform workspace that should be deleted.
   :param retry: Designation of what errors, if any, should be retried.
   :param timeout: The timeout for this request.
   :param metadata: Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :value: ('project_id', 'region', 'repository_id', 'workspace_id', 'impersonation_chain')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: DataformWriteFileOperator(project_id, region, repository_id, workspace_id, filepath, contents, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, *args, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Writes new file to specified workspace.

   :param project_id: Required. The ID of the Google Cloud project where workspace located.
   :param region: Required. The ID of the Google Cloud region where workspace located.
   :param repository_id: Required. The ID of the Dataform repository where workspace located.
   :param workspace_id: Required. The ID of the Dataform workspace where files should be created.
   :param filepath: Required. Path to file including name of the file relative to workspace root.
   :param contents: Required. Content of the file to be written.
   :param retry: Designation of what errors, if any, should be retried.
   :param timeout: The timeout for this request.
   :param metadata: Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :value: ('project_id', 'region', 'repository_id', 'workspace_id', 'impersonation_chain')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: DataformMakeDirectoryOperator(project_id, region, repository_id, workspace_id, directory_path, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, *args, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Makes new directory in specified workspace.

   :param project_id: Required. The ID of the Google Cloud project where workspace located.
   :param region: Required. The ID of the Google Cloud region where workspace located.
   :param repository_id: Required. The ID of the Dataform repository where workspace located.
   :param workspace_id: Required. The ID of the Dataform workspace where directory should be created.
   :param path: Required. The directory's full path including directory name, relative to the workspace root.
   :param retry: Designation of what errors, if any, should be retried.
   :param timeout: The timeout for this request.
   :param metadata: Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :value: ('project_id', 'region', 'repository_id', 'workspace_id', 'impersonation_chain')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: DataformRemoveFileOperator(project_id, region, repository_id, workspace_id, filepath, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, *args, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Removes file in specified workspace.

   :param project_id: Required. The ID of the Google Cloud project where workspace located.
   :param region: Required. The ID of the Google Cloud region where workspace located.
   :param repository_id: Required. The ID of the Dataform repository where workspace located.
   :param workspace_id: Required. The ID of the Dataform workspace where directory located.
   :param filepath: Required. The full path including name of the file, relative to the workspace root.
   :param retry: Designation of what errors, if any, should be retried.
   :param timeout: The timeout for this request.
   :param metadata: Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :value: ('project_id', 'region', 'repository_id', 'workspace_id', 'impersonation_chain')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: DataformRemoveDirectoryOperator(project_id, region, repository_id, workspace_id, directory_path, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, *args, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Removes directory in specified workspace.

   :param project_id: Required. The ID of the Google Cloud project where workspace located.
   :param region: Required. The ID of the Google Cloud region where workspace located.
   :param repository_id: Required. The ID of the Dataform repository where workspace located.
   :param workspace_id: Required. The ID of the Dataform workspace where directory located.
   :param path: Required. The directory's full path including directory name, relative to the workspace root.
   :param retry: Designation of what errors, if any, should be retried.
   :param timeout: The timeout for this request.
   :param metadata: Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :value: ('project_id', 'region', 'repository_id', 'workspace_id', 'impersonation_chain')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: DataformInstallNpmPackagesOperator(project_id, region, repository_id, workspace_id, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, *args, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Install NPM dependencies in the provided workspace.

   Requires "package.json" to be created in the workspace.

   :param project_id: Required. The ID of the Google Cloud project where workspace located.
   :param region: Required. The ID of the Google Cloud region where workspace located.
   :param repository_id: Required. The ID of the Dataform repository where workspace located.
   :param workspace_id: Required. The ID of the Dataform workspace.
   :param retry: Designation of what errors, if any, should be retried.
   :param timeout: The timeout for this request.
   :param metadata: Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :value: ('project_id', 'region', 'repository_id', 'workspace_id', 'impersonation_chain')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



