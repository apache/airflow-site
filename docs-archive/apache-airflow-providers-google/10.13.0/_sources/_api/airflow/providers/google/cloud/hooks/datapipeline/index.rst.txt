:py:mod:`airflow.providers.google.cloud.hooks.datapipeline`
===========================================================

.. py:module:: airflow.providers.google.cloud.hooks.datapipeline

.. autoapi-nested-parse::

   This module contains a Google Data Pipelines Hook.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.google.cloud.hooks.datapipeline.DataPipelineHook




Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.google.cloud.hooks.datapipeline.DEFAULT_DATAPIPELINE_LOCATION


.. py:data:: DEFAULT_DATAPIPELINE_LOCATION
   :value: 'us-central1'

   

.. py:class:: DataPipelineHook(gcp_conn_id = 'google_cloud_default', impersonation_chain = None, **kwargs)


   Bases: :py:obj:`airflow.providers.google.common.hooks.base_google.GoogleBaseHook`

   Hook for Google Data Pipelines.

   All the methods in the hook where project_id is used must be called with
   keyword arguments rather than positional.

   .. py:method:: get_conn()

      Returns a Google Cloud Data Pipelines service object.


   .. py:method:: create_data_pipeline(body, project_id, location = DEFAULT_DATAPIPELINE_LOCATION)

      Creates a new Data Pipelines instance from the Data Pipelines API.

      :param body: The request body (contains instance of Pipeline). See:
          https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines/create#request-body
      :param project_id: The ID of the GCP project that owns the job.
      :param location: The location to direct the Data Pipelines instance to (for example us-central1).

      Returns the created Data Pipelines instance in JSON representation.


   .. py:method:: run_data_pipeline(data_pipeline_name, project_id, location = DEFAULT_DATAPIPELINE_LOCATION)

      Runs a Data Pipelines Instance using the Data Pipelines API.

      :param data_pipeline_name:  The display name of the pipeline. In example
          projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID it would be the PIPELINE_ID.
      :param project_id: The ID of the GCP project that owns the job.
      :param location: The location to direct the Data Pipelines instance to (for example us-central1).

      Returns the created Job in JSON representation.


   .. py:method:: build_parent_name(project_id, location)
      :staticmethod:



