:py:mod:`airflow.providers.google.cloud.hooks.dataprep`
=======================================================

.. py:module:: airflow.providers.google.cloud.hooks.dataprep

.. autoapi-nested-parse::

   This module contains Google Dataprep hook.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.google.cloud.hooks.dataprep.JobGroupStatuses
   airflow.providers.google.cloud.hooks.dataprep.GoogleDataprepHook




.. py:class:: JobGroupStatuses


   Bases: :py:obj:`str`, :py:obj:`enum.Enum`

   Types of job group run statuses.

   .. py:attribute:: CREATED
      :value: 'Created'

      

   .. py:attribute:: UNDEFINED
      :value: 'undefined'

      

   .. py:attribute:: IN_PROGRESS
      :value: 'InProgress'

      

   .. py:attribute:: COMPLETE
      :value: 'Complete'

      

   .. py:attribute:: FAILED
      :value: 'Failed'

      

   .. py:attribute:: CANCELED
      :value: 'Canceled'

      


.. py:class:: GoogleDataprepHook(dataprep_conn_id = default_conn_name, api_version = 'v4')


   Bases: :py:obj:`airflow.hooks.base.BaseHook`

   Hook for connection with Dataprep API.

   To get connection Dataprep with Airflow you need Dataprep token.

   https://clouddataprep.com/documentation/api#section/Authentication

   It should be added to the Connection in Airflow in JSON format.


   .. py:attribute:: conn_name_attr
      :value: 'dataprep_conn_id'

      

   .. py:attribute:: default_conn_name
      :value: 'google_cloud_dataprep_default'

      

   .. py:attribute:: conn_type
      :value: 'dataprep'

      

   .. py:attribute:: hook_name
      :value: 'Google Dataprep'

      

   .. py:method:: get_jobs_for_job_group(job_id)

      Get information about the batch jobs within a Cloud Dataprep job.

      :param job_id: The ID of the job that will be fetched


   .. py:method:: get_job_group(job_group_id, embed, include_deleted)

      Get the specified job group.

      A job group is a job that is executed from a specific node in a flow.

      :param job_group_id: The ID of the job that will be fetched
      :param embed: Comma-separated list of objects to pull in as part of the response
      :param include_deleted: if set to "true", will include deleted objects


   .. py:method:: run_job_group(body_request)

      Creates a ``jobGroup``, which launches the specified job as the authenticated user.

      This performs the same action as clicking on the Run Job button in the application.

      To get recipe_id please follow the Dataprep API documentation
      https://clouddataprep.com/documentation/api#operation/runJobGroup.

      :param body_request: The identifier for the recipe you would like to run.


   .. py:method:: create_flow(*, body_request)

      Creates flow.

      :param body_request: Body of the POST request to be sent.
          For more details check https://clouddataprep.com/documentation/api#operation/createFlow


   .. py:method:: copy_flow(*, flow_id, name = '', description = '', copy_datasources = False)

      Create a copy of the provided flow id, as well as all contained recipes.

      :param flow_id: ID of the flow to be copied
      :param name: Name for the copy of the flow
      :param description: Description of the copy of the flow
      :param copy_datasources: Bool value to define should copies of data inputs be made or not.


   .. py:method:: delete_flow(*, flow_id)

      Delete the flow with the provided id.

      :param flow_id: ID of the flow to be copied


   .. py:method:: run_flow(*, flow_id, body_request)

      Runs the flow with the provided id copy of the provided flow id.

      :param flow_id: ID of the flow to be copied
      :param body_request: Body of the POST request to be sent.


   .. py:method:: get_job_group_status(*, job_group_id)

      Check the status of the Dataprep task to be finished.

      :param job_group_id: ID of the job group to check


   .. py:method:: create_imported_dataset(*, body_request)

      Creates imported dataset.

      :param body_request: Body of the POST request to be sent.
          For more details check https://clouddataprep.com/documentation/api#operation/createImportedDataset


   .. py:method:: create_wrangled_dataset(*, body_request)

      Creates wrangled dataset.

      :param body_request: Body of the POST request to be sent.
          For more details check
          https://clouddataprep.com/documentation/api#operation/createWrangledDataset


   .. py:method:: create_output_object(*, body_request)

      Creates output.

      :param body_request: Body of the POST request to be sent.
          For more details check
          https://clouddataprep.com/documentation/api#operation/createOutputObject


   .. py:method:: create_write_settings(*, body_request)

      Creates write settings.

      :param body_request: Body of the POST request to be sent.
          For more details check
          https://clouddataprep.com/documentation/api#tag/createWriteSetting


   .. py:method:: delete_imported_dataset(*, dataset_id)

      Deletes imported dataset.

      :param dataset_id: ID of the imported dataset for removal.



