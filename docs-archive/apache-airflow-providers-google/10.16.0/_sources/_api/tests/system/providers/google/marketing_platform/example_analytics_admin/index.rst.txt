:py:mod:`tests.system.providers.google.marketing_platform.example_analytics_admin`
==================================================================================

.. py:module:: tests.system.providers.google.marketing_platform.example_analytics_admin

.. autoapi-nested-parse::

   Example Airflow DAG that shows how to use Google Analytics (GA4) Admin Operators.

   This DAG relies on the following OS environment variables

   * GA_ACCOUNT_ID - Google Analytics account id.
   * GA_GOOGLE_ADS_PROPERTY_ID - Google Analytics property's id associated with Google Ads Link.

   In order to run this test, make sure you followed steps:
   1. Login to https://analytics.google.com
   2. In the settings section create an account and save its ID in the variable GA_ACCOUNT_ID.
   3. In the settings section go to the Property access management page and add your service account email with
   Editor permissions. This service account should be created on behalf of the account from the step 1.
   4. Make sure Google Analytics Admin API is enabled in your GCP project.
   5. Create Google Ads account and link it to your Google Analytics account in the GA admin panel.
   6. Associate the Google Ads account with a property, and save this property's id in the variable
   GA_GOOGLE_ADS_PROPERTY_ID.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   tests.system.providers.google.marketing_platform.example_analytics_admin.setup_connection



Attributes
~~~~~~~~~~

.. autoapisummary::

   tests.system.providers.google.marketing_platform.example_analytics_admin.ENV_ID
   tests.system.providers.google.marketing_platform.example_analytics_admin.DAG_ID
   tests.system.providers.google.marketing_platform.example_analytics_admin.CONNECTION_ID
   tests.system.providers.google.marketing_platform.example_analytics_admin.ACCOUNT_ID
   tests.system.providers.google.marketing_platform.example_analytics_admin.PROPERTY_ID
   tests.system.providers.google.marketing_platform.example_analytics_admin.DATA_STREAM_ID
   tests.system.providers.google.marketing_platform.example_analytics_admin.GA_GOOGLE_ADS_PROPERTY_ID
   tests.system.providers.google.marketing_platform.example_analytics_admin.GA_ADS_LINK_ID
   tests.system.providers.google.marketing_platform.example_analytics_admin.log
   tests.system.providers.google.marketing_platform.example_analytics_admin.test_run


.. py:data:: ENV_ID

   

.. py:data:: DAG_ID
   :value: 'example_google_analytics_admin'

   

.. py:data:: CONNECTION_ID

   

.. py:data:: ACCOUNT_ID

   

.. py:data:: PROPERTY_ID
   :value: "{{ task_instance.xcom_pull('create_property')['name'].split('/')[-1] }}"

   

.. py:data:: DATA_STREAM_ID
   :value: "{{ task_instance.xcom_pull('create_data_stream')['name'].split('/')[-1] }}"

   

.. py:data:: GA_GOOGLE_ADS_PROPERTY_ID

   

.. py:data:: GA_ADS_LINK_ID
   :value: "{{ task_instance.xcom_pull('list_google_ads_links')[0]['name'].split('/')[-1] }}"

   

.. py:data:: log

   

.. py:function:: setup_connection(**kwargs)


.. py:data:: test_run

   

