:py:mod:`tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query`
===============================================================================

.. py:module:: tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query

.. autoapi-nested-parse::

   Example Airflow DAG that performs query in a Cloud SQL instance.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.run_in_composer
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.ip_configuration
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.cloud_sql_instance_create_body
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.cloud_sql_database_create_body



Attributes
~~~~~~~~~~

.. autoapisummary::

   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.ENV_ID
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.PROJECT_ID
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.DAG_ID
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.REGION
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.HOME_DIR
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.COMPOSER_ENVIRONMENT
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.GET_COMPOSER_NETWORK_COMMAND
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.CLOUD_SQL_INSTANCE_NAME_TEMPLATE
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.CLOUD_SQL_INSTANCE_CREATE_BODY_TEMPLATE
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.DB_PROVIDERS
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.CLOUD_SQL_DATABASE_NAME
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.CLOUD_SQL_USER
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.CLOUD_SQL_PASSWORD
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.CLOUD_SQL_IP_ADDRESS
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.CLOUD_SQL_PUBLIC_PORT
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.CLOUD_SQL_INSTANCE_NAME
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.DATABASE_TYPE
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.CONNECTION_PROXY_TCP_KWARGS
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.CONNECTION_PROXY_SOCKET_KWARGS
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.CONNECTION_PUBLIC_TCP_KWARGS
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.CONNECTION_PROXY_SOCKET_ID
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.CONNECTION_PROXY_TCP_ID
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.CONNECTION_PUBLIC_TCP_ID
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.ConnectionConfig
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.CONNECTIONS
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.SQL
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.DELETE_CONNECTION_COMMAND
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.postgres_kwargs
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.mysql_kwargs
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.log
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.get_composer_network
   tests.system.providers.google.cloud.cloud_sql.example_cloud_sql_query.test_run


.. py:data:: ENV_ID

   

.. py:data:: PROJECT_ID

   

.. py:data:: DAG_ID
   :value: 'cloudsql-query'

   

.. py:data:: REGION
   :value: 'us-central1'

   

.. py:data:: HOME_DIR

   

.. py:data:: COMPOSER_ENVIRONMENT

   

.. py:data:: GET_COMPOSER_NETWORK_COMMAND
   :value: Multiline-String

    .. raw:: html

        <details><summary>Show Value</summary>

    .. code-block:: python

        """
            gcloud composer environments describe $COMPOSER_ENVIRONMENT     --location=$COMPOSER_LOCATION     --project=$GCP_PROJECT     --format="value(config.nodeConfig.network)"
            """

    .. raw:: html

        </details>

   

.. py:function:: run_in_composer()


.. py:data:: CLOUD_SQL_INSTANCE_NAME_TEMPLATE

   

.. py:data:: CLOUD_SQL_INSTANCE_CREATE_BODY_TEMPLATE
   :type: dict[str, Any]

   

.. py:data:: DB_PROVIDERS
   :type: Iterable[dict[str, str]]
   :value: ()

   

.. py:function:: ip_configuration()

   Generates an ip configuration for a CloudSQL instance creation body


.. py:function:: cloud_sql_instance_create_body(database_provider)

   Generates a CloudSQL instance creation body


.. py:data:: CLOUD_SQL_DATABASE_NAME
   :value: 'test_db'

   

.. py:data:: CLOUD_SQL_USER
   :value: 'test_user'

   

.. py:data:: CLOUD_SQL_PASSWORD
   :value: 'JoxHlwrPzwch0gz9'

   

.. py:data:: CLOUD_SQL_IP_ADDRESS
   :value: '127.0.0.1'

   

.. py:data:: CLOUD_SQL_PUBLIC_PORT
   :value: 5432

   

.. py:function:: cloud_sql_database_create_body(instance)

   Generates a CloudSQL database creation body


.. py:data:: CLOUD_SQL_INSTANCE_NAME
   :value: ''

   

.. py:data:: DATABASE_TYPE
   :value: ''

   

.. py:data:: CONNECTION_PROXY_TCP_KWARGS

   

.. py:data:: CONNECTION_PROXY_SOCKET_KWARGS

   

.. py:data:: CONNECTION_PUBLIC_TCP_KWARGS

   

.. py:data:: CONNECTION_PROXY_SOCKET_ID

   

.. py:data:: CONNECTION_PROXY_TCP_ID

   

.. py:data:: CONNECTION_PUBLIC_TCP_ID

   

.. py:data:: ConnectionConfig

   

.. py:data:: CONNECTIONS

   

.. py:data:: SQL
   :value: ['CREATE TABLE IF NOT EXISTS TABLE_TEST (I INTEGER)', 'CREATE TABLE IF NOT EXISTS TABLE_TEST (I...

   

.. py:data:: DELETE_CONNECTION_COMMAND
   :value: 'airflow connections delete {}'

   

.. py:data:: postgres_kwargs

   

.. py:data:: mysql_kwargs

   

.. py:data:: log

   

.. py:data:: get_composer_network

   

.. py:data:: test_run

   

