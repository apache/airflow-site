:py:mod:`airflow.providers.google.cloud.links.translate`
========================================================

.. py:module:: airflow.providers.google.cloud.links.translate

.. autoapi-nested-parse::

   This module contains Google Translate links.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.google.cloud.links.translate.TranslationLegacyDatasetLink
   airflow.providers.google.cloud.links.translate.TranslationDatasetListLink
   airflow.providers.google.cloud.links.translate.TranslationLegacyModelLink
   airflow.providers.google.cloud.links.translate.TranslationLegacyModelTrainLink
   airflow.providers.google.cloud.links.translate.TranslationLegacyModelPredictLink




Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.google.cloud.links.translate.TRANSLATION_BASE_LINK
   airflow.providers.google.cloud.links.translate.TRANSLATION_LEGACY_DATASET_LINK
   airflow.providers.google.cloud.links.translate.TRANSLATION_DATASET_LIST_LINK
   airflow.providers.google.cloud.links.translate.TRANSLATION_LEGACY_MODEL_LINK
   airflow.providers.google.cloud.links.translate.TRANSLATION_LEGACY_MODEL_TRAIN_LINK
   airflow.providers.google.cloud.links.translate.TRANSLATION_LEGACY_MODEL_PREDICT_LINK


.. py:data:: TRANSLATION_BASE_LINK

   

.. py:data:: TRANSLATION_LEGACY_DATASET_LINK

   

.. py:data:: TRANSLATION_DATASET_LIST_LINK

   

.. py:data:: TRANSLATION_LEGACY_MODEL_LINK

   

.. py:data:: TRANSLATION_LEGACY_MODEL_TRAIN_LINK

   

.. py:data:: TRANSLATION_LEGACY_MODEL_PREDICT_LINK

   

.. py:class:: TranslationLegacyDatasetLink


   Bases: :py:obj:`airflow.providers.google.cloud.links.base.BaseGoogleLink`

   Helper class for constructing Legacy Translation Dataset link.

   Legacy Datasets are created and managed by AutoML API.

   .. py:attribute:: name
      :value: 'Translation Legacy Dataset'

      

   .. py:attribute:: key
      :value: 'translation_legacy_dataset'

      

   .. py:attribute:: format_str

      

   .. py:method:: persist(context, task_instance, dataset_id, project_id)
      :staticmethod:



.. py:class:: TranslationDatasetListLink


   Bases: :py:obj:`airflow.providers.google.cloud.links.base.BaseGoogleLink`

   Helper class for constructing Translation Dataset List link.

   .. py:attribute:: name
      :value: 'Translation Dataset List'

      

   .. py:attribute:: key
      :value: 'translation_dataset_list'

      

   .. py:attribute:: format_str

      

   .. py:method:: persist(context, task_instance, project_id)
      :staticmethod:



.. py:class:: TranslationLegacyModelLink


   Bases: :py:obj:`airflow.providers.google.cloud.links.base.BaseGoogleLink`

   Helper class for constructing Translation Legacy Model link.

   Legacy Models are created and managed by AutoML API.

   .. py:attribute:: name
      :value: 'Translation Legacy Model'

      

   .. py:attribute:: key
      :value: 'translation_legacy_model'

      

   .. py:attribute:: format_str

      

   .. py:method:: persist(context, task_instance, dataset_id, model_id, project_id)
      :staticmethod:



.. py:class:: TranslationLegacyModelTrainLink


   Bases: :py:obj:`airflow.providers.google.cloud.links.base.BaseGoogleLink`

   Helper class for constructing Translation Legacy Model Train link.

   Legacy Models are created and managed by AutoML API.

   .. py:attribute:: name
      :value: 'Translation Legacy Model Train'

      

   .. py:attribute:: key
      :value: 'translation_legacy_model_train'

      

   .. py:attribute:: format_str

      

   .. py:method:: persist(context, task_instance, project_id)
      :staticmethod:



.. py:class:: TranslationLegacyModelPredictLink


   Bases: :py:obj:`airflow.providers.google.cloud.links.base.BaseGoogleLink`

   Helper class for constructing Translation Legacy Model Predict link.

   Legacy Models are created and managed by AutoML API.

   .. py:attribute:: name
      :value: 'Translation Legacy Model Predict'

      

   .. py:attribute:: key
      :value: 'translation_legacy_model_predict'

      

   .. py:attribute:: format_str

      

   .. py:method:: persist(context, task_instance, model_id, project_id)
      :staticmethod:



