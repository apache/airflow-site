:py:mod:`tests.system.providers.google.cloud.gcs.example_gcs_to_gcs`
====================================================================

.. py:module:: tests.system.providers.google.cloud.gcs.example_gcs_to_gcs

.. autoapi-nested-parse::

   Example Airflow DAG for Google Cloud Storage GCSSynchronizeBucketsOperator and
   GCSToGCSOperator operators.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   tests.system.providers.google.cloud.gcs.example_gcs_to_gcs.create_workdir



Attributes
~~~~~~~~~~

.. autoapisummary::

   tests.system.providers.google.cloud.gcs.example_gcs_to_gcs.ENV_ID
   tests.system.providers.google.cloud.gcs.example_gcs_to_gcs.PROJECT_ID
   tests.system.providers.google.cloud.gcs.example_gcs_to_gcs.DAG_ID
   tests.system.providers.google.cloud.gcs.example_gcs_to_gcs.BUCKET_NAME_SRC
   tests.system.providers.google.cloud.gcs.example_gcs_to_gcs.BUCKET_NAME_DST
   tests.system.providers.google.cloud.gcs.example_gcs_to_gcs.HOME
   tests.system.providers.google.cloud.gcs.example_gcs_to_gcs.PREFIX
   tests.system.providers.google.cloud.gcs.example_gcs_to_gcs.test_run


.. py:data:: ENV_ID

   

.. py:data:: PROJECT_ID

   

.. py:data:: DAG_ID
   :value: 'gcs_to_gcs'

   

.. py:data:: BUCKET_NAME_SRC

   

.. py:data:: BUCKET_NAME_DST

   

.. py:data:: HOME
   :value: '/home/airflow/gcs'

   

.. py:data:: PREFIX

   

.. py:function:: create_workdir()

   Task creates working directory. The logic behind this task is a workaround that provides sustainable
   execution in Composer environment: local files can be safely shared among tasks if they are located
   within '/home/airflow/gcs/data/' folder which is mounted to GCS bucket under the hood
   (https://cloud.google.com/composer/docs/composer-2/cloud-storage).
   Otherwise, worker nodes don't share local path and thus files created by one task aren't guaranteed
   to be accessible be others.


.. py:data:: test_run

   

