:py:mod:`tests.system.providers.google.cloud.gcs.example_gcs_sensor`
====================================================================

.. py:module:: tests.system.providers.google.cloud.gcs.example_gcs_sensor

.. autoapi-nested-parse::

   Example Airflow DAG for Google Cloud Storage sensors.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   tests.system.providers.google.cloud.gcs.example_gcs_sensor.workaround_in_debug_executor
   tests.system.providers.google.cloud.gcs.example_gcs_sensor.dummy_mode_property



Attributes
~~~~~~~~~~

.. autoapisummary::

   tests.system.providers.google.cloud.gcs.example_gcs_sensor.ENV_ID
   tests.system.providers.google.cloud.gcs.example_gcs_sensor.PROJECT_ID
   tests.system.providers.google.cloud.gcs.example_gcs_sensor.DAG_ID
   tests.system.providers.google.cloud.gcs.example_gcs_sensor.BUCKET_NAME
   tests.system.providers.google.cloud.gcs.example_gcs_sensor.FILE_NAME
   tests.system.providers.google.cloud.gcs.example_gcs_sensor.UPLOAD_FILE_PATH
   tests.system.providers.google.cloud.gcs.example_gcs_sensor.create_bucket
   tests.system.providers.google.cloud.gcs.example_gcs_sensor.test_run


.. py:data:: ENV_ID

   

.. py:data:: PROJECT_ID

   

.. py:data:: DAG_ID
   :value: 'gcs_sensor'

   

.. py:data:: BUCKET_NAME

   

.. py:data:: FILE_NAME
   :value: 'example_upload.txt'

   

.. py:data:: UPLOAD_FILE_PATH

   

.. py:function:: workaround_in_debug_executor(cls)

   DebugExecutor change sensor mode from poke to reschedule. Some sensors don't work correctly
   in reschedule mode. They are decorated with `poke_mode_only` decorator to fail when mode is changed.
   This method creates dummy property to overwrite it and force poke method to always return True.


.. py:function:: dummy_mode_property()


.. py:data:: create_bucket

   

.. py:data:: test_run

   

