:py:mod:`airflow.providers.google.cloud.hooks.vertex_ai.feature_store`
======================================================================

.. py:module:: airflow.providers.google.cloud.hooks.vertex_ai.feature_store

.. autoapi-nested-parse::

   This module contains a Google Cloud Vertex AI Feature Store hook.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.google.cloud.hooks.vertex_ai.feature_store.FeatureStoreHook




.. py:class:: FeatureStoreHook(gcp_conn_id = 'google_cloud_default', impersonation_chain = None, **kwargs)


   Bases: :py:obj:`airflow.providers.google.common.hooks.base_google.GoogleBaseHook`

   Hook for interacting with Google Cloud Vertex AI Feature Store.

   This hook provides an interface to manage Feature Store resources in Vertex AI,
   including feature views and their synchronization operations. It handles authentication
   and provides methods for common Feature Store operations.

   :param gcp_conn_id: The connection ID to use for connecting to Google Cloud Platform.
       Defaults to 'google_cloud_default'.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials. Can be either a single account or a chain of accounts required to
       get the access_token of the last account in the list, which will be impersonated
       in the request. If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role. If set as a sequence, the identities
       from the list must grant Service Account Token Creator IAM role to the directly
       preceding identity, with first account from the list granting this role to the
       originating account.

   .. py:method:: get_feature_online_store_admin_service_client(location = None)

      Create and returns a FeatureOnlineStoreAdminServiceClient object.

      This method initializes a client for interacting with the Feature Store API,
      handling proper endpoint configuration based on the specified location.

      :param location: Optional. The Google Cloud region where the service is located.
          If provided and not 'global', the client will be configured to use the
          region-specific API endpoint.


   .. py:method:: get_feature_view_sync(location, feature_view_sync_name)

      Retrieve the status and details of a Feature View synchronization operation.

      This method fetches information about a specific feature view sync operation,
      including its current status, timing information, and synchronization metrics.

      :param location: The Google Cloud region where the feature store is located
          (e.g., 'us-central1', 'us-east1').
      :param feature_view_sync_name: The full resource name of the feature view
          sync operation to retrieve.


   .. py:method:: sync_feature_view(location, feature_online_store_id, feature_view_id, project_id = PROVIDE_PROJECT_ID)

      Initiate a synchronization operation for a Feature View.

      This method triggers a sync operation that updates the online serving data
      for a feature view based on the latest data in the underlying batch source.
      The sync operation ensures that the online feature values are up-to-date
      for real-time serving.

      :param location: The Google Cloud region where the feature store is located
          (e.g., 'us-central1', 'us-east1').
      :param feature_online_store_id: The ID of the online feature store that
          contains the feature view to be synchronized.
      :param feature_view_id: The ID of the feature view to synchronize.
      :param project_id: The ID of the Google Cloud project that contains the
          feature store. If not provided, will attempt to determine from the
          environment.



