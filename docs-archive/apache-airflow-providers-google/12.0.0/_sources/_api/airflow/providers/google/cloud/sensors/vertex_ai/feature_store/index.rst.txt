:py:mod:`airflow.providers.google.cloud.sensors.vertex_ai.feature_store`
========================================================================

.. py:module:: airflow.providers.google.cloud.sensors.vertex_ai.feature_store

.. autoapi-nested-parse::

   This module contains a Vertex AI Feature Store sensor.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.google.cloud.sensors.vertex_ai.feature_store.FeatureViewSyncSensor




.. py:class:: FeatureViewSyncSensor(*, feature_view_sync_name, location, gcp_conn_id = 'google_cloud_default', wait_timeout = None, impersonation_chain = None, **kwargs)


   Bases: :py:obj:`airflow.sensors.base.BaseSensorOperator`

   Sensor to monitor the state of a Vertex AI Feature View sync operation.

   :param feature_view_sync_name: The name of the feature view sync operation to monitor. (templated)
   :param location: Required. The Cloud region in which to handle the request. (templated)
   :param gcp_conn_id: The connection ID to use connecting to Google Cloud Platform.
   :param wait_timeout: How many seconds to wait for sync to complete.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials.

   .. py:attribute:: template_fields
      :type: collections.abc.Sequence[str]
      :value: ('location', 'feature_view_sync_name')

      

   .. py:attribute:: ui_color
      :value: '#f0eee4'

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.


   .. py:method:: poke(context)

      Override when deriving this class.



