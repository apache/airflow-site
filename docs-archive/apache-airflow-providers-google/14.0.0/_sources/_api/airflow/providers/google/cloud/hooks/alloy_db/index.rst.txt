airflow.providers.google.cloud.hooks.alloy_db
=============================================

.. py:module:: airflow.providers.google.cloud.hooks.alloy_db

.. autoapi-nested-parse::

   Module contains a Google Alloy DB Hook.



Classes
-------

.. autoapisummary::

   airflow.providers.google.cloud.hooks.alloy_db.AlloyDbHook


Module Contents
---------------

.. py:class:: AlloyDbHook(*args, **kwargs)

   Bases: :py:obj:`airflow.providers.google.common.hooks.base_google.GoogleBaseHook`


   Google Alloy DB Hook.


   .. py:method:: get_alloy_db_admin_client()

      Retrieve AlloyDB client.



   .. py:method:: wait_for_operation(timeout, operation)

      Wait for long-lasting operation to complete.



   .. py:method:: create_cluster(cluster_id, cluster, location, project_id = PROVIDE_PROJECT_ID, request_id = None, validate_only = False, retry = DEFAULT, timeout = None, metadata = ())

      Create an Alloy DB cluster.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.CreateClusterRequest

      :param cluster_id: Required. ID of the cluster to create.
      :param cluster: Required. Cluster to create. For more details please see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.Cluster
      :param location: Required. The ID of the Google Cloud region where the cluster is located.
      :param project_id: Optional. The ID of the Google Cloud project where the cluster is located.
      :param request_id: Optional. An optional request ID to identify requests. Specify a unique request ID
          so that if you must retry your request, the server ignores the request if it has already been
          completed. The server guarantees that for at least 60 minutes since the first request.
          For example, consider a situation where you make an initial request and the request times out.
          If you make the request again with the same request ID, the server can check if the original operation
          with the same request ID was received, and if so, ignores the second request.
          This prevents clients from accidentally creating duplicate commitments.
          The request ID must be a valid UUID with the exception that zero UUID is not supported
          (00000000-0000-0000-0000-000000000000).
      :param validate_only: Optional. If set, performs request validation, but does not actually execute
          the create request.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



   .. py:method:: create_secondary_cluster(cluster_id, cluster, location, project_id = PROVIDE_PROJECT_ID, request_id = None, validate_only = False, retry = DEFAULT, timeout = None, metadata = ())

      Create a secondary Alloy DB cluster.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.CreateClusterRequest

      :param cluster_id: Required. ID of the cluster to create.
      :param cluster: Required. Cluster to create. For more details please see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.Cluster
      :param location: Required. The ID of the Google Cloud region where the cluster is located.
      :param project_id: Optional. The ID of the Google Cloud project where the cluster is located.
      :param request_id: Optional. An optional request ID to identify requests. Specify a unique request ID
          so that if you must retry your request, the server ignores the request if it has already been
          completed. The server guarantees that for at least 60 minutes since the first request.
          For example, consider a situation where you make an initial request and the request times out.
          If you make the request again with the same request ID, the server can check if the original operation
          with the same request ID was received, and if so, ignores the second request.
          This prevents clients from accidentally creating duplicate commitments.
          The request ID must be a valid UUID with the exception that zero UUID is not supported
          (00000000-0000-0000-0000-000000000000).
      :param validate_only: Optional. If set, performs request validation, but does not actually execute
          the create request.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



   .. py:method:: get_cluster(cluster_id, location, project_id = PROVIDE_PROJECT_ID, retry = DEFAULT, timeout = None, metadata = ())

      Retrieve an Alloy DB cluster.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.GetClusterRequest

      :param cluster_id: Required. ID of the cluster.
      :param location: Required. The ID of the Google Cloud region where the cluster is located.
      :param project_id: Optional. The ID of the Google Cloud project where the cluster is located.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



   .. py:method:: update_cluster(cluster_id, cluster, location, update_mask = None, project_id = PROVIDE_PROJECT_ID, allow_missing = False, request_id = None, validate_only = False, retry = DEFAULT, timeout = None, metadata = ())

      Update an Alloy DB cluster.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.UpdateClusterRequest

      :param cluster_id: Required. ID of the cluster to update.
      :param cluster: Required. Cluster to create. For more details please see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.Cluster
      :param location: Required. The ID of the Google Cloud region where the cluster is located.
      :param update_mask: Optional. Field mask is used to specify the fields to be overwritten in the
          Cluster resource by the update.
      :param request_id: Optional. An optional request ID to identify requests. Specify a unique request ID
          so that if you must retry your request, the server ignores the request if it has already been
          completed. The server guarantees that for at least 60 minutes since the first request.
          For example, consider a situation where you make an initial request and the request times out.
          If you make the request again with the same request ID, the server can check if the original operation
          with the same request ID was received, and if so, ignores the second request.
          This prevents clients from accidentally creating duplicate commitments.
          The request ID must be a valid UUID with the exception that zero UUID is not supported
          (00000000-0000-0000-0000-000000000000).
      :param validate_only: Optional. If set, performs request validation, but does not actually execute
          the create request.
      :param project_id: Optional. The ID of the Google Cloud project where the cluster is located.
      :param allow_missing: Optional. If set to true, update succeeds even if cluster is not found.
          In that case, a new cluster is created and update_mask is ignored.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



   .. py:method:: delete_cluster(cluster_id, location, project_id = PROVIDE_PROJECT_ID, request_id = None, etag = None, validate_only = False, force = False, retry = DEFAULT, timeout = None, metadata = ())

      Delete an Alloy DB cluster.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.DeleteClusterRequest

      :param cluster_id: Required. ID of the cluster to delete.
      :param location: Required. The ID of the Google Cloud region where the cluster is located.
      :param project_id: Optional. The ID of the Google Cloud project where the cluster is located.
      :param request_id: Optional. An optional request ID to identify requests. Specify a unique request ID
          so that if you must retry your request, the server ignores the request if it has already been
          completed. The server guarantees that for at least 60 minutes since the first request.
          For example, consider a situation where you make an initial request and the request times out.
          If you make the request again with the same request ID, the server can check if the original operation
          with the same request ID was received, and if so, ignores the second request.
          This prevents clients from accidentally creating duplicate commitments.
          The request ID must be a valid UUID with the exception that zero UUID is not supported
          (00000000-0000-0000-0000-000000000000).
      :param etag: Optional. The current etag of the Cluster. If an etag is provided and does not match the
          current etag of the Cluster, deletion will be blocked and an ABORTED error will be returned.
      :param validate_only: Optional. If set, performs request validation, but does not actually execute
          the create request.
      :param force: Optional. Whether to cascade delete child instances for given cluster.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



   .. py:method:: create_instance(cluster_id, instance_id, instance, location, project_id = PROVIDE_PROJECT_ID, request_id = None, validate_only = False, retry = DEFAULT, timeout = None, metadata = ())

      Create an instance in a given Alloy DB cluster.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.CreateInstanceRequest

      :param cluster_id: Required. ID of the cluster for creating an instance in.
      :param instance_id: Required. ID of the instance to create.
      :param instance: Required. Instance to create. For more details please see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.Instance
      :param location: Required. The ID of the Google Cloud region where the cluster is located.
      :param project_id: Optional. The ID of the Google Cloud project where the cluster is located.
      :param request_id: Optional. An optional request ID to identify requests. Specify a unique request ID
          so that if you must retry your request, the server ignores the request if it has already been
          completed. The server guarantees that for at least 60 minutes since the first request.
          For example, consider a situation where you make an initial request and the request times out.
          If you make the request again with the same request ID, the server can check if the original operation
          with the same request ID was received, and if so, ignores the second request.
          This prevents clients from accidentally creating duplicate commitments.
          The request ID must be a valid UUID with the exception that zero UUID is not supported
          (00000000-0000-0000-0000-000000000000).
      :param validate_only: Optional. If set, performs request validation, but does not actually execute
          the create request.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



   .. py:method:: create_secondary_instance(cluster_id, instance_id, instance, location, project_id = PROVIDE_PROJECT_ID, request_id = None, validate_only = False, retry = DEFAULT, timeout = None, metadata = ())

      Create a secondary instance in a given Alloy DB cluster.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.CreateSecondaryInstanceRequest

      :param cluster_id: Required. ID of the cluster for creating an instance in.
      :param instance_id: Required. ID of the instance to create.
      :param instance: Required. Instance to create. For more details please see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.Instance
      :param location: Required. The ID of the Google Cloud region where the cluster is located.
      :param project_id: Optional. The ID of the Google Cloud project where the cluster is located.
      :param request_id: Optional. An optional request ID to identify requests. Specify a unique request ID
          so that if you must retry your request, the server ignores the request if it has already been
          completed. The server guarantees that for at least 60 minutes since the first request.
          For example, consider a situation where you make an initial request and the request times out.
          If you make the request again with the same request ID, the server can check if the original operation
          with the same request ID was received, and if so, ignores the second request.
          This prevents clients from accidentally creating duplicate commitments.
          The request ID must be a valid UUID with the exception that zero UUID is not supported
          (00000000-0000-0000-0000-000000000000).
      :param validate_only: Optional. If set, performs request validation, but does not actually execute
          the create request.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



   .. py:method:: get_instance(cluster_id, instance_id, location, project_id = PROVIDE_PROJECT_ID, retry = DEFAULT, timeout = None, metadata = ())

      Retrieve an Alloy DB instance.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.GetInstanceRequest

      :param cluster_id: Required. ID of the cluster.
      :param instance_id: Required. ID of the instance.
      :param location: Required. The ID of the Google Cloud region where the cluster is located.
      :param project_id: Optional. The ID of the Google Cloud project where the cluster is located.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



   .. py:method:: update_instance(cluster_id, instance_id, instance, location, update_mask = None, project_id = PROVIDE_PROJECT_ID, allow_missing = False, request_id = None, validate_only = False, retry = DEFAULT, timeout = None, metadata = ())

      Update an Alloy DB instance.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.UpdateInstanceRequest

      :param cluster_id: Required. ID of the cluster.
      :param instance_id: Required. ID of the cluster to update.
      :param instance: Required. Cluster to update. For more details please see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.Instance
      :param location: Required. The ID of the Google Cloud region where the cluster is located.
      :param update_mask: Optional. Field mask is used to specify the fields to be overwritten in the
          Instance resource by the update.
      :param request_id: Optional. The ID of an existing request object.:param request_id: Optional. An optional request ID to identify requests. Specify a unique request ID
          so that if you must retry your request, the server ignores the request if it has already been
          completed. The server guarantees that for at least 60 minutes since the first request.
          For example, consider a situation where you make an initial request and the request times out.
          If you make the request again with the same request ID, the server can check if the original operation
          with the same request ID was received, and if so, ignores the second request.
          This prevents clients from accidentally creating duplicate commitments.
          The request ID must be a valid UUID with the exception that zero UUID is not supported
          (00000000-0000-0000-0000-000000000000).
      :param validate_only: Optional. If set, performs request validation, but does not actually execute
          the create request.
      :param project_id: Optional. The ID of the Google Cloud project where the cluster is located.
      :param allow_missing: Optional. If set to true, update succeeds even if cluster is not found.
          In that case, a new cluster is created and update_mask is ignored.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



   .. py:method:: delete_instance(instance_id, cluster_id, location, project_id = PROVIDE_PROJECT_ID, request_id = None, etag = None, validate_only = False, retry = DEFAULT, timeout = None, metadata = ())

      Delete an Alloy DB instance.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.DeleteInstanceRequest

      :param instance_id: Required. ID of the instance to delete.
      :param cluster_id: Required. ID of the cluster.
      :param location: Required. The ID of the Google Cloud region where the instance is located.
      :param project_id: Optional. The ID of the Google Cloud project where the instance is located.
      :param request_id: Optional. An optional request ID to identify requests. Specify a unique request ID
          so that if you must retry your request, the server ignores the request if it has already been
          completed. The server guarantees that for at least 60 minutes since the first request.
          For example, consider a situation where you make an initial request and the request times out.
          If you make the request again with the same request ID, the server can check if the original operation
          with the same request ID was received, and if so, ignores the second request.
          This prevents clients from accidentally creating duplicate commitments.
          The request ID must be a valid UUID with the exception that zero UUID is not supported
          (00000000-0000-0000-0000-000000000000).
      :param etag: Optional. The current etag of the Instance. If an etag is provided and does not match the
          current etag of the Instance, deletion will be blocked and an ABORTED error will be returned.
      :param validate_only: Optional. If set, performs request validation, but does not actually execute
          the delete request.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



   .. py:method:: create_user(user_id, user, cluster_id, location, project_id = PROVIDE_PROJECT_ID, request_id = None, validate_only = False, retry = DEFAULT, timeout = None, metadata = ())

      Create a user in a given Alloy DB cluster.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.CreateUserRequest

      :param user_id: Required. ID of the user to create.
      :param user: Required. The user to create. For more details please see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.User
      :param cluster_id: Required. ID of the cluster for creating a user in.
      :param location: Required. The ID of the Google Cloud region where the cluster is located.
      :param project_id: Optional. The ID of the Google Cloud project where the cluster is located.
      :param request_id: Optional. An optional request ID to identify requests. Specify a unique request ID
          so that if you must retry your request, the server ignores the request if it has already been
          completed. The server guarantees that for at least 60 minutes since the first request.
          For example, consider a situation where you make an initial request and the request times out.
          If you make the request again with the same request ID, the server can check if the original operation
          with the same request ID was received, and if so, ignores the second request.
          This prevents clients from accidentally creating duplicate commitments.
          The request ID must be a valid UUID with the exception that zero UUID is not supported
          (00000000-0000-0000-0000-000000000000).
      :param validate_only: Optional. If set, performs request validation, but does not actually execute
          the create request.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



   .. py:method:: get_user(user_id, cluster_id, location, project_id = PROVIDE_PROJECT_ID, retry = DEFAULT, timeout = None, metadata = ())

      Get a user in a given Alloy DB cluster.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.GetUserRequest

      :param user_id: Required. ID of the user to create.
      :param cluster_id: Required. ID of the cluster for creating a user in.
      :param location: Required. The ID of the Google Cloud region where the cluster is located.
      :param project_id: Optional. The ID of the Google Cloud project where the cluster is located.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



   .. py:method:: update_user(cluster_id, user_id, user, location, update_mask = None, allow_missing = False, project_id = PROVIDE_PROJECT_ID, request_id = None, validate_only = False, retry = DEFAULT, timeout = None, metadata = ())

      Update an Alloy DB user.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.UpdateUserRequest

      :param cluster_id: Required. ID of the cluster.
      :param user_id: Required. ID of the user to update.
      :param user: Required. User to update. For more details please see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.User
      :param location: Required. The ID of the Google Cloud region where the cluster is located.
      :param update_mask: Optional. Field mask is used to specify the fields to be overwritten in the
          User resource by the update.
      :param request_id: Optional. The ID of an existing request object.:param request_id: Optional. An optional request ID to identify requests. Specify a unique request ID
          so that if you must retry your request, the server ignores the request if it has already been
          completed. The server guarantees that for at least 60 minutes since the first request.
          For example, consider a situation where you make an initial request and the request times out.
          If you make the request again with the same request ID, the server can check if the original operation
          with the same request ID was received, and if so, ignores the second request.
          This prevents clients from accidentally creating duplicate commitments.
          The request ID must be a valid UUID with the exception that zero UUID is not supported
          (00000000-0000-0000-0000-000000000000).
      :param validate_only: Optional. If set, performs request validation, but does not actually execute
          the create request.
      :param allow_missing: Optional. If set to true, update succeeds even if cluster is not found.
          In that case, a new cluster is created and update_mask is ignored.
      :param project_id: Optional. The ID of the Google Cloud project where the cluster is located.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



   .. py:method:: delete_user(user_id, cluster_id, location, project_id = PROVIDE_PROJECT_ID, request_id = None, validate_only = False, retry = DEFAULT, timeout = None, metadata = ())

      Delete an Alloy DB user.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.DeleteUserRequest

      :param user_id: Required. ID of the user to delete.
      :param cluster_id: Required. ID of the cluster.
      :param location: Required. The ID of the Google Cloud region where the instance is located.
      :param project_id: Optional. The ID of the Google Cloud project where the instance is located.
      :param request_id: Optional. An optional request ID to identify requests. Specify a unique request ID
          so that if you must retry your request, the server ignores the request if it has already been
          completed. The server guarantees that for at least 60 minutes since the first request.
          For example, consider a situation where you make an initial request and the request times out.
          If you make the request again with the same request ID, the server can check if the original operation
          with the same request ID was received, and if so, ignores the second request.
          This prevents clients from accidentally creating duplicate commitments.
          The request ID must be a valid UUID with the exception that zero UUID is not supported
          (00000000-0000-0000-0000-000000000000).
      :param validate_only: Optional. If set, performs request validation, but does not actually execute
          the delete request.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



   .. py:method:: create_backup(backup_id, backup, location, project_id = PROVIDE_PROJECT_ID, request_id = None, validate_only = False, retry = DEFAULT, timeout = None, metadata = ())

      Create a backup in a given Alloy DB cluster.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.CreateBackupRequest

      :param backup_id: Required. ID of the backup to create.
      :param backup: Required. The backup to create. For more details please see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.Backup
      :param location: Required. The ID of the Google Cloud region where the cluster is located.
      :param project_id: Optional. The ID of the Google Cloud project where the cluster is located.
      :param request_id: Optional. An optional request ID to identify requests. Specify a unique request ID
          so that if you must retry your request, the server ignores the request if it has already been
          completed. The server guarantees that for at least 60 minutes since the first request.
          For example, consider a situation where you make an initial request and the request times out.
          If you make the request again with the same request ID, the server can check if the original operation
          with the same request ID was received, and if so, ignores the second request.
          This prevents clients from accidentally creating duplicate commitments.
          The request ID must be a valid UUID with the exception that zero UUID is not supported
          (00000000-0000-0000-0000-000000000000).
      :param validate_only: Optional. If set, performs request validation, but does not actually execute
          the create request.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



   .. py:method:: get_backup(backup_id, location, project_id = PROVIDE_PROJECT_ID, retry = DEFAULT, timeout = None, metadata = ())

      Get a backup in a given Alloy DB cluster.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.GetBackupRequest

      :param backup_id: Required. ID of the backup to create.
      :param location: Required. The ID of the Google Cloud region where the cluster is located.
      :param project_id: Optional. The ID of the Google Cloud project where the cluster is located.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



   .. py:method:: update_backup(backup_id, backup, location, update_mask = None, allow_missing = False, project_id = PROVIDE_PROJECT_ID, request_id = None, validate_only = False, retry = DEFAULT, timeout = None, metadata = ())

      Update an Alloy DB backup.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.UpdateBackupRequest

      :param backup_id: Required. ID of the backup to update.
      :param backup: Required. Backup to update. For more details please see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.Backup
      :param location: Required. The ID of the Google Cloud region where the cluster is located.
      :param update_mask: Optional. Field mask is used to specify the fields to be overwritten in the
          Backup resource by the update.
      :param request_id: Optional. The ID of an existing request object.:param request_id: Optional. An optional request ID to identify requests. Specify a unique request ID
          so that if you must retry your request, the server ignores the request if it has already been
          completed. The server guarantees that for at least 60 minutes since the first request.
          For example, consider a situation where you make an initial request and the request times out.
          If you make the request again with the same request ID, the server can check if the original operation
          with the same request ID was received, and if so, ignores the second request.
          This prevents clients from accidentally creating duplicate commitments.
          The request ID must be a valid UUID with the exception that zero UUID is not supported
          (00000000-0000-0000-0000-000000000000).
      :param validate_only: Optional. If set, performs request validation, but does not actually execute
          the create request.
      :param allow_missing: Optional. If set to true, update succeeds even if cluster is not found.
          In that case, a new cluster is created and update_mask is ignored.
      :param project_id: Optional. The ID of the Google Cloud project where the cluster is located.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



   .. py:method:: delete_backup(backup_id, location, project_id = PROVIDE_PROJECT_ID, request_id = None, validate_only = False, retry = DEFAULT, timeout = None, metadata = ())

      Delete an Alloy DB backup.

      .. seealso::
          For more details see API documentation:
          https://cloud.google.com/python/docs/reference/alloydb/latest/google.cloud.alloydb_v1.types.DeleteBackupRequest

      :param backup_id: Required. ID of the backup to delete.
      :param location: Required. The ID of the Google Cloud region where the instance is located.
      :param project_id: Optional. The ID of the Google Cloud project where the instance is located.
      :param request_id: Optional. An optional request ID to identify requests. Specify a unique request ID
          so that if you must retry your request, the server ignores the request if it has already been
          completed. The server guarantees that for at least 60 minutes since the first request.
          For example, consider a situation where you make an initial request and the request times out.
          If you make the request again with the same request ID, the server can check if the original operation
          with the same request ID was received, and if so, ignores the second request.
          This prevents clients from accidentally creating duplicate commitments.
          The request ID must be a valid UUID with the exception that zero UUID is not supported
          (00000000-0000-0000-0000-000000000000).
      :param validate_only: Optional. If set, performs request validation, but does not actually execute
          the delete request.
      :param retry: Optional. Designation of what errors, if any, should be retried.
      :param timeout: Optional. The timeout for this request.
      :param metadata: Optional. Strings which should be sent along with the request as metadata.



