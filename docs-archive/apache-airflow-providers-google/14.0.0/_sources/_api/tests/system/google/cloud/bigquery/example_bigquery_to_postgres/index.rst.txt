tests.system.google.cloud.bigquery.example_bigquery_to_postgres
===============================================================

.. py:module:: tests.system.google.cloud.bigquery.example_bigquery_to_postgres

.. autoapi-nested-parse::

   Example Airflow DAG for Google BigQuery service.

   This DAG relies on the following OS environment variables

   * AIRFLOW__API__GOOGLE_KEY_PATH - Path to service account key file. Note, you can skip this variable if you
     run this DAG in a Composer environment.



Attributes
----------

.. autoapisummary::

   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.ENV_ID
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.PROJECT_ID
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.DAG_ID
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.REGION
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.ZONE
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.NETWORK
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.CONNECTION_ID
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.CONNECTION_TYPE
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.BIGQUERY_DATASET_NAME
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.BIGQUERY_TABLE
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.SOURCE_OBJECT_NAME
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.BATCH_SIZE
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.UPLOAD_DATA_TO_BIGQUERY
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.DB_NAME
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.DB_PORT
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.DB_USER_NAME
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.DB_USER_PASSWORD
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.SCHEMA
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.SETUP_POSTGRES_COMMAND
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.SQL_TABLE
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.SQL_CREATE_TABLE
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.GCE_MACHINE_TYPE
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.GCE_INSTANCE_NAME
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.GCE_INSTANCE_BODY
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.FIREWALL_RULE_NAME
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.CREATE_FIREWALL_RULE_COMMAND
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.DELETE_FIREWALL_RULE_COMMAND
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.DELETE_PERSISTENT_DISK_COMMAND
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.log
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.create_bigquery_dataset
   tests.system.google.cloud.bigquery.example_bigquery_to_postgres.test_run


Module Contents
---------------

.. py:data:: ENV_ID

.. py:data:: PROJECT_ID

.. py:data:: DAG_ID
   :value: 'bigquery_to_postgres'


.. py:data:: REGION
   :value: 'us-west2'


.. py:data:: ZONE
   :value: 'us-west2-a'


.. py:data:: NETWORK
   :value: 'default'


.. py:data:: CONNECTION_ID
   :value: ''


.. py:data:: CONNECTION_TYPE
   :value: 'postgres'


.. py:data:: BIGQUERY_DATASET_NAME
   :value: ''


.. py:data:: BIGQUERY_TABLE
   :value: 'test_table'


.. py:data:: SOURCE_OBJECT_NAME
   :value: 'gs://airflow-system-tests-resources/bigquery/salaries_1k.csv'


.. py:data:: BATCH_SIZE
   :value: 500


.. py:data:: UPLOAD_DATA_TO_BIGQUERY

.. py:data:: DB_NAME
   :value: 'testdb'


.. py:data:: DB_PORT
   :value: 5432


.. py:data:: DB_USER_NAME
   :value: 'root'


.. py:data:: DB_USER_PASSWORD
   :value: 'demo_password'


.. py:data:: SCHEMA

.. py:data:: SETUP_POSTGRES_COMMAND
   :value: Multiline-String

   .. raw:: html

      <details><summary>Show Value</summary>

   .. code-block:: python

      """
      sudo apt update &&
      sudo apt install -y docker.io &&
      sudo docker run -d -p 5432:5432 --name testdb     -e PGUSER=root     -e POSTGRES_USER=root     -e POSTGRES_PASSWORD=demo_password     -e POSTGRES_DB=testdb     postgres
      """

   .. raw:: html

      </details>



.. py:data:: SQL_TABLE
   :value: 'test_table'


.. py:data:: SQL_CREATE_TABLE
   :value: 'CREATE TABLE IF NOT EXISTS test_table (emp_name VARCHAR(64), salary FLOAT)'


.. py:data:: GCE_MACHINE_TYPE
   :value: 'n1-standard-1'


.. py:data:: GCE_INSTANCE_NAME
   :value: ''


.. py:data:: GCE_INSTANCE_BODY

.. py:data:: FIREWALL_RULE_NAME
   :value: ''


.. py:data:: CREATE_FIREWALL_RULE_COMMAND

.. py:data:: DELETE_FIREWALL_RULE_COMMAND

.. py:data:: DELETE_PERSISTENT_DISK_COMMAND

.. py:data:: log

.. py:data:: create_bigquery_dataset

.. py:data:: test_run

