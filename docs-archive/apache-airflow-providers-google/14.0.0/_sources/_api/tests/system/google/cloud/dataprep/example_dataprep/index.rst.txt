tests.system.google.cloud.dataprep.example_dataprep
===================================================

.. py:module:: tests.system.google.cloud.dataprep.example_dataprep

.. autoapi-nested-parse::

   Example Airflow DAG that shows how to use Google Dataprep.

   This DAG relies on the following OS environment variables

   * SYSTEM_TESTS_DATAPREP_TOKEN - Dataprep API access token.
     For generating it please use instruction
     https://docs.trifacta.com/display/DP/Manage+API+Access+Tokens#:~:text=Enable%20individual%20access-,Generate%20New%20Token,-Via%20UI.



Attributes
----------

.. autoapisummary::

   tests.system.google.cloud.dataprep.example_dataprep.ENV_ID
   tests.system.google.cloud.dataprep.example_dataprep.DAG_ID
   tests.system.google.cloud.dataprep.example_dataprep.CONNECTION_ID
   tests.system.google.cloud.dataprep.example_dataprep.DATAPREP_TOKEN
   tests.system.google.cloud.dataprep.example_dataprep.GCP_PROJECT_ID
   tests.system.google.cloud.dataprep.example_dataprep.GCS_BUCKET_NAME
   tests.system.google.cloud.dataprep.example_dataprep.GCS_BUCKET_PATH
   tests.system.google.cloud.dataprep.example_dataprep.DATASET_URI
   tests.system.google.cloud.dataprep.example_dataprep.DATASET_NAME
   tests.system.google.cloud.dataprep.example_dataprep.DATASET_WRANGLED_NAME
   tests.system.google.cloud.dataprep.example_dataprep.DATASET_WRANGLED_ID
   tests.system.google.cloud.dataprep.example_dataprep.FLOW_ID
   tests.system.google.cloud.dataprep.example_dataprep.FLOW_COPY_ID
   tests.system.google.cloud.dataprep.example_dataprep.RECIPE_NAME
   tests.system.google.cloud.dataprep.example_dataprep.WRITE_SETTINGS
   tests.system.google.cloud.dataprep.example_dataprep.log
   tests.system.google.cloud.dataprep.example_dataprep.create_bucket_task
   tests.system.google.cloud.dataprep.example_dataprep.test_run


Module Contents
---------------

.. py:data:: ENV_ID

.. py:data:: DAG_ID
   :value: 'dataprep'


.. py:data:: CONNECTION_ID
   :value: ''


.. py:data:: DATAPREP_TOKEN

.. py:data:: GCP_PROJECT_ID

.. py:data:: GCS_BUCKET_NAME
   :value: 'dataprep-bucket-dataprep-Uninferable'


.. py:data:: GCS_BUCKET_PATH
   :value: 'gs://dataprep-bucket-dataprep-Uninferable/task_results/'


.. py:data:: DATASET_URI
   :value: 'gs://airflow-system-tests-resources/dataprep/dataset-00000.parquet'


.. py:data:: DATASET_NAME
   :value: ''


.. py:data:: DATASET_WRANGLED_NAME
   :value: 'wrangled_'


.. py:data:: DATASET_WRANGLED_ID
   :value: "{{ task_instance.xcom_pull('create_wrangled_dataset')['id'] }}"


.. py:data:: FLOW_ID
   :value: "{{ task_instance.xcom_pull('create_flow')['id'] }}"


.. py:data:: FLOW_COPY_ID
   :value: "{{ task_instance.xcom_pull('copy_flow')['id'] }}"


.. py:data:: RECIPE_NAME
   :value: 'wrangled_'


.. py:data:: WRITE_SETTINGS

.. py:data:: log

.. py:data:: create_bucket_task

.. py:data:: test_run

