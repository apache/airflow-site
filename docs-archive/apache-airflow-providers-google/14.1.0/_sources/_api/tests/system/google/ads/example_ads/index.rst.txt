tests.system.google.ads.example_ads
===================================

.. py:module:: tests.system.google.ads.example_ads

.. autoapi-nested-parse::

   Example Airflow DAG that shows how to use GoogleAdsToGcsOperator.



Attributes
----------

.. autoapisummary::

   tests.system.google.ads.example_ads.ENV_ID
   tests.system.google.ads.example_ads.PROJECT_ID
   tests.system.google.ads.example_ads.API_VERSION
   tests.system.google.ads.example_ads.DAG_ID
   tests.system.google.ads.example_ads.BUCKET_NAME
   tests.system.google.ads.example_ads.CLIENT_IDS
   tests.system.google.ads.example_ads.GCS_OBJ_PATH
   tests.system.google.ads.example_ads.GCS_ACCOUNTS_CSV
   tests.system.google.ads.example_ads.QUERY
   tests.system.google.ads.example_ads.FIELDS_TO_EXTRACT
   tests.system.google.ads.example_ads.create_bucket
   tests.system.google.ads.example_ads.test_run


Module Contents
---------------

.. py:data:: ENV_ID

.. py:data:: PROJECT_ID

.. py:data:: API_VERSION
   :value: 'v19'


.. py:data:: DAG_ID
   :value: 'example_google_ads'


.. py:data:: BUCKET_NAME
   :value: 'bucket_ads_Uninferable'


.. py:data:: CLIENT_IDS
   :value: ['1111111111', '2222222222']


.. py:data:: GCS_OBJ_PATH
   :value: 'folder_name/google-ads-api-results.csv'


.. py:data:: GCS_ACCOUNTS_CSV
   :value: 'folder_name/accounts.csv'


.. py:data:: QUERY
   :value: Multiline-String

   .. raw:: html

      <details><summary>Show Value</summary>

   .. code-block:: python

      """
          SELECT
              segments.date,
              customer.id,
              campaign.id,
              ad_group.id,
              ad_group_ad.ad.id,
              metrics.impressions,
              metrics.clicks,
              metrics.conversions,
              metrics.all_conversions,
              metrics.cost_micros
          FROM
              ad_group_ad
          WHERE
              segments.date >= '2020-02-01'
              AND segments.date <= '2020-02-29'
          """

   .. raw:: html

      </details>



.. py:data:: FIELDS_TO_EXTRACT
   :value: ['segments.date.value', 'customer.id.value', 'campaign.id.value', 'ad_group.id.value',...


.. py:data:: create_bucket

.. py:data:: test_run

