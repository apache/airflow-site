tests.system.google.cloud.bigquery.example_bigquery_to_mssql
============================================================

.. py:module:: tests.system.google.cloud.bigquery.example_bigquery_to_mssql

.. autoapi-nested-parse::

   Example Airflow DAG for Google BigQuery service.

   This DAG relies on the following OS environment variables

   * AIRFLOW__API__GOOGLE_KEY_PATH - Path to service account key file. Note, you can skip this variable if you
     run this DAG in a Composer environment.



Attributes
----------

.. autoapisummary::

   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.ENV_ID
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.PROJECT_ID
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.DAG_ID
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.REGION
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.ZONE
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.NETWORK
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.CONNECTION_ID
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.CONNECTION_TYPE
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.BIGQUERY_DATASET_NAME
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.BIGQUERY_TABLE
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.INSERT_ROWS_QUERY
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.SCHEMA
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.DB_PORT
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.DB_USER_NAME
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.DB_USER_PASSWORD
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.SETUP_MSSQL_COMMAND
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.SQL_TABLE
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.SQL_CREATE_TABLE
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.GCE_MACHINE_TYPE
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.GCE_INSTANCE_NAME
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.GCE_INSTANCE_BODY
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.FIREWALL_RULE_NAME
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.CREATE_FIREWALL_RULE_COMMAND
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.DELETE_FIREWALL_RULE_COMMAND
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.DELETE_PERSISTENT_DISK_COMMAND
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.log
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.create_bigquery_dataset
   tests.system.google.cloud.bigquery.example_bigquery_to_mssql.test_run


Module Contents
---------------

.. py:data:: ENV_ID

.. py:data:: PROJECT_ID

.. py:data:: DAG_ID
   :value: 'bigquery_to_mssql'


.. py:data:: REGION
   :value: 'us-west2'


.. py:data:: ZONE
   :value: 'us-west2-a'


.. py:data:: NETWORK
   :value: 'default'


.. py:data:: CONNECTION_ID
   :value: ''


.. py:data:: CONNECTION_TYPE
   :value: 'mssql'


.. py:data:: BIGQUERY_DATASET_NAME
   :value: ''


.. py:data:: BIGQUERY_TABLE
   :value: 'table_42'


.. py:data:: INSERT_ROWS_QUERY
   :value: "INSERT INTO .table_42 (emp_name, salary) VALUES ('emp 1', 10000), ('emp 2', 15000);"


.. py:data:: SCHEMA

.. py:data:: DB_PORT
   :value: 1433


.. py:data:: DB_USER_NAME
   :value: 'sa'


.. py:data:: DB_USER_PASSWORD
   :value: '5FHq4fSZ85kK6g0n'


.. py:data:: SETUP_MSSQL_COMMAND
   :value: Multiline-String

   .. raw:: html

      <details><summary>Show Value</summary>

   .. code-block:: python

      """
      sudo apt update &&
      sudo apt install -y docker.io &&
      sudo docker run -e ACCEPT_EULA=Y -e MSSQL_SA_PASSWORD=5FHq4fSZ85kK6g0n -p 1433:1433     -d mcr.microsoft.com/mssql/server:2022-latest
      """

   .. raw:: html

      </details>



.. py:data:: SQL_TABLE
   :value: 'test_table'


.. py:data:: SQL_CREATE_TABLE
   :value: Multiline-String

   .. raw:: html

      <details><summary>Show Value</summary>

   .. code-block:: python

      """if not exists (select * from sys.tables where sys.tables.name='test_table' and sys.tables.type='U')
          create table test_table (
              emp_name VARCHAR(8),
              salary INT
          )
      """

   .. raw:: html

      </details>



.. py:data:: GCE_MACHINE_TYPE
   :value: 'n1-standard-1'


.. py:data:: GCE_INSTANCE_NAME
   :value: ''


.. py:data:: GCE_INSTANCE_BODY

.. py:data:: FIREWALL_RULE_NAME
   :value: ''


.. py:data:: CREATE_FIREWALL_RULE_COMMAND

.. py:data:: DELETE_FIREWALL_RULE_COMMAND

.. py:data:: DELETE_PERSISTENT_DISK_COMMAND

.. py:data:: log

.. py:data:: create_bigquery_dataset

.. py:data:: test_run

