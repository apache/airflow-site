airflow.providers.google.cloud.links.spanner
============================================

.. py:module:: airflow.providers.google.cloud.links.spanner

.. autoapi-nested-parse::

   This module contains Google Spanner links.



Attributes
----------

.. autoapisummary::

   airflow.providers.google.cloud.links.spanner.SPANNER_BASE_LINK
   airflow.providers.google.cloud.links.spanner.SPANNER_INSTANCE_LINK
   airflow.providers.google.cloud.links.spanner.SPANNER_DATABASE_LINK


Classes
-------

.. autoapisummary::

   airflow.providers.google.cloud.links.spanner.SpannerInstanceLink
   airflow.providers.google.cloud.links.spanner.SpannerDatabaseLink


Module Contents
---------------

.. py:data:: SPANNER_BASE_LINK
   :value: '/spanner/instances'


.. py:data:: SPANNER_INSTANCE_LINK
   :value: '/spanner/instances/{instance_id}/details/databases?project={project_id}'


.. py:data:: SPANNER_DATABASE_LINK
   :value: '/spanner/instances/{instance_id}/databases/{database_id}/details/tables?project={project_id}'


.. py:class:: SpannerInstanceLink

   Bases: :py:obj:`airflow.providers.google.cloud.links.base.BaseGoogleLink`


   Helper class for constructing Spanner Instance Link.


   .. py:attribute:: name
      :value: 'Spanner Instance'


      Name of the link. This will be the button name on the task UI.



   .. py:attribute:: key
      :value: 'spanner_instance'



   .. py:attribute:: format_str
      :value: '/spanner/instances/{instance_id}/details/databases?project={project_id}'



   .. py:method:: persist(context, task_instance, instance_id, project_id)
      :staticmethod:



.. py:class:: SpannerDatabaseLink

   Bases: :py:obj:`airflow.providers.google.cloud.links.base.BaseGoogleLink`


   Helper class for constructing Spanner Database Link.


   .. py:attribute:: name
      :value: 'Spanner Database'


      Name of the link. This will be the button name on the task UI.



   .. py:attribute:: key
      :value: 'spanner_database'



   .. py:attribute:: format_str
      :value: '/spanner/instances/{instance_id}/databases/{database_id}/details/tables?project={project_id}'



   .. py:method:: persist(context, task_instance, instance_id, database_id, project_id)
      :staticmethod:



