tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model
======================================================================

.. py:module:: tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model

.. autoapi-nested-parse::

   Example Airflow DAG for Google Vertex AI Generative Model prompting.



Attributes
----------

.. autoapisummary::

   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.PROJECT_ID
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.DAG_ID
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.REGION
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.PROMPT
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.CONTENTS
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.TEXT_EMBEDDING_MODEL
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.MULTIMODAL_MODEL
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.MULTIMODAL_VISION_MODEL
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.VISION_PROMPT
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.MEDIA_GCS_PATH
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.MIME_TYPE
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.TOOLS
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.GENERATION_CONFIG
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.SAFETY_SETTINGS
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.EVAL_DATASET
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.METRICS
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.EXPERIMENT_NAME
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.EXPERIMENT_RUN_NAME
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.PROMPT_TEMPLATE
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.CACHED_MODEL
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.CACHED_SYSTEM_INSTRUCTION
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.CACHED_CONTENTS
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.generate_embeddings_task
   tests.system.google.cloud.vertex_ai.example_vertex_ai_generative_model.test_run


Module Contents
---------------

.. py:data:: PROJECT_ID

.. py:data:: DAG_ID
   :value: 'vertex_ai_generative_model_dag'


.. py:data:: REGION
   :value: 'us-central1'


.. py:data:: PROMPT
   :value: 'In 10 words or less, why is Apache Airflow amazing?'


.. py:data:: CONTENTS

.. py:data:: TEXT_EMBEDDING_MODEL
   :value: 'textembedding-gecko'


.. py:data:: MULTIMODAL_MODEL
   :value: 'gemini-pro'


.. py:data:: MULTIMODAL_VISION_MODEL
   :value: 'gemini-pro-vision'


.. py:data:: VISION_PROMPT
   :value: 'In 10 words or less, describe this content.'


.. py:data:: MEDIA_GCS_PATH
   :value: 'gs://download.tensorflow.org/example_images/320px-Felis_catus-cat_on_snow.jpg'


.. py:data:: MIME_TYPE
   :value: 'image/jpeg'


.. py:data:: TOOLS

.. py:data:: GENERATION_CONFIG

.. py:data:: SAFETY_SETTINGS

.. py:data:: EVAL_DATASET

.. py:data:: METRICS

.. py:data:: EXPERIMENT_NAME
   :value: 'eval-experiment-airflow-operator'


.. py:data:: EXPERIMENT_RUN_NAME
   :value: 'eval-experiment-airflow-operator-run'


.. py:data:: PROMPT_TEMPLATE
   :value: '{instruction}. Article: {context}. Summary:'


.. py:data:: CACHED_MODEL
   :value: 'gemini-1.5-pro-002'


.. py:data:: CACHED_SYSTEM_INSTRUCTION
   :value: Multiline-String

   .. raw:: html

      <details><summary>Show Value</summary>

   .. code-block:: python

      """
      You are an expert researcher. You always stick to the facts in the sources provided, and never make up new facts.
      Now look at these research papers, and answer the following questions.
      """

   .. raw:: html

      </details>



.. py:data:: CACHED_CONTENTS

.. py:data:: generate_embeddings_task

.. py:data:: test_run

