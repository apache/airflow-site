tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group
============================================================================

.. py:module:: tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group

.. autoapi-nested-parse::

   Example Airflow DAG for Google Cloud Managed Service for Apache Kafka testing Topic operations.



Attributes
----------

.. autoapisummary::

   tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group.ENV_ID
   tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group.PROJECT_ID
   tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group.DAG_ID
   tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group.LOCATION
   tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group.CLUSTER_ID
   tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group.CLUSTER_CONF
   tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group.TOPIC_ID
   tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group.TOPIC_CONF
   tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group.CONSUMER_GROUP_ID
   tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group.CONNECTION_ID
   tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group.PORT
   tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group.BOOTSTRAP_URL
   tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group.log
   tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group.create_cluster
   tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group.test_run


Functions
---------

.. autoapisummary::

   tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group.producer
   tests.system.google.cloud.managed_kafka.example_managed_kafka_consumer_group.consumer


Module Contents
---------------

.. py:data:: ENV_ID

.. py:data:: PROJECT_ID

.. py:data:: DAG_ID
   :value: 'managed_kafka_consumer_group_operations'


.. py:data:: LOCATION
   :value: 'us-central1'


.. py:data:: CLUSTER_ID
   :value: ''


.. py:data:: CLUSTER_CONF

.. py:data:: TOPIC_ID
   :value: ''


.. py:data:: TOPIC_CONF

.. py:data:: CONSUMER_GROUP_ID
   :value: ''


.. py:data:: CONNECTION_ID
   :value: 'connection_managed_kafka_consumer_group_operations_Uninferable'


.. py:data:: PORT
   :value: '9092'


.. py:data:: BOOTSTRAP_URL

.. py:data:: log

.. py:function:: producer()

   Produce and submit 10 messages


.. py:function:: consumer(message)

   Take in consumed messages and print its contents to the logs.


.. py:data:: create_cluster

.. py:data:: test_run

