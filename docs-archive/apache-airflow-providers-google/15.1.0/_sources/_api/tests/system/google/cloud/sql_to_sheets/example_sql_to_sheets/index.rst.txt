tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets
=============================================================

.. py:module:: tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets

.. autoapi-nested-parse::

   Example DAG using SQLToGoogleSheetsOperator.

   This DAG relies on the following OS environment variables

   * AIRFLOW__API__GOOGLE_KEY_PATH - Path to service account key file. Note, you can skip this variable if you
     run this DAG in a Composer environment.



Attributes
----------

.. autoapisummary::

   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.DAG_ID
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.ENV_ID
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.PROJECT_ID
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.REGION
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.ZONE
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.NETWORK
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.CONNECTION_ID
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.CONNECTION_TYPE
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.BUCKET_NAME
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.FILE_NAME
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.DB_NAME
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.DB_PORT
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.DB_USER_NAME
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.DB_USER_PASSWORD
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.SETUP_POSTGRES_COMMAND
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.SQL_TABLE
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.SQL_CREATE
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.SQL_INSERT
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.SQL_SELECT
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.GCE_MACHINE_TYPE
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.GCE_INSTANCE_NAME
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.GCE_INSTANCE_BODY
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.FIREWALL_RULE_NAME
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.CREATE_FIREWALL_RULE_COMMAND
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.DELETE_FIREWALL_RULE_COMMAND
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.DELETE_PERSISTENT_DISK_COMMAND
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.SHEETS_CONNECTION_ID
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.SPREADSHEET
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.log
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.create_gce_instance
   tests.system.google.cloud.sql_to_sheets.example_sql_to_sheets.test_run


Module Contents
---------------

.. py:data:: DAG_ID
   :value: 'sql_to_sheets'


.. py:data:: ENV_ID

.. py:data:: PROJECT_ID

.. py:data:: REGION
   :value: 'europe-west2'


.. py:data:: ZONE
   :value: 'europe-west2-a'


.. py:data:: NETWORK
   :value: 'default'


.. py:data:: CONNECTION_ID
   :value: ''


.. py:data:: CONNECTION_TYPE
   :value: 'postgres'


.. py:data:: BUCKET_NAME
   :value: 'bucket_sql_to_sheets_Uninferable'


.. py:data:: FILE_NAME
   :value: 'result.json'


.. py:data:: DB_NAME
   :value: 'testdb'


.. py:data:: DB_PORT
   :value: 5432


.. py:data:: DB_USER_NAME
   :value: 'root'


.. py:data:: DB_USER_PASSWORD
   :value: 'demo_password'


.. py:data:: SETUP_POSTGRES_COMMAND
   :value: Multiline-String

   .. raw:: html

      <details><summary>Show Value</summary>

   .. code-block:: python

      """
      sudo apt update &&
      sudo apt install -y docker.io &&
      sudo docker run -d -p 5432:5432 --name testdb     -e PGUSER=root     -e POSTGRES_USER=root     -e POSTGRES_PASSWORD=demo_password     -e POSTGRES_DB=testdb     postgres
      """

   .. raw:: html

      </details>



.. py:data:: SQL_TABLE
   :value: 'test_table'


.. py:data:: SQL_CREATE
   :value: 'CREATE TABLE IF NOT EXISTS test_table (col_1 INT, col_2 VARCHAR(8))'


.. py:data:: SQL_INSERT
   :value: "INSERT INTO test_table (col_1, col_2) VALUES (1, 'one'), (2, 'two')"


.. py:data:: SQL_SELECT
   :value: 'SELECT * FROM test_table'


.. py:data:: GCE_MACHINE_TYPE
   :value: 'n1-standard-1'


.. py:data:: GCE_INSTANCE_NAME
   :value: ''


.. py:data:: GCE_INSTANCE_BODY

.. py:data:: FIREWALL_RULE_NAME
   :value: ''


.. py:data:: CREATE_FIREWALL_RULE_COMMAND

.. py:data:: DELETE_FIREWALL_RULE_COMMAND

.. py:data:: DELETE_PERSISTENT_DISK_COMMAND

.. py:data:: SHEETS_CONNECTION_ID
   :value: 'connection_sql_to_sheets_Uninferable'


.. py:data:: SPREADSHEET

.. py:data:: log

.. py:data:: create_gce_instance

.. py:data:: test_run

