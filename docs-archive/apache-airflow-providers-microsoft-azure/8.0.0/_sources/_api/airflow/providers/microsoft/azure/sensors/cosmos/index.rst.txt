:py:mod:`airflow.providers.microsoft.azure.sensors.cosmos`
==========================================================

.. py:module:: airflow.providers.microsoft.azure.sensors.cosmos


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.microsoft.azure.sensors.cosmos.AzureCosmosDocumentSensor




.. py:class:: AzureCosmosDocumentSensor(*, database_name, collection_name, document_id, azure_cosmos_conn_id = 'azure_cosmos_default', **kwargs)


   Bases: :py:obj:`airflow.sensors.base.BaseSensorOperator`

   Checks for the existence of a document which matches the given query in CosmosDB.

   .. code-block:: python

       azure_cosmos_sensor = AzureCosmosDocumentSensor(
           database_name="somedatabase_name",
           collection_name="somecollection_name",
           document_id="unique-doc-id",
           azure_cosmos_conn_id="azure_cosmos_default",
           task_id="azure_cosmos_sensor",
       )

   :param database_name: Target CosmosDB database_name.
   :param collection_name: Target CosmosDB collection_name.
   :param document_id: The ID of the target document.
   :param azure_cosmos_conn_id: Reference to the
       :ref:`Azure CosmosDB connection<howto/connection:azure_cosmos>`.

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('database_name', 'collection_name', 'document_id')

      

   .. py:method:: poke(context)

      Override when deriving this class.



