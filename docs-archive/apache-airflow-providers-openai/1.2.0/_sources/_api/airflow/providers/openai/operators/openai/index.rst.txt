:py:mod:`airflow.providers.openai.operators.openai`
===================================================

.. py:module:: airflow.providers.openai.operators.openai


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.openai.operators.openai.OpenAIEmbeddingOperator




.. py:class:: OpenAIEmbeddingOperator(conn_id, input_text, model = 'text-embedding-ada-002', embedding_kwargs = None, **kwargs)


   Bases: :py:obj:`airflow.models.BaseOperator`

   Operator that accepts input text to generate OpenAI embeddings using the specified model.

   :param conn_id: The OpenAI connection ID to use.
   :param input_text: The text to generate OpenAI embeddings for. This can be a string, a list of strings,
                   a list of integers, or a list of lists of integers.
   :param model: The OpenAI model to be used for generating the embeddings.
   :param embedding_kwargs: Additional keyword arguments to pass to the OpenAI `create_embeddings` method.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:OpenAIEmbeddingOperator`
       For possible options for `embedding_kwargs`, see:
       https://platform.openai.com/docs/api-reference/embeddings/create

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('input_text',)

      

   .. py:method:: hook()

      Return an instance of the OpenAIHook.


   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



