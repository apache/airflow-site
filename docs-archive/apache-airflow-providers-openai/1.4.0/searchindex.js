Search.setIndex({"docnames": ["_api/airflow/providers/openai/exceptions/index", "_api/airflow/providers/openai/hooks/index", "_api/airflow/providers/openai/hooks/openai/index", "_api/airflow/providers/openai/index", "_api/airflow/providers/openai/operators/index", "_api/airflow/providers/openai/operators/openai/index", "_api/airflow/providers/openai/triggers/index", "_api/airflow/providers/openai/triggers/openai/index", "_api/tests/system/providers/openai/example_openai/index", "_api/tests/system/providers/openai/example_trigger_batch_operator/index", "_api/tests/system/providers/openai/index", "changelog", "commits", "connections", "index", "installing-providers-from-sources", "operators/openai", "security"], "filenames": ["_api/airflow/providers/openai/exceptions/index.rst", "_api/airflow/providers/openai/hooks/index.rst", "_api/airflow/providers/openai/hooks/openai/index.rst", "_api/airflow/providers/openai/index.rst", "_api/airflow/providers/openai/operators/index.rst", "_api/airflow/providers/openai/operators/openai/index.rst", "_api/airflow/providers/openai/triggers/index.rst", "_api/airflow/providers/openai/triggers/openai/index.rst", "_api/tests/system/providers/openai/example_openai/index.rst", "_api/tests/system/providers/openai/example_trigger_batch_operator/index.rst", "_api/tests/system/providers/openai/index.rst", "changelog.rst", "commits.rst", "connections.rst", "index.rst", "installing-providers-from-sources.rst", "operators/openai.rst", "security.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.openai.exceptions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.openai.hooks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.openai.hooks.openai</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.openai</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.openai.operators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.openai.operators.openai</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.openai.triggers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.openai.triggers.openai</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tests.system.providers.openai.example_openai</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tests.system.providers.openai.example_trigger_batch_operator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tests.system.providers.openai</span></code>", "Changelog", "Package apache-airflow-providers-openai", "OpenAI Connection", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apache-airflow-providers-openai</span></code>", "Installing from sources", "OpenAIEmbeddingOperator", "Releasing security patches"], "terms": {"openaibatchjobexcept": 0, "sourc": [0, 2, 3, 5, 7, 8, 9, 16], "base": [0, 2, 5, 7], "airflowexcept": 0, "rais": 0, "when": [0, 5, 17], "batch": [0, 2, 5, 7, 11, 12, 16], "job": [0, 16], "fail": [0, 2], "start": 0, "after": [0, 5], "process": 0, "request": [0, 2, 5], "openaibatchtimeout": 0, "time": [0, 2, 5], "out": [0, 17], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17], "4": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17], "dev0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "experiment": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "featur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17], "batchstatu": 2, "str": [2, 5], "enum": 2, "statu": [2, 7], "valid": [2, 15], "in_progress": 2, "final": 2, "complet": [2, 5, 16], "expir": 2, "cancel": [2, 5], "__str__": 2, "return": [2, 5], "self": [2, 15], "classmethod": 2, "is_in_progress": 2, "check": [2, 5, 15], "progress": 2, "openaihook": [2, 5], "conn_id": [2, 5, 7, 16], "default_conn_nam": [2, 5], "arg": 2, "kwarg": [2, 5], "basehook": 2, "us": [2, 5, 8, 11, 12, 13, 15, 17], "sdk": 2, "interact": [2, 16], "api": [2, 5, 7, 8, 11, 12, 13, 16], "http": [2, 5, 8, 15], "platform": [2, 5], "com": [2, 5, 15], "doc": [2, 5, 8, 12], "introduct": 2, "overview": 2, "paramet": [2, 5, 13, 16], "connect": [2, 5, 7, 16], "id": [2, 5, 15], "conn_name_attr": 2, "openai_default": [2, 5, 9, 13, 16], "conn_typ": 2, "hook_nam": 2, "get_ui_field_behaviour": 2, "custom": 2, "field": [2, 13], "behaviour": 2, "test_connect": 2, "conn": 2, "object": 2, "get_conn": [2, 11, 12], "create_chat_complet": 2, "messag": 2, "model": [2, 5, 16, 17], "gpt": 2, "5": 2, "turbo": 2, "creat": [2, 5, 15, 16], "respons": 2, "given": [2, 16], "chat": [2, 5, 11, 12, 16], "convers": 2, "list": [2, 5, 12], "type": [2, 11, 12, 13], "chatcompletionsystemmessageparam": 2, "chatcompletionusermessageparam": 2, "chatcompletionassistantmessageparam": 2, "chatcompletiontoolmessageparam": 2, "chatcompletionfunctionmessageparam": 2, "A": 2, "compris": 2, "so": [2, 17], "far": 2, "create_assist": 2, "assist": [2, 11, 12], "The": [2, 5, 13, 14, 15, 16, 17], "get_assist": 2, "assistant_id": 2, "get": [2, 15, 17], "retriev": 2, "modify_assist": 2, "modifi": 2, "exist": [2, 14], "delete_assist": 2, "delet": 2, "create_thread": 2, "thread": 2, "modify_thread": 2, "thread_id": 2, "metadata": 2, "onli": [2, 5, 11, 17], "can": [2, 5, 13, 14, 15, 17], "dict": [2, 5], "ani": [2, 15], "set": [2, 5, 13], "16": [2, 12], "kei": [2, 13, 15], "valu": [2, 13], "pair": [2, 13], "attach": 2, "delete_thread": 2, "create_messag": 2, "role": 2, "liter": [2, 5], "user": [2, 15], "entiti": 2, "allow": 2, "includ": [2, 12, 14, 17], "get_messag": 2, "belong": [2, 15], "modify_messag": 2, "message_id": 2, "which": [2, 5, 8, 17], "create_run": 2, "run": [2, 5, 7, 15], "execut": [2, 5], "create_run_and_pol": 2, "poll": [2, 7], "until": 2, "beta": 2, "get_run": 2, "run_id": 2, "wa": [2, 5], "modify_run": 2, "create_embed": [2, 5], "text": [2, 5, 16], "embed": [2, 5, 11, 12, 16], "ada": [2, 5, 16], "002": [2, 5, 16], "gener": [2, 5], "int": [2, 5], "upload_fil": 2, "file": [2, 5, 11, 12, 15, 16], "purpos": 2, "upload": 2, "across": 2, "variou": 2, "endpoint": [2, 5, 16], "size": 2, "all": [2, 12, 13, 14, 17], "one": [2, 15], "organ": 2, "up": [2, 11, 12], "100": 2, "gb": 2, "name": 2, "fine": 2, "tune": 2, "intend": 2, "get_fil": 2, "file_id": [2, 5, 16], "inform": [2, 5, 12, 17], "about": [2, 12, 15, 17], "specif": 2, "": [2, 15], "delete_fil": 2, "create_vector_stor": 2, "vector": [2, 11, 12], "store": [2, 11, 12], "get_vector_stor": 2, "vector_store_id": 2, "modify_vector_stor": 2, "delete_vector_stor": 2, "upload_files_to_vector_stor": 2, "ar": [2, 13, 14, 15, 17], "binaryio": 2, "binari": [2, 15], "get_vector_store_fil": 2, "delete_vector_store_fil": 2, "remov": [2, 15], "from": [2, 16, 17], "itself": [2, 17], "To": [2, 15], "create_batch": 2, "none": [2, 5, 15], "completion_window": 2, "24h": 2, "v1": [2, 5, 16], "window": 2, "default": [2, 5, 17], "24": [2, 5, 12], "hour": [2, 5], "get_batch": 2, "batch_id": [2, 7, 16], "wait_for_batch": 2, "wait_second": [2, 5], "timeout": [2, 5, 13], "3600": 2, "finish": 2, "wait": [2, 5, 16], "float": [2, 5], "option": [2, 5, 13], "number": [2, 5, 12], "second": [2, 5], "between": [2, 5], "how": [2, 5, 15], "mani": 2, "readi": 2, "ran": 2, "defer": 2, "oper": [2, 3, 11, 12], "cancel_batch": 2, "hook": [3, 5, 11, 12, 13], "trigger": [3, 5, 11, 12, 16], "except": [3, 5, 17], "__version__": 3, "openaiembeddingoper": 5, "input_text": [5, 16], "embedding_kwarg": 5, "baseoper": 5, "accept": [5, 13], "input": [5, 16], "specifi": [5, 13, 16], "string": 5, "integ": 5, "addit": 5, "keyword": 5, "argument": [5, 7], "pass": [5, 13], "method": 5, "For": [5, 12, 13, 14, 15], "more": 5, "take": 5, "look": 5, "guid": [5, 15], "possibl": 5, "see": [5, 12, 14], "refer": 5, "template_field": 5, "sequenc": 5, "instanc": [5, 13], "context": 5, "deriv": 5, "same": 5, "dictionari": [5, 13], "render": 5, "jinja": 5, "templat": [5, 12], "get_template_context": 5, "openaitriggerbatchoper": 5, "deferr": [5, 16], "conf": 5, "getboolean": 5, "default_deferr": 5, "fallback": 5, "fals": 5, "60": 5, "wait_for_complet": 5, "true": [5, 16], "requir": [5, 13, 16, 17], "bool": 5, "mode": 5, "amount": 5, "sla": 5, "whether": 5, "If": [5, 15], "immedi": 5, "pleas": [5, 15], "execute_complet": 5, "event": 5, "invok": 5, "callback": 5, "fire": 5, "reli": 5, "throw": 5, "otherwis": 5, "assum": 5, "success": 5, "on_kil": 5, "task": [5, 8], "openaibatchtrigg": 7, "poll_interv": 7, "end_tim": 7, "basetrigg": 7, "serial": 7, "path": 7, "async": 7, "make": 7, "client": [7, 13], "input_text_cal": [8, 16], "input_arg1": 8, "input_arg2": 8, "input_kwarg1": [8, 16], "default_kwarg1_valu": 8, "input_kwarg2": [8, 16], "example_openai_dag": 8, "taskflow": 8, "tutori": 8, "document": [8, 12], "simpl": 8, "data": 8, "pipelin": 8, "exampl": [8, 13, 15, 16], "demonstr": 8, "three": 8, "extract": 8, "transform": 8, "load": 8, "goe": 8, "along": 8, "airflow": [8, 11, 15, 16, 17], "locat": 8, "here": 8, "apach": [8, 11, 15], "org": [8, 15], "stabl": 8, "tutorial_taskflow_api": 8, "html": 8, "test_run": [8, 9], "openai_conn_id": [9, 16], "pokemon": 9, "pikachu": 9, "charmand": 9, "bulbasaur": 9, "openai_batch_chat_complet": 9, "example_openai": [10, 16], "example_trigger_batch_oper": [10, 16], "provid": [11, 15, 16, 17], "openai": [11, 15, 16], "feat": [11, 12], "support": [11, 12, 14], "41554": [11, 12], "releas": [11, 12, 14], "avail": [11, 15], "8": [11, 12, 14], "explain": 11, "polici": [11, 17], "bump": [11, 12], "minimum": [11, 12, 14], "version": [11, 12, 14, 15, 17], "41396": [11, 12], "40110": [11, 12], "faster": [11, 12], "airflow_vers": [11, 12], "import": [11, 12, 15, 16], "39552": [11, 12], "simplifi": [11, 12], "39497": [11, 12], "7": [11, 12], "function": [11, 12], "38736": [11, 12], "39248": [11, 12], "39240": [11, 12], "6": [11, 12], "36017": [11, 12], "36014": [11, 12], "refin": [11, 12], "handl": [11, 12], "match": [11, 12, 15], "35547": [11, 12], "initi": 11, "detail": [12, 15], "commit": 12, "chang": [12, 17], "high": 12, "level": 12, "changelog": 12, "latest": [12, 17], "2024": 12, "08": 12, "22": 12, "subject": 12, "00e73e6089": 12, "19": 12, "75fb7acbac": 12, "prepar": [12, 16, 17], "aug": 12, "2nd": 12, "wave": 12, "41559": 12, "fcbff15bda": 12, "12": [12, 15], "06": 12, "6e5ae26382": 12, "june": 12, "40273": 12, "65dbf86f72": 12, "07": 12, "fix": [12, 17], "32": [12, 14], "break": [12, 17], "test": [12, 16, 17], "05": 12, "26": 12, "34500f3a2f": 12, "3rd": 12, "mai": 12, "39738": 12, "2b1a2f8d56": 12, "11": [12, 15], "reappli": 12, "39554": 12, "2c05187b07": 12, "10": [12, 13], "73918925ed": 12, "01": 12, "fe4605a10": 12, "1st": 12, "39328": 12, "da6c2bcf3c": 12, "ead9b00f7c": 12, "04": 12, "25": 12, "2674a69780": 12, "5fa80b6aea": 12, "rc1": 12, "april": 12, "38863": 12, "83316b8158": 12, "03": 12, "march": 12, "37876": 12, "5a0be392e6": 12, "02": 12, "add": 12, "comment": 12, "updat": 12, "manag": [12, 15], "37488": 12, "bfb054e9e8": 12, "februari": 12, "37326": 12, "cead3da4a6": 12, "rc2": 12, "round": 12, "jan": 12, "37019": 12, "2b4da0101f": 12, "januari": 12, "36945": 12, "19ebcac239": 12, "36640": 12, "6937ae7647": 12, "2023": 12, "30": 12, "speed": 12, "autocomplet": 12, "breez": 12, "state": 12, "36499": 12, "9b5d6bfe27": 12, "28": 12, "deember": 12, "36464": 12, "b15d5578da": 12, "23": 12, "re": 12, "appli": 12, "decemb": 12, "36380": 12, "999b70178a": 12, "36112": 12, "d0918d77ee": 12, "d2514b408c": 12, "0b23d5601c": 12, "novemb": 12, "35836": 12, "99534e47f3": 12, "reproduc": 12, "build": [12, 15], "35693": 12, "99df205f42": 12, "35686": 12, "acb9458d09": 12, "14": 12, "1b059c57d6": 12, "35537": 12, "cca4aa4e9a": 12, "35023": 12, "enabl": 13, "access": 13, "point": 13, "your": [13, 16], "host": 13, "address": 13, "extra": 13, "json": 13, "nest": 13, "openai_client_kwarg": 13, "instanti": 13, "you": [13, 14, 15, 17], "follow": [13, 15, 17], "api_kei": 13, "your_api_kei": 13, "class": 14, "python": [14, 15], "top": [14, 15], "2": 14, "via": [14, 15], "pip": [14, 15], "below": [14, 15], "datalib": 14, "page": 15, "describ": 15, "download": 15, "offici": 15, "also": 15, "most": 15, "choos": 15, "differ": 15, "select": 15, "drop": 15, "down": 15, "left": 15, "sdist": 15, "whl": 15, "want": [15, 17], "origin": 15, "checksum": 15, "signatur": 15, "softwar": 15, "foundat": 15, "asc": 15, "sha512": 15, "those": 15, "code": 15, "link": 15, "abov": 15, "contain": 15, "pgp": 15, "It": 15, "essenti": 15, "sha": 15, "gpg": 15, "well": 15, "relev": 15, "distribut": 15, "recommend": 15, "main": [15, 17], "directori": 15, "mirror": 15, "pgpk": 15, "ka": 15, "pgpv": 15, "tar": 15, "gz": 15, "made": 15, "sat": 15, "sep": 15, "49": 15, "54": 15, "2021": 15, "bst": 15, "rsa": 15, "cde15c6e4d3a8ec4ecf4ba4b6674e08ad7de406f": 15, "issuer": 15, "kaxilnaik": 15, "good": [15, 17], "kaxil": 15, "naik": 15, "unknown": 15, "aka": 15, "gmail": 15, "warn": 15, "certifi": 15, "trust": 15, "There": 15, "indic": 15, "owner": 15, "primari": 15, "fingerprint": 15, "cde1": 15, "5c6e": 15, "4d3a": 15, "8ec4": 15, "ecf4": 15, "ba4b": 15, "6674": 15, "e08a": 15, "d7de": 15, "406f": 15, "correct": 15, "do": 15, "worri": 15, "certif": 15, "sign": 15, "why": 15, "By": 15, "server": 15, "previou": 15, "step": 15, "know": 15, "alreadi": 15, "sum": 15, "shasum": 15, "512": 15, "diff": 15, "should": [15, 17], "local": 15, "script": 15, "bin": 15, "bash": 15, "package_vers": 15, "package_nam": 15, "provider_download_dir": 15, "mktemp": 15, "d": 15, "dep": 15, "dest": 15, "curl": 15, "apache_airflow_providers_openai": 15, "py3": 15, "l": 15, "o": 15, "echo": 15, "la": 15, "onc": 15, "instruct": [15, 17], "chapter": 15, "temporari": 15, "folder": 15, "open": 16, "account": 16, "wai": 16, "system": 16, "py": 16, "task_id": 16, "embedding_using_xcom_data": 16, "task_to_store_input_text_in_xcom": 16, "embedding_using_cal": 16, "input_arg1_valu": 16, "input2_valu": 16, "input_kwarg1_valu": 16, "input_kwarg2_valu": 16, "embedding_using_text": 16, "batch_operator_def": 16, "batch_file_id": 16, "independ": 17, "vulner": 17, "publish": 17, "separ": 17, "upgrad": 17, "found": 17, "instal": 17, "pypi": 17, "we": 17, "develop": 17, "alwai": 17, "done": 17, "branch": 17, "where": 17, "next": 17, "strict": 17, "semver": 17, "depend": 17, "scope": 17, "major": 17, "minor": 17, "new": 17, "patchlevel": 17, "bug": 17, "bugfix": 17, "receiv": 17, "rule": 17, "have": 17, "critic": 17, "reason": 17, "band": 17, "case": 17, "stakehold": 17, "might": 17, "decid": 17, "cherri": 17, "pick": 17, "older": 17, "mix": 17, "govern": 17, "interest": 17, "parti": 17}, "objects": {"airflow.providers": [[3, 0, 0, "-", "openai"]], "airflow.providers.openai": [[3, 1, 1, "", "__version__"], [0, 0, 0, "-", "exceptions"], [1, 0, 0, "-", "hooks"], [4, 0, 0, "-", "operators"], [6, 0, 0, "-", "triggers"]], "airflow.providers.openai.exceptions": [[0, 2, 1, "", "OpenAIBatchJobException"], [0, 2, 1, "", "OpenAIBatchTimeout"]], "airflow.providers.openai.hooks": [[2, 0, 0, "-", "openai"]], "airflow.providers.openai.hooks.openai": [[2, 3, 1, "", "BatchStatus"], [2, 3, 1, "", "OpenAIHook"]], "airflow.providers.openai.hooks.openai.BatchStatus": [[2, 4, 1, "", "CANCELLED"], [2, 4, 1, "", "CANCELLING"], [2, 4, 1, "", "COMPLETED"], [2, 4, 1, "", "EXPIRED"], [2, 4, 1, "", "FAILED"], [2, 4, 1, "", "FINALIZING"], [2, 4, 1, "", "IN_PROGRESS"], [2, 4, 1, "", "VALIDATING"], [2, 5, 1, "", "__str__"], [2, 5, 1, "", "is_in_progress"]], "airflow.providers.openai.hooks.openai.OpenAIHook": [[2, 5, 1, "", "cancel_batch"], [2, 5, 1, "", "conn"], [2, 4, 1, "", "conn_name_attr"], [2, 4, 1, "", "conn_type"], [2, 5, 1, "", "create_assistant"], [2, 5, 1, "", "create_batch"], [2, 5, 1, "", "create_chat_completion"], [2, 5, 1, "", "create_embeddings"], [2, 5, 1, "", "create_message"], [2, 5, 1, "", "create_run"], [2, 5, 1, "", "create_run_and_poll"], [2, 5, 1, "", "create_thread"], [2, 5, 1, "", "create_vector_store"], [2, 4, 1, "", "default_conn_name"], [2, 5, 1, "", "delete_assistant"], [2, 5, 1, "", "delete_file"], [2, 5, 1, "", "delete_thread"], [2, 5, 1, "", "delete_vector_store"], [2, 5, 1, "", "delete_vector_store_file"], [2, 5, 1, "", "get_assistant"], [2, 5, 1, "", "get_assistants"], [2, 5, 1, "", "get_batch"], [2, 5, 1, "", "get_conn"], [2, 5, 1, "", "get_file"], [2, 5, 1, "", "get_files"], [2, 5, 1, "", "get_messages"], [2, 5, 1, "", "get_run"], [2, 5, 1, "", "get_runs"], [2, 5, 1, "", "get_ui_field_behaviour"], [2, 5, 1, "", "get_vector_store"], [2, 5, 1, "", "get_vector_store_files"], [2, 5, 1, "", "get_vector_stores"], [2, 4, 1, "", "hook_name"], [2, 5, 1, "", "modify_assistant"], [2, 5, 1, "", "modify_message"], [2, 5, 1, "", "modify_run"], [2, 5, 1, "", "modify_thread"], [2, 5, 1, "", "modify_vector_store"], [2, 5, 1, "", "test_connection"], [2, 5, 1, "", "upload_file"], [2, 5, 1, "", "upload_files_to_vector_store"], [2, 5, 1, "", "wait_for_batch"]], "airflow.providers.openai.operators": [[5, 0, 0, "-", "openai"]], "airflow.providers.openai.operators.openai": [[5, 3, 1, "", "OpenAIEmbeddingOperator"], [5, 3, 1, "", "OpenAITriggerBatchOperator"]], "airflow.providers.openai.operators.openai.OpenAIEmbeddingOperator": [[5, 5, 1, "", "execute"], [5, 5, 1, "", "hook"], [5, 4, 1, "", "template_fields"]], "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator": [[5, 5, 1, "", "execute"], [5, 5, 1, "", "execute_complete"], [5, 5, 1, "", "hook"], [5, 5, 1, "", "on_kill"], [5, 4, 1, "", "template_fields"]], "airflow.providers.openai.triggers": [[7, 0, 0, "-", "openai"]], "airflow.providers.openai.triggers.openai": [[7, 3, 1, "", "OpenAIBatchTrigger"]], "airflow.providers.openai.triggers.openai.OpenAIBatchTrigger": [[7, 5, 1, "", "run"], [7, 5, 1, "", "serialize"]], "tests.system.providers": [[10, 0, 0, "-", "openai"]], "tests.system.providers.openai": [[8, 0, 0, "-", "example_openai"], [9, 0, 0, "-", "example_trigger_batch_operator"]], "tests.system.providers.openai.example_openai": [[8, 6, 1, "", "example_openai_dag"], [8, 6, 1, "", "input_text_callable"], [8, 1, 1, "", "test_run"]], "tests.system.providers.openai.example_trigger_batch_operator": [[9, 1, 1, "", "OPENAI_CONN_ID"], [9, 1, 1, "", "POKEMONS"], [9, 6, 1, "", "openai_batch_chat_completions"], [9, 1, 1, "", "test_run"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:exception", "3": "py:class", "4": "py:attribute", "5": "py:method", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "exception", "Python exception"], "3": ["py", "class", "Python class"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "method", "Python method"], "6": ["py", "function", "Python function"]}, "titleterms": {"airflow": [0, 1, 2, 3, 4, 5, 6, 7, 12, 14], "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14], "openai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14], "except": 0, "modul": [0, 2, 5, 7, 8, 9], "content": [0, 2, 3, 5, 7, 8, 9], "hook": [1, 2], "submodul": [1, 3, 4, 6, 10], "class": [2, 5, 7], "subpackag": 3, "packag": [3, 12, 14, 15], "oper": [4, 5, 16], "trigger": [6, 7], "test": [8, 9, 10], "system": [8, 9, 10], "example_openai": 8, "function": [8, 9], "attribut": [8, 9], "example_trigger_batch_oper": 9, "changelog": 11, "1": [11, 12], "4": [11, 12], "0": [11, 12], "featur": 11, "3": [11, 12], "misc": 11, "2": [11, 12], "apach": [12, 14], "connect": 13, "default": 13, "id": 13, "configur": 13, "instal": [14, 15], "requir": 14, "from": 15, "sourc": 15, "releas": [15, 17], "integr": 15, "verifi": 15, "pypi": 15, "openaiembeddingoper": 16, "us": 16, "openaitriggerbatchoper": 16, "secur": 17, "patch": 17}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"airflow.providers.openai.exceptions": [[0, "module-airflow.providers.openai.exceptions"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [5, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"]], "airflow.providers.openai.hooks": [[1, "module-airflow.providers.openai.hooks"]], "Submodules": [[1, "submodules"], [3, "submodules"], [4, "submodules"], [6, "submodules"], [10, "submodules"]], "airflow.providers.openai.hooks.openai": [[2, "module-airflow.providers.openai.hooks.openai"]], "Classes": [[2, "classes"], [5, "classes"], [7, "classes"]], "airflow.providers.openai": [[3, "module-airflow.providers.openai"]], "Subpackages": [[3, "subpackages"]], "Package Contents": [[3, "package-contents"]], "airflow.providers.openai.operators": [[4, "module-airflow.providers.openai.operators"]], "airflow.providers.openai.operators.openai": [[5, "module-airflow.providers.openai.operators.openai"]], "airflow.providers.openai.triggers": [[6, "module-airflow.providers.openai.triggers"]], "airflow.providers.openai.triggers.openai": [[7, "module-airflow.providers.openai.triggers.openai"]], "tests.system.providers.openai.example_openai": [[8, "module-tests.system.providers.openai.example_openai"]], "Functions": [[8, "functions"], [9, "functions"]], "Attributes": [[8, "attributes"], [9, "attributes"]], "tests.system.providers.openai.example_trigger_batch_operator": [[9, "module-tests.system.providers.openai.example_trigger_batch_operator"]], "tests.system.providers.openai": [[10, "module-tests.system.providers.openai"]], "Changelog": [[11, "changelog"]], "1.4.0": [[11, "id1"], [12, "id1"]], "Features": [[11, "features"], [11, "id9"]], "1.3.0": [[11, "id2"], [12, "id2"]], "Misc": [[11, "misc"], [11, "id4"], [11, "id6"], [11, "id10"], [11, "id13"], [11, "id15"]], "1.2.2": [[11, "id3"], [12, "id3"]], "1.2.1": [[11, "id5"], [12, "id4"]], "1.2.0": [[11, "id7"], [12, "id5"]], "1.1.0": [[11, "id11"], [12, "id6"]], "1.0.1": [[11, "id14"], [12, "id7"]], "1.0.0": [[11, "id16"], [12, "id8"]], "Package apache-airflow-providers-openai": [[12, "package-apache-airflow-providers-openai"]], "OpenAI Connection": [[13, "openai-connection"]], "Default Connection IDs": [[13, "default-connection-ids"]], "Configuring the Connection": [[13, "configuring-the-connection"]], "apache-airflow-providers-openai": [[14, "apache-airflow-providers-openai"]], "apache-airflow-providers-openai package": [[14, "apache-airflow-providers-openai-package"]], "Provider package": [[14, "provider-package"]], "Installation": [[14, "installation"]], "Requirements": [[14, "requirements"]], "Installing from sources": [[15, "installing-from-sources"]], "Released packages": [[15, "released-packages"]], "Release integrity": [[15, "release-integrity"]], "Verifying PyPI releases": [[15, "verifying-pypi-releases"]], "OpenAIEmbeddingOperator": [[16, "openaiembeddingoperator"]], "Using the Operator": [[16, "using-the-operator"], [16, "id1"]], "OpenAITriggerBatchOperator": [[16, "openaitriggerbatchoperator"]], "Releasing security patches": [[17, "releasing-security-patches"]]}, "indexentries": {"openaibatchjobexception": [[0, "airflow.providers.openai.exceptions.OpenAIBatchJobException"]], "openaibatchtimeout": [[0, "airflow.providers.openai.exceptions.OpenAIBatchTimeout"]], "airflow.providers.openai.exceptions": [[0, "module-airflow.providers.openai.exceptions"]], "module": [[0, "module-airflow.providers.openai.exceptions"], [1, "module-airflow.providers.openai.hooks"], [2, "module-airflow.providers.openai.hooks.openai"], [3, "module-airflow.providers.openai"], [4, "module-airflow.providers.openai.operators"], [5, "module-airflow.providers.openai.operators.openai"], [6, "module-airflow.providers.openai.triggers"], [7, "module-airflow.providers.openai.triggers.openai"], [8, "module-tests.system.providers.openai.example_openai"], [9, "module-tests.system.providers.openai.example_trigger_batch_operator"], [10, "module-tests.system.providers.openai"]], "airflow.providers.openai.hooks": [[1, "module-airflow.providers.openai.hooks"]], "batchstatus (class in airflow.providers.openai.hooks.openai)": [[2, "airflow.providers.openai.hooks.openai.BatchStatus"]], "cancelled (airflow.providers.openai.hooks.openai.batchstatus attribute)": [[2, "airflow.providers.openai.hooks.openai.BatchStatus.CANCELLED"]], "cancelling (airflow.providers.openai.hooks.openai.batchstatus attribute)": [[2, "airflow.providers.openai.hooks.openai.BatchStatus.CANCELLING"]], "completed (airflow.providers.openai.hooks.openai.batchstatus attribute)": [[2, "airflow.providers.openai.hooks.openai.BatchStatus.COMPLETED"]], "expired (airflow.providers.openai.hooks.openai.batchstatus attribute)": [[2, "airflow.providers.openai.hooks.openai.BatchStatus.EXPIRED"]], "failed (airflow.providers.openai.hooks.openai.batchstatus attribute)": [[2, "airflow.providers.openai.hooks.openai.BatchStatus.FAILED"]], "finalizing (airflow.providers.openai.hooks.openai.batchstatus attribute)": [[2, "airflow.providers.openai.hooks.openai.BatchStatus.FINALIZING"]], "in_progress (airflow.providers.openai.hooks.openai.batchstatus attribute)": [[2, "airflow.providers.openai.hooks.openai.BatchStatus.IN_PROGRESS"]], "openaihook (class in airflow.providers.openai.hooks.openai)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook"]], "validating (airflow.providers.openai.hooks.openai.batchstatus attribute)": [[2, "airflow.providers.openai.hooks.openai.BatchStatus.VALIDATING"]], "__str__() (airflow.providers.openai.hooks.openai.batchstatus method)": [[2, "airflow.providers.openai.hooks.openai.BatchStatus.__str__"]], "airflow.providers.openai.hooks.openai": [[2, "module-airflow.providers.openai.hooks.openai"]], "cancel_batch() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.cancel_batch"]], "conn() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.conn"]], "conn_name_attr (airflow.providers.openai.hooks.openai.openaihook attribute)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.conn_name_attr"]], "conn_type (airflow.providers.openai.hooks.openai.openaihook attribute)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.conn_type"]], "create_assistant() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.create_assistant"]], "create_batch() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.create_batch"]], "create_chat_completion() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.create_chat_completion"]], "create_embeddings() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.create_embeddings"]], "create_message() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.create_message"]], "create_run() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.create_run"]], "create_run_and_poll() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.create_run_and_poll"]], "create_thread() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.create_thread"]], "create_vector_store() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.create_vector_store"]], "default_conn_name (airflow.providers.openai.hooks.openai.openaihook attribute)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.default_conn_name"]], "delete_assistant() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.delete_assistant"]], "delete_file() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.delete_file"]], "delete_thread() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.delete_thread"]], "delete_vector_store() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.delete_vector_store"]], "delete_vector_store_file() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.delete_vector_store_file"]], "get_assistant() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.get_assistant"]], "get_assistants() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.get_assistants"]], "get_batch() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.get_batch"]], "get_conn() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.get_conn"]], "get_file() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.get_file"]], "get_files() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.get_files"]], "get_messages() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.get_messages"]], "get_run() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.get_run"]], "get_runs() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.get_runs"]], "get_ui_field_behaviour() (airflow.providers.openai.hooks.openai.openaihook class method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.get_ui_field_behaviour"]], "get_vector_store() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.get_vector_store"]], "get_vector_store_files() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.get_vector_store_files"]], "get_vector_stores() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.get_vector_stores"]], "hook_name (airflow.providers.openai.hooks.openai.openaihook attribute)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.hook_name"]], "is_in_progress() (airflow.providers.openai.hooks.openai.batchstatus class method)": [[2, "airflow.providers.openai.hooks.openai.BatchStatus.is_in_progress"]], "modify_assistant() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.modify_assistant"]], "modify_message() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.modify_message"]], "modify_run() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.modify_run"]], "modify_thread() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.modify_thread"]], "modify_vector_store() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.modify_vector_store"]], "test_connection() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.test_connection"]], "upload_file() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.upload_file"]], "upload_files_to_vector_store() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.upload_files_to_vector_store"]], "wait_for_batch() (airflow.providers.openai.hooks.openai.openaihook method)": [[2, "airflow.providers.openai.hooks.openai.OpenAIHook.wait_for_batch"]], "__version__ (in module airflow.providers.openai)": [[3, "airflow.providers.openai.__version__"]], "airflow.providers.openai": [[3, "module-airflow.providers.openai"]], "airflow.providers.openai.operators": [[4, "module-airflow.providers.openai.operators"]], "openaiembeddingoperator (class in airflow.providers.openai.operators.openai)": [[5, "airflow.providers.openai.operators.openai.OpenAIEmbeddingOperator"]], "openaitriggerbatchoperator (class in airflow.providers.openai.operators.openai)": [[5, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator"]], "airflow.providers.openai.operators.openai": [[5, "module-airflow.providers.openai.operators.openai"]], "execute() (airflow.providers.openai.operators.openai.openaiembeddingoperator method)": [[5, "airflow.providers.openai.operators.openai.OpenAIEmbeddingOperator.execute"]], "execute() (airflow.providers.openai.operators.openai.openaitriggerbatchoperator method)": [[5, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.execute"]], "execute_complete() (airflow.providers.openai.operators.openai.openaitriggerbatchoperator method)": [[5, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.execute_complete"]], "hook() (airflow.providers.openai.operators.openai.openaiembeddingoperator method)": [[5, "airflow.providers.openai.operators.openai.OpenAIEmbeddingOperator.hook"]], "hook() (airflow.providers.openai.operators.openai.openaitriggerbatchoperator method)": [[5, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.hook"]], "on_kill() (airflow.providers.openai.operators.openai.openaitriggerbatchoperator method)": [[5, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.on_kill"]], "template_fields (airflow.providers.openai.operators.openai.openaiembeddingoperator attribute)": [[5, "airflow.providers.openai.operators.openai.OpenAIEmbeddingOperator.template_fields"]], "template_fields (airflow.providers.openai.operators.openai.openaitriggerbatchoperator attribute)": [[5, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.template_fields"]], "airflow.providers.openai.triggers": [[6, "module-airflow.providers.openai.triggers"]], "openaibatchtrigger (class in airflow.providers.openai.triggers.openai)": [[7, "airflow.providers.openai.triggers.openai.OpenAIBatchTrigger"]], "airflow.providers.openai.triggers.openai": [[7, "module-airflow.providers.openai.triggers.openai"]], "run() (airflow.providers.openai.triggers.openai.openaibatchtrigger method)": [[7, "airflow.providers.openai.triggers.openai.OpenAIBatchTrigger.run"]], "serialize() (airflow.providers.openai.triggers.openai.openaibatchtrigger method)": [[7, "airflow.providers.openai.triggers.openai.OpenAIBatchTrigger.serialize"]], "example_openai_dag() (in module tests.system.providers.openai.example_openai)": [[8, "tests.system.providers.openai.example_openai.example_openai_dag"]], "input_text_callable() (in module tests.system.providers.openai.example_openai)": [[8, "tests.system.providers.openai.example_openai.input_text_callable"]], "test_run (in module tests.system.providers.openai.example_openai)": [[8, "tests.system.providers.openai.example_openai.test_run"]], "tests.system.providers.openai.example_openai": [[8, "module-tests.system.providers.openai.example_openai"]], "openai_conn_id (in module tests.system.providers.openai.example_trigger_batch_operator)": [[9, "tests.system.providers.openai.example_trigger_batch_operator.OPENAI_CONN_ID"]], "pokemons (in module tests.system.providers.openai.example_trigger_batch_operator)": [[9, "tests.system.providers.openai.example_trigger_batch_operator.POKEMONS"]], "openai_batch_chat_completions() (in module tests.system.providers.openai.example_trigger_batch_operator)": [[9, "tests.system.providers.openai.example_trigger_batch_operator.openai_batch_chat_completions"]], "test_run (in module tests.system.providers.openai.example_trigger_batch_operator)": [[9, "tests.system.providers.openai.example_trigger_batch_operator.test_run"]], "tests.system.providers.openai.example_trigger_batch_operator": [[9, "module-tests.system.providers.openai.example_trigger_batch_operator"]], "tests.system.providers.openai": [[10, "module-tests.system.providers.openai"]]}})