Search.setIndex({"alltitles": {"1.0.0": [[12, "id21"], [13, "id10"]], "1.0.1": [[12, "id19"], [13, "id9"]], "1.1.0": [[12, "id16"], [13, "id8"]], "1.2.0": [[12, "id12"], [13, "id7"]], "1.2.1": [[12, "id10"], [13, "id6"]], "1.2.2": [[12, "id8"], [13, "id5"]], "1.3.0": [[12, "id5"], [13, "id4"]], "1.4.0": [[12, "id4"], [13, "id3"]], "1.5.0": [[12, "id2"], [13, "id2"]], "1.5.1": [[12, "id1"], [13, "id1"]], "Attributes": [[4, "attributes"], [9, "attributes"], [10, "attributes"]], "Changelog": [[12, null]], "Classes": [[3, "classes"], [6, "classes"], [8, "classes"]], "Configuring the Connection": [[14, "configuring-the-connection"]], "Default Connection IDs": [[14, "default-connection-ids"]], "Exceptions": [[0, "exceptions"]], "Features": [[12, "features"], [12, "id14"]], "Functions": [[1, "functions"], [9, "functions"], [10, "functions"]], "Installation": [[15, "installation"]], "Installing from sources": [[16, null]], "Misc": [[12, "misc"], [12, "id3"], [12, "id7"], [12, "id9"], [12, "id11"], [12, "id15"], [12, "id18"], [12, "id20"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [3, "module-contents"], [6, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"]], "OpenAI Connection": [[14, null]], "OpenAIEmbeddingOperator": [[17, null]], "OpenAITriggerBatchOperator": [[17, "openaitriggerbatchoperator"]], "Package Contents": [[4, "package-contents"]], "Package apache-airflow-providers-openai": [[13, null]], "Provider package": [[15, "provider-package"]], "Release integrity": [[16, "release-integrity"]], "Released packages": [[16, "released-packages"]], "Releasing security patches": [[18, null]], "Requirements": [[15, "requirements"]], "Submodules": [[2, "submodules"], [4, "submodules"], [5, "submodules"], [7, "submodules"], [11, "submodules"]], "Using the Operator": [[17, "using-the-operator"], [17, "id1"]], "Verifying PyPI releases": [[16, "verifying-pypi-releases"]], "airflow.providers.openai": [[4, null]], "airflow.providers.openai.exceptions": [[0, null]], "airflow.providers.openai.get_provider_info": [[1, null]], "airflow.providers.openai.hooks": [[2, null]], "airflow.providers.openai.hooks.openai": [[3, null]], "airflow.providers.openai.operators": [[5, null]], "airflow.providers.openai.operators.openai": [[6, null]], "airflow.providers.openai.triggers": [[7, null]], "airflow.providers.openai.triggers.openai": [[8, null]], "apache-airflow-providers-openai": [[15, null]], "apache-airflow-providers-openai package": [[15, "apache-airflow-providers-openai-package"]], "tests.system.openai": [[11, null]], "tests.system.openai.example_openai": [[9, null]], "tests.system.openai.example_trigger_batch_operator": [[10, null]]}, "docnames": ["_api/airflow/providers/openai/exceptions/index", "_api/airflow/providers/openai/get_provider_info/index", "_api/airflow/providers/openai/hooks/index", "_api/airflow/providers/openai/hooks/openai/index", "_api/airflow/providers/openai/index", "_api/airflow/providers/openai/operators/index", "_api/airflow/providers/openai/operators/openai/index", "_api/airflow/providers/openai/triggers/index", "_api/airflow/providers/openai/triggers/openai/index", "_api/tests/system/openai/example_openai/index", "_api/tests/system/openai/example_trigger_batch_operator/index", "_api/tests/system/openai/index", "changelog", "commits", "connections", "index", "installing-providers-from-sources", "operators/openai", "security"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["_api/airflow/providers/openai/exceptions/index.rst", "_api/airflow/providers/openai/get_provider_info/index.rst", "_api/airflow/providers/openai/hooks/index.rst", "_api/airflow/providers/openai/hooks/openai/index.rst", "_api/airflow/providers/openai/index.rst", "_api/airflow/providers/openai/operators/index.rst", "_api/airflow/providers/openai/operators/openai/index.rst", "_api/airflow/providers/openai/triggers/index.rst", "_api/airflow/providers/openai/triggers/openai/index.rst", "_api/tests/system/openai/example_openai/index.rst", "_api/tests/system/openai/example_trigger_batch_operator/index.rst", "_api/tests/system/openai/index.rst", "changelog.rst", "commits.rst", "connections.rst", "index.rst", "installing-providers-from-sources.rst", "operators/openai.rst", "security.rst"], "indexentries": {"__str__() (airflow.providers.openai.hooks.openai.batchstatus method)": [[3, "airflow.providers.openai.hooks.openai.BatchStatus.__str__", false]], "__version__ (in module airflow.providers.openai)": [[4, "airflow.providers.openai.__version__", false]], "airflow.providers.openai": [[4, "module-airflow.providers.openai", false]], "airflow.providers.openai.exceptions": [[0, "module-airflow.providers.openai.exceptions", false]], "airflow.providers.openai.get_provider_info": [[1, "module-airflow.providers.openai.get_provider_info", false]], "airflow.providers.openai.hooks": [[2, "module-airflow.providers.openai.hooks", false]], "airflow.providers.openai.hooks.openai": [[3, "module-airflow.providers.openai.hooks.openai", false]], "airflow.providers.openai.operators": [[5, "module-airflow.providers.openai.operators", false]], "airflow.providers.openai.operators.openai": [[6, "module-airflow.providers.openai.operators.openai", false]], "airflow.providers.openai.triggers": [[7, "module-airflow.providers.openai.triggers", false]], "airflow.providers.openai.triggers.openai": [[8, "module-airflow.providers.openai.triggers.openai", false]], "batch_id (airflow.providers.openai.operators.openai.openaitriggerbatchoperator attribute)": [[6, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.batch_id", false]], "batch_id (airflow.providers.openai.triggers.openai.openaibatchtrigger attribute)": [[8, "airflow.providers.openai.triggers.openai.OpenAIBatchTrigger.batch_id", false]], "batchstatus (class in airflow.providers.openai.hooks.openai)": [[3, "airflow.providers.openai.hooks.openai.BatchStatus", false]], "cancel_batch() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.cancel_batch", false]], "cancelled (airflow.providers.openai.hooks.openai.batchstatus attribute)": [[3, "airflow.providers.openai.hooks.openai.BatchStatus.CANCELLED", false]], "cancelling (airflow.providers.openai.hooks.openai.batchstatus attribute)": [[3, "airflow.providers.openai.hooks.openai.BatchStatus.CANCELLING", false]], "completed (airflow.providers.openai.hooks.openai.batchstatus attribute)": [[3, "airflow.providers.openai.hooks.openai.BatchStatus.COMPLETED", false]], "conn (airflow.providers.openai.hooks.openai.openaihook property)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.conn", false]], "conn_id (airflow.providers.openai.hooks.openai.openaihook attribute)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.conn_id", false]], "conn_id (airflow.providers.openai.operators.openai.openaiembeddingoperator attribute)": [[6, "airflow.providers.openai.operators.openai.OpenAIEmbeddingOperator.conn_id", false]], "conn_id (airflow.providers.openai.operators.openai.openaitriggerbatchoperator attribute)": [[6, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.conn_id", false]], "conn_id (airflow.providers.openai.triggers.openai.openaibatchtrigger attribute)": [[8, "airflow.providers.openai.triggers.openai.OpenAIBatchTrigger.conn_id", false]], "conn_name_attr (airflow.providers.openai.hooks.openai.openaihook attribute)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.conn_name_attr", false]], "conn_type (airflow.providers.openai.hooks.openai.openaihook attribute)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.conn_type", false]], "create_assistant() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.create_assistant", false]], "create_batch() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.create_batch", false]], "create_chat_completion() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.create_chat_completion", false]], "create_embeddings() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.create_embeddings", false]], "create_message() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.create_message", false]], "create_run() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.create_run", false]], "create_run_and_poll() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.create_run_and_poll", false]], "create_thread() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.create_thread", false]], "create_vector_store() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.create_vector_store", false]], "default_conn_name (airflow.providers.openai.hooks.openai.openaihook attribute)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.default_conn_name", false]], "deferrable (airflow.providers.openai.operators.openai.openaitriggerbatchoperator attribute)": [[6, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.deferrable", false]], "delete_assistant() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.delete_assistant", false]], "delete_file() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.delete_file", false]], "delete_thread() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.delete_thread", false]], "delete_vector_store() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.delete_vector_store", false]], "delete_vector_store_file() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.delete_vector_store_file", false]], "embedding_kwargs (airflow.providers.openai.operators.openai.openaiembeddingoperator attribute)": [[6, "airflow.providers.openai.operators.openai.OpenAIEmbeddingOperator.embedding_kwargs", false]], "end_time (airflow.providers.openai.triggers.openai.openaibatchtrigger attribute)": [[8, "airflow.providers.openai.triggers.openai.OpenAIBatchTrigger.end_time", false]], "endpoint (airflow.providers.openai.operators.openai.openaitriggerbatchoperator attribute)": [[6, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.endpoint", false]], "example_openai_dag() (in module tests.system.openai.example_openai)": [[9, "tests.system.openai.example_openai.example_openai_dag", false]], "execute() (airflow.providers.openai.operators.openai.openaiembeddingoperator method)": [[6, "airflow.providers.openai.operators.openai.OpenAIEmbeddingOperator.execute", false]], "execute() (airflow.providers.openai.operators.openai.openaitriggerbatchoperator method)": [[6, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.execute", false]], "execute_complete() (airflow.providers.openai.operators.openai.openaitriggerbatchoperator method)": [[6, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.execute_complete", false]], "expired (airflow.providers.openai.hooks.openai.batchstatus attribute)": [[3, "airflow.providers.openai.hooks.openai.BatchStatus.EXPIRED", false]], "failed (airflow.providers.openai.hooks.openai.batchstatus attribute)": [[3, "airflow.providers.openai.hooks.openai.BatchStatus.FAILED", false]], "file_id (airflow.providers.openai.operators.openai.openaitriggerbatchoperator attribute)": [[6, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.file_id", false]], "finalizing (airflow.providers.openai.hooks.openai.batchstatus attribute)": [[3, "airflow.providers.openai.hooks.openai.BatchStatus.FINALIZING", false]], "get_assistant() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.get_assistant", false]], "get_assistants() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.get_assistants", false]], "get_batch() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.get_batch", false]], "get_conn() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.get_conn", false]], "get_file() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.get_file", false]], "get_files() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.get_files", false]], "get_messages() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.get_messages", false]], "get_provider_info() (in module airflow.providers.openai.get_provider_info)": [[1, "airflow.providers.openai.get_provider_info.get_provider_info", false]], "get_run() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.get_run", false]], "get_runs() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.get_runs", false]], "get_ui_field_behaviour() (airflow.providers.openai.hooks.openai.openaihook class method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.get_ui_field_behaviour", false]], "get_vector_store() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.get_vector_store", false]], "get_vector_store_files() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.get_vector_store_files", false]], "get_vector_stores() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.get_vector_stores", false]], "hook (airflow.providers.openai.operators.openai.openaiembeddingoperator property)": [[6, "airflow.providers.openai.operators.openai.OpenAIEmbeddingOperator.hook", false]], "hook (airflow.providers.openai.operators.openai.openaitriggerbatchoperator property)": [[6, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.hook", false]], "hook_name (airflow.providers.openai.hooks.openai.openaihook attribute)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.hook_name", false]], "in_progress (airflow.providers.openai.hooks.openai.batchstatus attribute)": [[3, "airflow.providers.openai.hooks.openai.BatchStatus.IN_PROGRESS", false]], "input_text (airflow.providers.openai.operators.openai.openaiembeddingoperator attribute)": [[6, "airflow.providers.openai.operators.openai.OpenAIEmbeddingOperator.input_text", false]], "input_text_callable() (in module tests.system.openai.example_openai)": [[9, "tests.system.openai.example_openai.input_text_callable", false]], "is_in_progress() (airflow.providers.openai.hooks.openai.batchstatus class method)": [[3, "airflow.providers.openai.hooks.openai.BatchStatus.is_in_progress", false]], "model (airflow.providers.openai.operators.openai.openaiembeddingoperator attribute)": [[6, "airflow.providers.openai.operators.openai.OpenAIEmbeddingOperator.model", false]], "modify_assistant() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.modify_assistant", false]], "modify_message() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.modify_message", false]], "modify_run() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.modify_run", false]], "modify_thread() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.modify_thread", false]], "modify_vector_store() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.modify_vector_store", false]], "module": [[0, "module-airflow.providers.openai.exceptions", false], [1, "module-airflow.providers.openai.get_provider_info", false], [2, "module-airflow.providers.openai.hooks", false], [3, "module-airflow.providers.openai.hooks.openai", false], [4, "module-airflow.providers.openai", false], [5, "module-airflow.providers.openai.operators", false], [6, "module-airflow.providers.openai.operators.openai", false], [7, "module-airflow.providers.openai.triggers", false], [8, "module-airflow.providers.openai.triggers.openai", false], [9, "module-tests.system.openai.example_openai", false], [10, "module-tests.system.openai.example_trigger_batch_operator", false], [11, "module-tests.system.openai", false]], "on_kill() (airflow.providers.openai.operators.openai.openaitriggerbatchoperator method)": [[6, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.on_kill", false]], "openai_batch_chat_completions() (in module tests.system.openai.example_trigger_batch_operator)": [[10, "tests.system.openai.example_trigger_batch_operator.openai_batch_chat_completions", false]], "openai_conn_id (in module tests.system.openai.example_trigger_batch_operator)": [[10, "tests.system.openai.example_trigger_batch_operator.OPENAI_CONN_ID", false]], "openaibatchjobexception": [[0, "airflow.providers.openai.exceptions.OpenAIBatchJobException", false]], "openaibatchtimeout": [[0, "airflow.providers.openai.exceptions.OpenAIBatchTimeout", false]], "openaibatchtrigger (class in airflow.providers.openai.triggers.openai)": [[8, "airflow.providers.openai.triggers.openai.OpenAIBatchTrigger", false]], "openaiembeddingoperator (class in airflow.providers.openai.operators.openai)": [[6, "airflow.providers.openai.operators.openai.OpenAIEmbeddingOperator", false]], "openaihook (class in airflow.providers.openai.hooks.openai)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook", false]], "openaitriggerbatchoperator (class in airflow.providers.openai.operators.openai)": [[6, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator", false]], "pokemons (in module tests.system.openai.example_trigger_batch_operator)": [[10, "tests.system.openai.example_trigger_batch_operator.POKEMONS", false]], "poll_interval (airflow.providers.openai.triggers.openai.openaibatchtrigger attribute)": [[8, "airflow.providers.openai.triggers.openai.OpenAIBatchTrigger.poll_interval", false]], "run() (airflow.providers.openai.triggers.openai.openaibatchtrigger method)": [[8, "airflow.providers.openai.triggers.openai.OpenAIBatchTrigger.run", false]], "serialize() (airflow.providers.openai.triggers.openai.openaibatchtrigger method)": [[8, "airflow.providers.openai.triggers.openai.OpenAIBatchTrigger.serialize", false]], "template_fields (airflow.providers.openai.operators.openai.openaiembeddingoperator attribute)": [[6, "airflow.providers.openai.operators.openai.OpenAIEmbeddingOperator.template_fields", false]], "template_fields (airflow.providers.openai.operators.openai.openaitriggerbatchoperator attribute)": [[6, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.template_fields", false]], "test_connection() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.test_connection", false]], "test_run (in module tests.system.openai.example_openai)": [[9, "tests.system.openai.example_openai.test_run", false]], "test_run (in module tests.system.openai.example_trigger_batch_operator)": [[10, "tests.system.openai.example_trigger_batch_operator.test_run", false]], "tests.system.openai": [[11, "module-tests.system.openai", false]], "tests.system.openai.example_openai": [[9, "module-tests.system.openai.example_openai", false]], "tests.system.openai.example_trigger_batch_operator": [[10, "module-tests.system.openai.example_trigger_batch_operator", false]], "timeout (airflow.providers.openai.operators.openai.openaitriggerbatchoperator attribute)": [[6, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.timeout", false]], "upload_file() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.upload_file", false]], "upload_files_to_vector_store() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.upload_files_to_vector_store", false]], "validating (airflow.providers.openai.hooks.openai.batchstatus attribute)": [[3, "airflow.providers.openai.hooks.openai.BatchStatus.VALIDATING", false]], "wait_for_batch() (airflow.providers.openai.hooks.openai.openaihook method)": [[3, "airflow.providers.openai.hooks.openai.OpenAIHook.wait_for_batch", false]], "wait_for_completion (airflow.providers.openai.operators.openai.openaitriggerbatchoperator attribute)": [[6, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.wait_for_completion", false]], "wait_seconds (airflow.providers.openai.operators.openai.openaitriggerbatchoperator attribute)": [[6, "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator.wait_seconds", false]]}, "objects": {"airflow.providers": [[4, 0, 0, "-", "openai"]], "airflow.providers.openai": [[4, 1, 1, "", "__version__"], [0, 0, 0, "-", "exceptions"], [1, 0, 0, "-", "get_provider_info"], [2, 0, 0, "-", "hooks"], [5, 0, 0, "-", "operators"], [7, 0, 0, "-", "triggers"]], "airflow.providers.openai.exceptions": [[0, 2, 1, "", "OpenAIBatchJobException"], [0, 2, 1, "", "OpenAIBatchTimeout"]], "airflow.providers.openai.get_provider_info": [[1, 3, 1, "", "get_provider_info"]], "airflow.providers.openai.hooks": [[3, 0, 0, "-", "openai"]], "airflow.providers.openai.hooks.openai": [[3, 4, 1, "", "BatchStatus"], [3, 4, 1, "", "OpenAIHook"]], "airflow.providers.openai.hooks.openai.BatchStatus": [[3, 5, 1, "", "CANCELLED"], [3, 5, 1, "", "CANCELLING"], [3, 5, 1, "", "COMPLETED"], [3, 5, 1, "", "EXPIRED"], [3, 5, 1, "", "FAILED"], [3, 5, 1, "", "FINALIZING"], [3, 5, 1, "", "IN_PROGRESS"], [3, 5, 1, "", "VALIDATING"], [3, 6, 1, "", "__str__"], [3, 6, 1, "", "is_in_progress"]], "airflow.providers.openai.hooks.openai.OpenAIHook": [[3, 6, 1, "", "cancel_batch"], [3, 7, 1, "", "conn"], [3, 5, 1, "", "conn_id"], [3, 5, 1, "", "conn_name_attr"], [3, 5, 1, "", "conn_type"], [3, 6, 1, "", "create_assistant"], [3, 6, 1, "", "create_batch"], [3, 6, 1, "", "create_chat_completion"], [3, 6, 1, "", "create_embeddings"], [3, 6, 1, "", "create_message"], [3, 6, 1, "", "create_run"], [3, 6, 1, "", "create_run_and_poll"], [3, 6, 1, "", "create_thread"], [3, 6, 1, "", "create_vector_store"], [3, 5, 1, "", "default_conn_name"], [3, 6, 1, "", "delete_assistant"], [3, 6, 1, "", "delete_file"], [3, 6, 1, "", "delete_thread"], [3, 6, 1, "", "delete_vector_store"], [3, 6, 1, "", "delete_vector_store_file"], [3, 6, 1, "", "get_assistant"], [3, 6, 1, "", "get_assistants"], [3, 6, 1, "", "get_batch"], [3, 6, 1, "", "get_conn"], [3, 6, 1, "", "get_file"], [3, 6, 1, "", "get_files"], [3, 6, 1, "", "get_messages"], [3, 6, 1, "", "get_run"], [3, 6, 1, "", "get_runs"], [3, 6, 1, "", "get_ui_field_behaviour"], [3, 6, 1, "", "get_vector_store"], [3, 6, 1, "", "get_vector_store_files"], [3, 6, 1, "", "get_vector_stores"], [3, 5, 1, "", "hook_name"], [3, 6, 1, "", "modify_assistant"], [3, 6, 1, "", "modify_message"], [3, 6, 1, "", "modify_run"], [3, 6, 1, "", "modify_thread"], [3, 6, 1, "", "modify_vector_store"], [3, 6, 1, "", "test_connection"], [3, 6, 1, "", "upload_file"], [3, 6, 1, "", "upload_files_to_vector_store"], [3, 6, 1, "", "wait_for_batch"]], "airflow.providers.openai.operators": [[6, 0, 0, "-", "openai"]], "airflow.providers.openai.operators.openai": [[6, 4, 1, "", "OpenAIEmbeddingOperator"], [6, 4, 1, "", "OpenAITriggerBatchOperator"]], "airflow.providers.openai.operators.openai.OpenAIEmbeddingOperator": [[6, 5, 1, "", "conn_id"], [6, 5, 1, "", "embedding_kwargs"], [6, 6, 1, "", "execute"], [6, 7, 1, "", "hook"], [6, 5, 1, "", "input_text"], [6, 5, 1, "", "model"], [6, 5, 1, "", "template_fields"]], "airflow.providers.openai.operators.openai.OpenAITriggerBatchOperator": [[6, 5, 1, "", "batch_id"], [6, 5, 1, "", "conn_id"], [6, 5, 1, "", "deferrable"], [6, 5, 1, "", "endpoint"], [6, 6, 1, "", "execute"], [6, 6, 1, "", "execute_complete"], [6, 5, 1, "", "file_id"], [6, 7, 1, "", "hook"], [6, 6, 1, "", "on_kill"], [6, 5, 1, "", "template_fields"], [6, 5, 1, "", "timeout"], [6, 5, 1, "", "wait_for_completion"], [6, 5, 1, "", "wait_seconds"]], "airflow.providers.openai.triggers": [[8, 0, 0, "-", "openai"]], "airflow.providers.openai.triggers.openai": [[8, 4, 1, "", "OpenAIBatchTrigger"]], "airflow.providers.openai.triggers.openai.OpenAIBatchTrigger": [[8, 5, 1, "", "batch_id"], [8, 5, 1, "", "conn_id"], [8, 5, 1, "", "end_time"], [8, 5, 1, "", "poll_interval"], [8, 6, 1, "", "run"], [8, 6, 1, "", "serialize"]], "tests.system": [[11, 0, 0, "-", "openai"]], "tests.system.openai": [[9, 0, 0, "-", "example_openai"], [10, 0, 0, "-", "example_trigger_batch_operator"]], "tests.system.openai.example_openai": [[9, 3, 1, "", "example_openai_dag"], [9, 3, 1, "", "input_text_callable"], [9, 1, 1, "", "test_run"]], "tests.system.openai.example_trigger_batch_operator": [[10, 1, 1, "", "OPENAI_CONN_ID"], [10, 1, 1, "", "POKEMONS"], [10, 3, 1, "", "openai_batch_chat_completions"], [10, 1, 1, "", "test_run"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "exception", "Python exception"], "3": ["py", "function", "Python function"], "4": ["py", "class", "Python class"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"], "7": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:exception", "3": "py:function", "4": "py:class", "5": "py:attribute", "6": "py:method", "7": "py:property"}, "terms": {"": [3, 13, 16], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18], "002": [3, 6, 17], "00e73e6089": 13, "01": 13, "02": 13, "03": 13, "04": 13, "05": 13, "06": 13, "07": 13, "08": 13, "09": 13, "0b23d5601c": 13, "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18], "10": [13, 14], "100": 3, "11": [13, 16], "12": [13, 16], "1275fec92f": 13, "14": 13, "15": 13, "16": [3, 13], "19": 13, "19ebcac239": 13, "1b059c57d6": 13, "1st": 13, "2": 15, "20": 13, "2021": 16, "2023": 13, "2024": 13, "2025": 13, "21": 13, "22": 13, "23": 13, "24": [3, 6, 13], "240a147fcd": 13, "24h": 3, "25": 13, "26": 13, "2674a69780": 13, "2723508345": 13, "28": 13, "2b1a2f8d56": 13, "2b4da0101f": 13, "2c05187b07": 13, "2nd": 13, "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18], "30": 13, "32": [13, 15], "34500f3a2f": 13, "35023": 13, "35537": 13, "35547": [12, 13], "35686": 13, "35693": 13, "35836": 13, "3600": 3, "36014": [12, 13], "36017": [12, 13], "36112": 13, "36380": 13, "36464": 13, "36499": 13, "36640": 13, "36945": 13, "37019": 13, "37324": 13, "37326": 13, "37488": 13, "37876": 13, "38736": [12, 13], "38863": 13, "39240": [12, 13], "39248": [12, 13], "39328": 13, "39497": [12, 13], "39552": [12, 13], "39554": 13, "39738": 13, "3rd": 13, "40110": [12, 13], "40273": 13, "406f": 16, "41396": [12, 13], "41554": [12, 13], "41559": 13, "42387": 13, "42505": 13, "44011": 13, "44298": 13, "44956": [12, 13], "45042": 13, "45583": [12, 13], "46099": 13, "46608": 13, "46800": 13, "49": 16, "4b38bed76c": 13, "4d3a": 16, "4d5846f58f": 13, "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18], "512": 16, "54": 16, "5a0be392e6": 13, "5c6e": 16, "5fa80b6aea": 13, "6": [12, 13], "60": 6, "65dbf86f72": 13, "6674": 16, "6937ae7647": 13, "6e5ae26382": 13, "7": [12, 13], "72": [12, 13], "73918925ed": 13, "75fb7acbac": 13, "7628d47d04": 13, "8": [12, 13], "83316b8158": 13, "857ca4c06c": 13, "86400": 6, "8ec4": 16, "9": [12, 13, 15], "99534e47f3": 13, "999b70178a": 13, "99df205f42": 13, "9b5d6bfe27": 13, "A": 3, "By": 16, "For": [6, 13, 14, 15, 16], "If": [6, 16], "It": 16, "The": [3, 6, 14, 15, 16, 17, 18], "There": 16, "To": [3, 16], "__str__": 3, "__version__": 4, "a53d9f6d25": 13, "abc": 6, "about": [3, 13, 16, 18], "abov": 16, "acb9458d09": 13, "accept": [6, 14], "access": 14, "account": 17, "across": 3, "ada": [3, 6, 17], "add": 13, "addit": 6, "address": 14, "after": [0, 6], "aip": [12, 13], "airflow": [9, 12, 16, 17, 18], "airflow_vers": [12, 13], "airflowexcept": 0, "aka": 16, "all": [3, 13, 14, 15, 18], "allow": 3, "along": 9, "alreadi": 16, "also": 16, "alwai": 18, "amount": 6, "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "ani": [3, 16], "apach": [9, 12, 16], "apache_airflow_providers_openai": 16, "api": [3, 6, 8, 9, 12, 13, 14, 17], "api_kei": 14, "appli": 13, "april": 13, "ar": [3, 14, 15, 16, 18], "arg": 3, "argument": [6, 8], "asc": 16, "assist": [3, 12, 13], "assistant_id": 3, "assum": 6, "async": 8, "attach": 3, "aug": 13, "autocomplet": 13, "avail": [12, 16], "b15d5578da": 13, "ba4b": 16, "band": 18, "base": [0, 3, 6, 8], "basehook": 3, "baseoper": 6, "basetrigg": 8, "bash": 16, "batch": [0, 3, 6, 8, 12, 13, 17], "batch_file_id": 17, "batch_id": [3, 6, 8, 17], "batch_operator_def": 17, "batchstatu": 3, "behaviour": 3, "belong": [3, 16], "below": [15, 16], "beta": 3, "better": [12, 13], "between": [3, 6], "bfb054e9e8": 13, "bin": 16, "binari": [3, 16], "binaryio": 3, "black": 13, "bool": 6, "branch": 18, "break": [13, 18], "breez": 13, "bst": 16, "bug": 18, "bugfix": 18, "build": [13, 16], "bulbasaur": 10, "bump": [12, 13], "callback": 6, "can": [3, 6, 14, 15, 16, 18], "cancel": [3, 6], "cancel_batch": 3, "case": 18, "cca4aa4e9a": 13, "cde1": 16, "cde15c6e4d3a8ec4ecf4ba4b6674e08ad7de406f": 16, "cead3da4a6": 13, "certif": 16, "certifi": 16, "chang": [13, 18], "changelog": 13, "chapter": 16, "charmand": 10, "chat": [3, 6, 12, 13, 17], "chatcompletionassistantmessageparam": 3, "chatcompletionfunctionmessageparam": 3, "chatcompletionsystemmessageparam": 3, "chatcompletiontoolmessageparam": 3, "chatcompletionusermessageparam": 3, "check": [3, 6, 16], "checksum": 16, "cherri": 18, "choos": 16, "class": 15, "classmethod": 3, "client": [8, 14], "code": 16, "collect": 6, "com": [3, 6, 16], "comment": 13, "commit": 13, "complet": [3, 6, 17], "completion_window": 3, "compris": 3, "conf": 6, "conn": 3, "conn_id": [3, 6, 8, 17], "conn_name_attr": 3, "conn_typ": 3, "connect": [3, 6, 8, 17], "contain": 16, "context": [6, 12, 13], "convers": 3, "correct": 16, "creat": [3, 6, 16, 17], "create_assist": 3, "create_batch": 3, "create_chat_complet": 3, "create_embed": [3, 6], "create_messag": 3, "create_run": 3, "create_run_and_pol": 3, "create_thread": 3, "create_vector_stor": 3, "critic": 18, "curl": 16, "custom": 3, "d": 16, "d0918d77ee": 13, "d2514b408c": 13, "d7de": 16, "da6c2bcf3c": 13, "data": 9, "datalib": 15, "dec": 13, "decemb": 13, "decid": 18, "deember": 13, "default": [3, 6, 18], "default_conn_nam": [3, 6], "default_deferr": 6, "default_kwarg1_valu": 9, "defer": 3, "deferr": [6, 17], "delet": 3, "delete_assist": 3, "delete_fil": 3, "delete_thread": 3, "delete_vector_stor": 3, "delete_vector_store_fil": 3, "demonstr": 9, "dep": 16, "depend": 18, "deriv": 6, "describ": 16, "dest": 16, "detail": [13, 16], "dev0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "develop": 18, "dict": [3, 6, 12, 13], "dictionari": [6, 14], "diff": 16, "differ": 16, "directori": 16, "distribut": [13, 16], "do": 16, "doc": [3, 6, 9, 13], "document": [9, 13], "done": 18, "down": 16, "download": 16, "drop": 16, "e027457a24": 13, "e08a": 16, "ead9b00f7c": 13, "ecf4": 16, "echo": 16, "embed": [3, 6, 12, 13, 17], "embedding_kwarg": 6, "embedding_using_cal": 17, "embedding_using_text": 17, "embedding_using_xcom_data": 17, "enabl": 14, "end_tim": 8, "endpoint": [3, 6, 17], "entiti": 3, "enum": 3, "essenti": 16, "event": 6, "exampl": [9, 14, 16, 17], "example_openai": [11, 17], "example_openai_dag": 9, "example_trigger_batch_oper": [11, 17], "except": [4, 6, 18], "execut": [3, 6], "execute_complet": 6, "exist": [3, 15], "experiment": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "expir": 3, "explain": 12, "extra": [13, 14], "extract": 9, "f616c62209": 13, "f61ffe58d3": 13, "fail": [0, 3], "fallback": 6, "fals": 6, "far": 3, "faster": [12, 13], "fcbff15bda": 13, "fe4605a10": 13, "feat": [12, 13], "featur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18], "februari": 13, "field": [3, 14], "file": [3, 6, 12, 13, 16, 17], "file_id": [3, 6, 17], "final": 3, "fine": 3, "fingerprint": 16, "finish": 3, "fire": 6, "fix": [13, 18], "float": [3, 6], "folder": [13, 16], "follow": [14, 16, 18], "found": 18, "foundat": 16, "from": [3, 17, 18], "function": [12, 13], "gb": 3, "gener": [3, 6], "get": [3, 16, 18], "get_assist": 3, "get_batch": 3, "get_conn": [3, 12, 13], "get_fil": 3, "get_messag": 3, "get_provider_info": 4, "get_run": 3, "get_template_context": 6, "get_ui_field_behaviour": 3, "get_vector_stor": 3, "get_vector_store_fil": 3, "getboolean": 6, "given": [3, 17], "gmail": 16, "goe": 9, "good": [16, 18], "govern": 18, "gpg": 16, "gpt": 3, "guid": [6, 16], "gz": 16, "handl": [12, 13], "have": 18, "header": 13, "here": 9, "high": 13, "hint": [12, 13], "hook": [4, 6, 12, 13, 14], "hook_nam": 3, "host": 14, "hour": [3, 6], "how": [3, 6, 16], "html": 9, "http": [3, 6, 9, 16], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "id": [3, 6, 16], "immedi": 6, "import": [12, 13, 16, 17], "in_progress": 3, "includ": [3, 13, 15, 18], "independ": 18, "index": 13, "indic": 16, "inform": [3, 6, 13, 18], "initi": 12, "input": [6, 17], "input2_valu": 17, "input_arg1": 9, "input_arg1_valu": 17, "input_arg2": 9, "input_kwarg1": [9, 17], "input_kwarg1_valu": 17, "input_kwarg2": [9, 17], "input_kwarg2_valu": 17, "input_text": [6, 17], "input_text_cal": [9, 17], "instal": 18, "instanc": [6, 14], "instanti": 14, "instruct": [16, 18], "int": [3, 6], "integ": 6, "intend": 3, "interact": [3, 17], "interest": 18, "introduct": 3, "invok": 6, "is_in_progress": 3, "issuer": 16, "itself": [3, 18], "jan": 13, "januari": 13, "jinja": 6, "job": [0, 17], "json": 14, "june": 13, "ka": 16, "kaxil": 16, "kaxilnaik": 16, "kei": [3, 14, 16], "keyword": 6, "know": 16, "kwarg": [3, 6], "l": 16, "la": 16, "latest": [13, 18], "left": 16, "level": 13, "link": 16, "list": [3, 6, 13], "liter": [3, 6], "load": 9, "local": 16, "locat": 9, "look": 6, "made": 16, "mai": 13, "main": [13, 16, 18], "major": 18, "make": 8, "manag": [13, 16], "mani": 3, "march": 13, "match": [12, 13, 16], "messag": 3, "message_id": 3, "metadata": 3, "method": 6, "might": 18, "min": 13, "minimum": [12, 13, 15], "minor": 18, "mirror": 16, "mix": 18, "mktemp": 16, "mode": 6, "model": [3, 6, 17, 18], "modifi": 3, "modify_assist": 3, "modify_messag": 3, "modify_run": 3, "modify_thread": 3, "modify_vector_stor": 3, "more": 6, "most": 16, "move": 13, "naik": 16, "name": 3, "nest": 14, "new": [13, 18], "next": 18, "none": [3, 6, 16], "nov": 13, "novemb": 13, "number": [3, 6, 13], "o": 16, "object": 3, "offici": 16, "older": 18, "on_kil": 6, "onc": 16, "one": [3, 16], "onli": [3, 6, 12, 18], "open": 17, "openai": [12, 16, 17], "openai_batch_chat_complet": 10, "openai_client_kwarg": 14, "openai_conn_id": [10, 17], "openai_default": [3, 6, 10, 14, 17], "openaibatchjobexcept": 0, "openaibatchtimeout": 0, "openaibatchtrigg": 8, "openaiembeddingoper": 6, "openaihook": [3, 6], "openaitriggerbatchoper": 6, "oper": [3, 4, 12, 13], "option": [3, 6, 14], "org": [9, 16], "organ": 3, "origin": 16, "otherwis": 6, "out": [0, 13, 18], "overview": 3, "owner": 16, "package_nam": 16, "package_vers": 16, "page": 16, "pair": [3, 14], "paramet": [3, 6, 14, 17], "parti": 18, "pass": [6, 14], "patchlevel": 18, "path": 8, "pgp": 16, "pgpk": 16, "pgpv": 16, "pick": 18, "pikachu": 10, "pip": [15, 16], "pipelin": 9, "platform": [3, 6], "pleas": [6, 16], "point": 14, "pokemon": 10, "polici": [12, 18], "poll": [3, 8], "poll_interv": 8, "possibl": 6, "prepar": [13, 17, 18], "previou": 16, "primari": 16, "process": 0, "progress": 3, "project": 13, "properti": [3, 6], "provid": [12, 16, 17, 18], "provider_download_dir": 16, "provider_test": 13, "publish": 18, "purpos": 3, "py": 17, "py3": 16, "pypi": 18, "python": [13, 15, 16], "rais": 0, "ran": 3, "rc1": 13, "rc2": 13, "re": 13, "readi": 3, "reappli": 13, "reason": 18, "receiv": 18, "recommend": 16, "refactor": 13, "refer": 6, "refin": [12, 13], "releas": [12, 13, 15], "relev": 16, "reli": 6, "remov": [3, 13, 16], "render": 6, "reproduc": 13, "request": [0, 3, 6], "requir": [6, 14, 17, 18], "respons": 3, "retriev": 3, "return": [3, 6], "role": 3, "round": 13, "rsa": 16, "ruff": 13, "rule": [13, 18], "run": [3, 6, 8, 16], "run_id": 3, "same": 6, "sat": 16, "scope": 18, "script": 16, "sdist": 16, "sdk": [3, 12, 13], "second": [3, 6], "see": [6, 13, 15], "select": 16, "self": [3, 16], "semver": 18, "sep": [13, 16], "separ": 18, "sequenc": 6, "serial": 8, "server": 16, "set": [3, 6, 14], "sha": 16, "sha512": 16, "shasum": 16, "should": [16, 18], "sign": 16, "signatur": 16, "simpl": 9, "simplifi": [12, 13], "size": 3, "sla": 6, "so": [3, 18], "softwar": 16, "sourc": [0, 1, 3, 4, 6, 8, 9, 10, 17], "specif": 3, "specifi": [6, 14, 17], "speed": 13, "split": 13, "stabl": 9, "stakehold": 18, "start": 0, "state": 13, "statu": [3, 8], "step": 16, "store": [3, 12, 13], "str": [3, 6], "strict": 18, "string": 6, "structur": 13, "subject": 13, "success": 6, "sum": 16, "support": [12, 13, 15], "system": 17, "take": 6, "tar": 16, "target": 13, "task": [6, 9], "task_id": 17, "task_to_store_input_text_in_xcom": 17, "taskflow": 9, "templat": [6, 13], "template_field": 6, "temporari": 16, "test": [13, 17, 18], "test_connect": 3, "test_run": [9, 10], "text": [3, 6, 17], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "those": 16, "thread": 3, "thread_id": 3, "three": 9, "throw": 6, "time": [0, 3, 6], "timeout": [3, 6, 14], "top": [15, 16], "transform": 9, "tree": 13, "trigger": [4, 6, 12, 13, 17], "true": [6, 17], "trust": 16, "tune": 3, "turbo": 3, "tutori": 9, "tutorial_taskflow_api": 9, "type": [3, 12, 13, 14], "unit": 13, "unknown": 16, "until": 3, "unus": 13, "up": [3, 12, 13], "updat": 13, "upgrad": 18, "upload": 3, "upload_fil": 3, "upload_files_to_vector_stor": 3, "us": [3, 6, 9, 12, 13, 14, 16, 18], "user": [3, 16], "uv": 13, "v1": [3, 6, 17], "valid": [3, 16], "valu": [3, 14], "variou": 3, "vector": [3, 12, 13], "vector_store_id": 3, "version": [12, 13, 15, 16, 18], "via": [15, 16], "vulner": 18, "wa": [3, 6], "wai": 17, "wait": [3, 6, 17], "wait_for_batch": 3, "wait_for_complet": 6, "wait_second": [3, 6], "want": [16, 18], "warn": 16, "wave": 13, "we": 18, "well": 16, "when": [0, 6, 18], "where": 18, "whether": 6, "which": [3, 6, 9, 18], "whl": 16, "why": 16, "window": 3, "workspac": 13, "worri": 16, "you": [14, 15, 16, 18], "your": [14, 17], "your_api_kei": 14}, "titles": ["airflow.providers.openai.exceptions", "airflow.providers.openai.get_provider_info", "airflow.providers.openai.hooks", "airflow.providers.openai.hooks.openai", "airflow.providers.openai", "airflow.providers.openai.operators", "airflow.providers.openai.operators.openai", "airflow.providers.openai.triggers", "airflow.providers.openai.triggers.openai", "tests.system.openai.example_openai", "tests.system.openai.example_trigger_batch_operator", "tests.system.openai", "Changelog", "Package apache-airflow-providers-openai", "OpenAI Connection", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apache-airflow-providers-openai</span></code>", "Installing from sources", "OpenAIEmbeddingOperator", "Releasing security patches"], "titleterms": {"0": [12, 13], "1": [12, 13], "2": [12, 13], "3": [12, 13], "4": [12, 13], "5": [12, 13], "airflow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 15], "apach": [13, 15], "attribut": [4, 9, 10], "changelog": 12, "class": [3, 6, 8], "configur": 14, "connect": 14, "content": [0, 1, 3, 4, 6, 8, 9, 10], "default": 14, "example_openai": 9, "example_trigger_batch_oper": 10, "except": 0, "featur": 12, "from": 16, "function": [1, 9, 10], "get_provider_info": 1, "hook": [2, 3], "id": 14, "instal": [15, 16], "integr": 16, "misc": 12, "modul": [0, 1, 3, 6, 8, 9, 10], "openai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15], "openaiembeddingoper": 17, "openaitriggerbatchoper": 17, "oper": [5, 6, 17], "packag": [4, 13, 15, 16], "patch": 18, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 15], "pypi": 16, "releas": [16, 18], "requir": 15, "secur": 18, "sourc": 16, "submodul": [2, 4, 5, 7, 11], "system": [9, 10, 11], "test": [9, 10, 11], "trigger": [7, 8], "us": 17, "verifi": 16}})