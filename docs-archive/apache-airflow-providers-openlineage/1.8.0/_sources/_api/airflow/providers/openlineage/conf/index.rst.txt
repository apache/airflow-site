:py:mod:`airflow.providers.openlineage.conf`
============================================

.. py:module:: airflow.providers.openlineage.conf

.. autoapi-nested-parse::

   This module provides functions for safely retrieving and handling OpenLineage configurations.

   To prevent errors caused by invalid user-provided configuration values, we use ``conf.get()``
   to fetch values as strings and perform safe conversions using custom functions.

   Any invalid configuration values should be treated as incorrect and replaced with default values.
   For example, if the default for boolean ``custom_ol_var`` is False, any non-true value provided:
   ``"asdf"``, ``12345``, ``{"key": 1}`` or empty string, will result in False being used.

   By using default values for invalid configuration values, we ensure that the configurations are handled
   safely, preventing potential runtime errors due to conversion issues.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   airflow.providers.openlineage.conf.config_path
   airflow.providers.openlineage.conf.is_source_enabled
   airflow.providers.openlineage.conf.disabled_operators
   airflow.providers.openlineage.conf.selective_enable
   airflow.providers.openlineage.conf.custom_extractors
   airflow.providers.openlineage.conf.namespace
   airflow.providers.openlineage.conf.transport
   airflow.providers.openlineage.conf.is_disabled
   airflow.providers.openlineage.conf.dag_state_change_process_pool_size



.. py:function:: config_path(check_legacy_env_var = True)

   [openlineage] config_path.


.. py:function:: is_source_enabled()

   [openlineage] disable_source_code.


.. py:function:: disabled_operators()

   [openlineage] disabled_for_operators.


.. py:function:: selective_enable()

   [openlineage] selective_enable.


.. py:function:: custom_extractors()

   [openlineage] extractors.


.. py:function:: namespace()

   [openlineage] namespace.


.. py:function:: transport()

   [openlineage] transport.


.. py:function:: is_disabled()

   [openlineage] disabled + check if any configuration is present.


.. py:function:: dag_state_change_process_pool_size()

   [openlineage] dag_state_change_process_pool_size.


