Search.setIndex({"docnames": ["_api/airflow/providers/standard/hooks/filesystem/index", "_api/airflow/providers/standard/hooks/index", "_api/airflow/providers/standard/hooks/package_index/index", "_api/airflow/providers/standard/hooks/subprocess/index", "_api/airflow/providers/standard/index", "_api/airflow/providers/standard/operators/bash/index", "_api/airflow/providers/standard/operators/datetime/index", "_api/airflow/providers/standard/operators/generic_transfer/index", "_api/airflow/providers/standard/operators/index", "_api/airflow/providers/standard/operators/python/index", "_api/airflow/providers/standard/operators/weekday/index", "_api/airflow/providers/standard/sensors/bash/index", "_api/airflow/providers/standard/sensors/date_time/index", "_api/airflow/providers/standard/sensors/index", "_api/airflow/providers/standard/sensors/python/index", "_api/airflow/providers/standard/sensors/time/index", "_api/airflow/providers/standard/sensors/time_delta/index", "_api/airflow/providers/standard/sensors/weekday/index", "_api/airflow/providers/standard/utils/index", "_api/airflow/providers/standard/utils/python_virtualenv/index", "_api/airflow/providers/standard/utils/version_references/index", "changelog", "commits", "configurations-ref", "index", "installing-providers-from-sources", "operators/bash", "operators/datetime", "operators/index", "operators/python", "security", "sensors/bash", "sensors/datetime", "sensors/index", "sensors/python"], "filenames": ["_api/airflow/providers/standard/hooks/filesystem/index.rst", "_api/airflow/providers/standard/hooks/index.rst", "_api/airflow/providers/standard/hooks/package_index/index.rst", "_api/airflow/providers/standard/hooks/subprocess/index.rst", "_api/airflow/providers/standard/index.rst", "_api/airflow/providers/standard/operators/bash/index.rst", "_api/airflow/providers/standard/operators/datetime/index.rst", "_api/airflow/providers/standard/operators/generic_transfer/index.rst", "_api/airflow/providers/standard/operators/index.rst", "_api/airflow/providers/standard/operators/python/index.rst", "_api/airflow/providers/standard/operators/weekday/index.rst", "_api/airflow/providers/standard/sensors/bash/index.rst", "_api/airflow/providers/standard/sensors/date_time/index.rst", "_api/airflow/providers/standard/sensors/index.rst", "_api/airflow/providers/standard/sensors/python/index.rst", "_api/airflow/providers/standard/sensors/time/index.rst", "_api/airflow/providers/standard/sensors/time_delta/index.rst", "_api/airflow/providers/standard/sensors/weekday/index.rst", "_api/airflow/providers/standard/utils/index.rst", "_api/airflow/providers/standard/utils/python_virtualenv/index.rst", "_api/airflow/providers/standard/utils/version_references/index.rst", "changelog.rst", "commits.rst", "configurations-ref.rst", "index.rst", "installing-providers-from-sources.rst", "operators/bash.rst", "operators/datetime.rst", "operators/index.rst", "operators/python.rst", "security.rst", "sensors/bash.rst", "sensors/datetime.rst", "sensors/index.rst", "sensors/python.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.hooks.filesystem</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.hooks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.hooks.package_index</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.hooks.subprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.bash</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.datetime</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.generic_transfer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.python</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.weekday</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.bash</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.date_time</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.python</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.time</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.time_delta</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.weekday</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.utils.python_virtualenv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.utils.version_references</span></code>", "Changelog", "Package apache-airflow-providers-standard", "Configuration Reference", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apache-airflow-providers-standard</span></code>", "Installing from sources", "BashOperator", "BranchDateTimeOperator", "Standard Operators", "PythonOperator", "Releasing security patches", "BashSensor", "TimeDeltaSensor", "Standard Sensors", "PythonSensor"], "terms": {"fshook": [0, 22], "fs_conn_id": 0, "default_conn_nam": [0, 2], "kwarg": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 26, 29], "sourc": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 26, 27, 29, 31, 32, 34], "base": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 27, 29], "basehook": [0, 2, 3, 7], "allow": [0, 9, 22, 26, 27, 29], "interact": 0, "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "file": [0, 5, 9, 19, 22, 23, 25, 29], "server": [0, 25], "connect": [0, 2, 7, 29], "should": [0, 5, 6, 9, 10, 23, 25, 26, 29, 30, 31], "have": [0, 3, 5, 9, 12, 26, 29, 30], "name": [0, 5, 9, 10, 17, 19, 26], "path": [0, 9, 19, 23, 26, 27, 29], "specifi": [0, 2, 5, 9, 12, 15, 16, 17, 26, 29, 32], "under": [0, 26, 29], "extra": [0, 7, 29], "exampl": [0, 5, 9, 10, 12, 17, 23, 25, 26, 27, 29], "id": [0, 7, 22, 25], "fs_test": 0, "type": [0, 3, 5, 7, 9, 19, 23, 26, 29], "host": 0, "schema": 0, "login": 0, "password": 0, "port": 0, "empti": [0, 10, 26, 29], "tmp": [0, 26, 29], "conn_name_attr": [0, 2], "fs_default": 0, "conn_typ": [0, 2], "f": [0, 26, 29], "hook_nam": [0, 2], "classmethod": [0, 7], "get_connection_form_widget": 0, "return": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 19, 26, 29, 31, 34], "widget": 0, "add": [0, 5, 9, 10, 22, 26, 29], "form": [0, 9], "get_ui_field_behaviour": [0, 2], "custom": [0, 2], "field": [0, 2, 9], "behaviour": [0, 2], "get_conn": [0, 2], "get_path": 0, "get": [0, 5, 9, 14, 25, 29, 30], "locat": [0, 26], "str": [0, 3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 19, 26, 29], "test_connect": [0, 2], "test": [0, 2, 22, 26, 30], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "dev0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "experiment": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "featur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "filesystem": [1, 4, 9], "package_index": [1, 4], "subprocess": [1, 4, 5], "addit": [2, 9, 19, 26, 29], "packag": [2, 9, 19, 21, 23, 29], "index": [2, 9, 19, 22, 29], "python": [2, 4, 8, 13, 19, 22, 23, 24, 25, 29, 34], "packageindexhook": [2, 22], "pi_conn_id": 2, "us": [2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 21, 23, 25, 26, 27, 29, 30, 31, 32, 34], "package_index_default": 2, "static": [2, 29], "get_connection_url": 2, "url": [2, 9, 19, 29], "embed": [2, 23], "credenti": 2, "subprocessresult": 3, "working_directori": 3, "cwd": [3, 5, 26], "none": [3, 5, 6, 7, 9, 11, 12, 14, 15, 16, 19, 25, 27, 29], "context": [3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 26], "manag": [3, 25], "handl": [3, 12, 15, 16, 29], "temporari": [3, 5, 11, 25, 26, 29], "work": [3, 5, 9, 26], "directori": [3, 5, 11, 19, 25, 26, 29], "given": [3, 9, 27], "otherwis": [3, 5, 23, 27, 29, 31], "creat": [3, 5, 7, 9, 12, 15, 16, 19, 21, 25, 26, 29], "subprocesshook": [3, 22], "run": [3, 5, 6, 9, 10, 12, 16, 17, 25, 27, 29, 32], "process": [3, 5, 9, 11, 26], "run_command": 3, "command": [3, 5, 11, 29, 31], "env": [3, 5, 11, 26, 29], "output_encod": [3, 5, 11], "utf": [3, 5, 11], "8": [3, 5, 11, 22, 24], "execut": [3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 22, 27, 29, 34], "If": [3, 5, 6, 9, 10, 11, 12, 17, 19, 25, 26, 27, 29], "which": [3, 5, 6, 9, 10, 11, 12, 15, 23, 26, 29, 30], "clean": [3, 5, 9, 29], "afterward": 3, "suppli": 3, "o": [3, 9, 25, 29], "environ": [3, 5, 9, 11, 19, 23], "pass": [3, 5, 6, 9, 10, 12, 15, 17, 22, 26], "paramet": [3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 21, 22, 26, 27, 29], "list": [3, 6, 7, 9, 10, 14, 19, 22, 23, 26, 29], "dict": [3, 5, 7, 9, 12, 14, 15, 19], "option": [3, 9, 10, 17, 19, 23], "contain": [3, 5, 9, 23, 25, 26, 29], "variabl": [3, 5, 9, 11, 19, 23, 26, 29], "made": [3, 9, 14, 25, 29], "avail": [3, 9, 14, 19, 23, 25, 29], "shell": [3, 5, 26], "omit": 3, "note": [3, 9, 29], "case": [3, 12, 26, 29, 30], "you": [3, 5, 9, 10, 17, 23, 24, 25, 26, 29, 30], "sentri": 3, "configur": [3, 9, 29], "origin": [3, 25], "from": [3, 5, 7, 9, 10, 12, 15, 16, 17, 19, 21, 22, 29, 30], "also": [3, 5, 10, 17, 22, 25, 26, 27, 29], "subprocess_": 3, "prefix": [3, 5], "see": [3, 9, 19, 22, 23, 24, 29], "http": [3, 25, 26, 29], "apach": [3, 21, 23, 25, 26, 29], "org": [3, 25, 26], "doc": [3, 22], "stabl": 3, "administr": 3, "deploy": 3, "log": [3, 9, 29], "monitor": 3, "error": [3, 11, 26], "html": 3, "detail": [3, 22, 25], "encod": [3, 5, 11], "decod": 3, "stdout": [3, 5], "default": [3, 5, 7, 9, 11, 23, 26, 29, 30], "namedtupl": 3, "exit_cod": 3, "output": [3, 5, 9, 11, 29], "last": [3, 5], "line": [3, 5], "stderr": 3, "send_sigterm": 3, "send": 3, "sigterm": 3, "signal": 3, "self": [3, 9, 25], "sub_process": 3, "one": [3, 6, 9, 10, 12, 25, 27, 29], "exist": [3, 5, 24], "hook": [4, 5, 7, 21, 22, 29], "oper": [4, 12, 15, 16, 21, 22, 23, 26, 27, 29, 32, 34], "bash": [4, 8, 13, 22, 25], "datetim": [4, 8, 12, 15, 16, 27, 29, 32], "generic_transf": [4, 8], "weekdai": [4, 8, 13, 26, 27, 32], "sensor": [4, 21, 34], "date_tim": [4, 13], "time": [4, 6, 11, 13, 16, 22, 29, 32], "time_delta": [4, 13], "util": [4, 5, 6, 10, 17, 22], "python_virtualenv": [4, 18], "version_refer": [4, 18], "__version__": 4, "bashoper": [5, 22, 28], "bash_command": [5, 11, 26, 31], "append_env": 5, "fals": [5, 6, 9, 10, 12, 15, 16, 17, 19, 29], "skip_exit_cod": 5, "skip_on_exit_cod": [5, 9, 26], "99": [5, 26], "output_processor": [5, 26], "lambda": [5, 26, 29], "result": [5, 9, 27], "model": [5, 7, 9, 30], "baseoper": [5, 7, 9], "script": [5, 11, 19, 22, 25, 26], "set": [5, 9, 10, 11, 12, 15, 17, 23, 27, 29], "For": [5, 6, 9, 10, 11, 14, 15, 16, 17, 22, 23, 24, 25, 26, 29], "more": [5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 23, 27, 29], "inform": [5, 6, 9, 10, 11, 14, 15, 16, 17, 19, 22, 23, 29, 30], "how": [5, 6, 9, 10, 11, 14, 15, 16, 17, 22, 25, 26], "take": [5, 6, 9, 10, 11, 12, 14, 15, 16, 17, 26, 27, 29], "look": [5, 6, 9, 10, 11, 14, 15, 16, 17, 23], "guid": [5, 6, 9, 10, 11, 14, 15, 16, 17, 22, 25], "do_xcom_push": 5, "true": [5, 6, 9, 10, 11, 12, 14, 15, 17, 19, 27, 29, 31, 32, 34], "written": 5, "push": [5, 9, 26, 29], "xcom": [5, 9, 26, 29], "when": [5, 6, 7, 9, 12, 14, 15, 16, 17, 19, 26, 27, 29, 30, 31], "complet": [5, 11, 16, 29], "argnotset": 5, "The": [5, 7, 9, 11, 12, 15, 19, 23, 24, 25, 26, 27, 29, 30, 31, 34], "refer": [5, 7, 9, 11, 12, 14, 15, 16, 22], "must": [5, 9, 11, 23, 26], "sh": [5, 11, 26], "templat": [5, 7, 9, 11, 12, 14, 15, 16, 19, 22], "defin": [5, 9, 11, 26, 29], "new": [5, 9, 11, 29, 30], "ar": [5, 6, 9, 11, 12, 14, 23, 24, 25, 26, 27, 29, 30], "instead": [5, 9, 11, 12, 21, 26], "inherit": [5, 9, 11], "current": [5, 6, 9, 10, 11, 29], "behavior": [5, 9, 11, 26], "bool": [5, 6, 9, 10, 12, 15, 16, 17, 19], "param": [5, 7], "doe": [5, 12, 27, 29], "user": [5, 9, 14, 25, 26], "either": [5, 9, 29], "updat": [5, 22], "append": 5, "int": [5, 9, 11, 16], "task": [5, 6, 9, 10, 11, 12, 15, 16, 17, 26, 29, 34], "exit": [5, 9, 11, 26, 31], "code": [5, 9, 11, 25, 26, 29], "leav": [5, 9], "skip": [5, 9, 29], "state": [5, 9, 26], "ani": [5, 9, 10, 11, 12, 14, 15, 25, 26, 27, 29, 31], "non": [5, 9, 11, 26, 27], "zero": [5, 9, 11, 26], "treat": [5, 9, 11], "failur": [5, 9, 26], "To": [5, 10, 17, 25, 26, 29], "dag": [5, 9, 12, 16, 17, 26, 27, 29], "folder": [5, 9, 22, 25, 26, 29], "might": [5, 27, 29, 30], "dag_run": [5, 26], "write": [5, 26], "access": [5, 14, 26, 29], "render": [5, 7, 9, 12, 15, 16, 19, 26], "jinja": [5, 7, 9, 12, 15, 16, 19, 29], "callabl": [5, 9, 14, 26, 29, 34], "function": [5, 14, 26, 29], "further": [5, 29], "evalu": [5, 9, 29], "In": [5, 9, 21, 26, 27, 29], "gener": [5, 26, 29], "success": 5, "anoth": [5, 7, 26], "throw": 5, "except": [5, 11, 26, 27, 30], "airflowskipexcept": [5, 26], "can": [5, 9, 10, 12, 17, 23, 24, 25, 26, 27, 29, 30], "all": [5, 9, 12, 23, 24, 26, 29, 30], "rais": [5, 9, 11, 26, 27], "airflowexcept": [5, 26], "recogn": 5, "unless": 5, "whole": 5, "issu": [5, 29], "aris": 5, "sub": [5, 9], "easiest": 5, "wai": [5, 29], "address": 5, "e": [5, 12, 14, 29], "python3": 5, "py": [5, 26, 27, 29, 31, 32, 34], "next_execution_d": [5, 12], "simpli": 5, "without": [5, 9, 12, 15, 16, 29], "space": [5, 26, 29], "after": [5, 9, 12, 14, 15, 16, 26, 27, 29, 32], "argument": [5, 9, 12, 14, 15, 26, 27], "my_script": 5, "becaus": [5, 12, 16, 26, 27, 29], "tri": [5, 26], "load": [5, 7, 9, 19, 26], "end": [5, 12, 15, 16, 26, 32], "your": [5, 9, 14, 19, 26, 27, 29], "do": [5, 10, 12, 25, 26], "put": [5, 14], "blank": 5, "And": 5, "": [5, 6, 9, 10, 14, 16, 17, 25, 26, 27, 29], "template_searchpath": [5, 26], "care": [5, 26], "taken": [5, 26], "input": [5, 14, 26], "perform": [5, 26, 27, 29], "escap": [5, 26], "sanit": [5, 26], "appli": [5, 9, 14, 26], "mostli": [5, 26], "conf": [5, 9, 16, 19, 26], "submit": [5, 26], "via": [5, 24, 25, 26, 29], "web": [5, 26], "ui": [5, 26], "most": [5, 25, 26, 29], "risk": [5, 26], "bash_task": [5, 26], "task_id": [5, 6, 9, 10, 12, 17, 26, 27, 29, 31, 32, 34], "echo": [5, 25, 26], "here": [5, 26], "messag": [5, 26], "els": [5, 26], "doubl": [5, 26], "quot": [5, 26], "insid": [5, 9, 22, 26, 29], "below": [5, 6, 9, 23, 24, 25, 26, 29], "version": [5, 9, 22, 24, 25, 29, 30, 32], "2": [5, 9, 12, 21, 22, 23, 24, 29, 32], "10": [5, 12, 22, 27, 29], "template_field": [5, 7, 9, 11, 12, 14], "sequenc": [5, 7, 9, 11, 12, 14], "template_fields_render": [5, 7, 9], "template_ext": [5, 7, 9], "ui_color": [5, 7, 9], "f0ede4": 5, "subprocess_hook": 5, "get_env": 5, "build": [5, 25, 26], "expos": [5, 7], "deriv": [5, 7, 9, 12, 14, 15, 16, 17], "same": [5, 7, 9, 12, 15, 16, 29], "dictionari": [5, 6, 7, 9, 10, 12, 14, 15, 16, 29], "get_template_context": [5, 7, 9, 12, 15, 16], "on_kil": 5, "overrid": [5, 12, 14, 15, 16, 17, 29], "method": [5, 6, 7, 9, 10, 21], "up": [5, 9, 12, 15, 16, 29], "instanc": 5, "kill": 5, "thread": 5, "multiprocess": 5, "within": [5, 26, 29], "need": [5, 7, 9, 12, 26, 29], "ghost": 5, "behind": 5, "branchdatetimeoper": [6, 21, 28], "follow_task_ids_if_tru": [6, 10, 27], "follow_task_ids_if_fals": [6, 10, 27], "target_low": [6, 27], "target_upp": [6, 27], "use_task_logical_d": [6, 10, 17, 21, 27], "branch": [6, 9, 10, 27, 29, 30], "basebranchoper": [6, 10], "two": [6, 10, 27], "depend": [6, 9, 10, 22, 27, 29, 30], "now": [6, 32], "fall": [6, 27], "abov": [6, 25, 27], "iter": [6, 9, 10, 17], "task_group_id": [6, 9, 10], "follow": [6, 9, 10, 23, 25, 27, 29, 30], "target": [6, 7, 9, 27], "lower": [6, 26], "bound": 6, "upper": 6, "logic": [6, 10, 17, 26], "date": [6, 10, 17], "compar": [6, 10, 17], "backfil": [6, 10, 12, 17], "system": [6, 9, 10, 17, 19, 29], "choose_branch": [6, 10], "abstract": [6, 10], "choos": [6, 10, 25], "subclass": [6, 10], "implement": [6, 10], "whatev": [6, 10, 29], "necessari": [6, 10], "target_times_as_d": 6, "base_d": 6, "ensur": [6, 26, 29], "combin": [6, 26, 27], "them": [6, 29], "generictransf": [7, 22], "sql": [7, 9, 24, 29], "destination_t": 7, "source_conn_id": 7, "source_hook_param": 7, "destination_conn_id": 7, "destination_hook_param": 7, "preoper": 7, "insert_arg": 7, "move": [7, 9, 22, 26, 27], "data": [7, 9, 16, 26, 27, 29, 34], "assum": [7, 9, 29], "thei": 7, "both": [7, 9, 26, 27, 29], "requir": [7, 9, 12, 15, 19, 22, 29, 30, 32], "respect": [7, 9, 29], "get_record": 7, "destin": 7, "insert_row": 7, "meant": [7, 9, 29], "small": 7, "ish": 7, "dataset": 7, "fit": [7, 26], "memori": 7, "queri": [7, 29], "against": 7, "databas": 7, "tabl": 7, "statement": 7, "prior": 7, "hql": [7, 9], "b0f07c": 7, "get_hook": 7, "conn_id": 7, "hook_param": 7, "pythonoper": [9, 28], "python_cal": [9, 14, 29, 34], "op_arg": [9, 14, 29], "op_kwarg": [9, 14, 29], "templates_dict": [9, 14, 29], "templates_ext": [9, 29], "show_return_value_in_log": 9, "keyword": [9, 12, 14, 15, 29], "correspond": 9, "exactli": 9, "what": 9, "header": 9, "directli": [9, 12, 15, 16, 26], "would": [9, 10, 19, 29], "like": [9, 22, 26, 29], "valu": [9, 10, 14, 17, 26, 27, 29, 31, 34], "ti": [9, 29], "next_d": 9, "With": [9, 29], "explicit": 9, "def": [9, 26, 29, 34], "my_python_cal": 9, "A": [9, 12, 14, 16, 26], "object": [9, 14, 19, 26, 27, 29], "collect": 9, "posit": [9, 14], "unpack": [9, 14, 19], "call": [9, 14, 26, 29], "map": [9, 11, 12, 14, 15], "where": [9, 14, 19, 26, 29, 30], "engin": [9, 14], "sometim": [9, 14], "between": [9, 14, 27], "__init__": [9, 14], "place": [9, 14, 26], "ha": [9, 12, 14, 21, 26, 27, 29], "been": [9, 14, 21], "extens": [9, 26], "resolv": 9, "while": [9, 12, 15, 16, 29], "whether": [9, 19, 27, 29], "show": 9, "return_valu": 9, "It": [9, 12, 25, 26, 27, 29, 32], "prevent": [9, 29], "huge": 9, "transmiss": 9, "larg": 9, "amount": 9, "taskapi": 9, "blue": 9, "ffefeb": 9, "shallow_copy_attr": 9, "determine_kwarg": 9, "execute_cal": 9, "branchpythonoper": [9, 29], "branchmixin": 9, "workflow": [9, 26, 27], "expect": 9, "singl": [9, 10, 17], "point": [9, 26, 29], "group": [9, 29], "downstream": [9, 10, 26, 29], "other": [9, 11, 26, 29, 31], "mark": [9, 22], "so": [9, 23, 26, 27, 29, 30], "t": [9, 17, 26, 29], "forward": 9, "propag": 9, "fill": [9, 27], "infer": 9, "shortcircuitoper": [9, 28], "ignore_downstream_trigger_rul": [9, 29], "skipmixin": 9, "pipelin": [9, 26, 29], "continu": [9, 29], "falsi": [9, 29], "short": [9, 29], "circuit": [9, 29], "mode": [9, 16, 27, 29, 34], "truthi": [9, 29], "proce": 9, "normal": [9, 29], "ignor": [9, 29], "trigger_rul": [9, 29], "consid": [9, 26, 29], "howev": [9, 26], "direct": [9, 29], "subsequ": [9, 29], "were": [9, 23, 29], "purpos": [9, 29], "perhap": [9, 29], "pythonvirtualenvoper": [9, 21, 22, 28], "python_vers": 9, "serial": [9, 29], "system_site_packag": [9, 19, 29], "pip_install_opt": [9, 19, 29], "string_arg": 9, "expect_airflow": [9, 29], "index_url": [9, 19, 29], "venv_cache_path": [9, 29], "env_var": 9, "inherit_env": 9, "use_dil": 9, "use_airflow_context": [9, 29], "_basepythonvirtualenvoper": 9, "virtualenv": [9, 19, 21, 22, 29], "destroi": 9, "automat": [9, 23, 29], "certain": [9, 27], "caveat": 9, "part": [9, 29], "import": [9, 10, 17, 22, 25, 26, 29], "happen": [9, 27, 29], "outsid": 9, "scope": [9, 30], "mai": [9, 26], "referenc": 9, "global": [9, 29], "virtualenv_string_arg": 9, "popul": 9, "stuff": [9, 29], "through": [9, 29], "differ": [9, 16, 25, 26, 27, 29], "major": [9, 12, 30], "than": [9, 27, 29], "cannot": 9, "macro": 9, "being": 9, "plugin": 9, "though": 9, "virtual": [9, 19, 23], "string": [9, 23, 26], "pip": [9, 19, 23, 24, 25, 29], "7": [9, 23, 29], "accept": 9, "_serializertypedef": 9, "arg": 9, "pickl": [9, 29], "includ": [9, 19, 22, 24, 30], "librari": [9, 29], "cloudpickl": [9, 29], "complex": 9, "dill": [9, 29], "document": [9, 19, 22, 23], "instal": [9, 19, 23, 29, 30], "h": [9, 19], "present": 9, "var": [9, 29], "runtim": [9, 29], "split": [9, 22], "newlin": 9, "warn": [9, 25], "attempt": [9, 29], "start": [9, 12, 15, 16, 23, 29], "abc": 9, "pathlik": 9, "parent": 9, "cach": 9, "venv": [9, 21, 22, 29], "hash": [9, 29], "wherea": 9, "replac": [9, 12, 16, 19, 29], "checksum": [9, 25], "delet": [9, 29], "temp": [9, 29], "everi": [9, 29], "deprec": 9, "get_current_context": [9, 29], "txt": [9, 19, 29], "branchpythonvirtualenvoper": [9, 28], "externalpythonoper": [9, 28], "expect_pendulum": 9, "re": [9, 27, 29], "reus": 9, "overhead": 9, "extern": [9, 29], "fail": [9, 11, 26], "full": [9, 10, 17], "specif": [9, 29, 32], "binari": [9, 19, 25, 29], "bin": [9, 25, 29], "absolut": 9, "usual": [9, 11, 29], "x": 9, "branchexternalpythonoper": [9, 28], "extend": 9, "separ": [9, 26, 30], "similarli": 9, "retriev": 9, "alter": 9, "signatur": [9, 25], "simplest": 9, "old": 9, "style": [9, 29], "my_task": 9, "onli": [9, 11, 27, 29, 30], "wa": [9, 23, 27], "branchdayofweekoper": [10, 21, 22, 28], "week_dai": [10, 17, 27, 32], "dai": [10, 12, 15, 17, 26, 27, 32], "emptyoper": [10, 27, 29], "mondai": [10, 17, 27, 32], "other_dai": 10, "monday_check": 10, "enum": [10, 17], "workdai": 10, "weekend": [10, 27], "weekend_check": [10, 17], "saturdai": [10, 17, 26, 27], "sundai": [10, 17, 26, 27], "criteria": 10, "met": 10, "week": [10, 17, 27, 32], "check": [10, 11, 17, 25, 26, 34], "tuesdai": [10, 17], "is_todai": 10, "bashsensor": [11, 33], "retry_exit_cod": 11, "basesensoroper": [11, 12, 14, 15, 16, 17], "yet": 11, "retri": 11, "later": [11, 29], "accord": 11, "timeout": [11, 12, 15, 31, 32, 34], "caus": 11, "never": 11, "out": [11, 22, 29, 30], "poke": [11, 12, 14, 15, 16, 17], "starttriggerarg": [12, 15], "trigger": [12, 15, 16, 29, 32], "trigger_cl": [12, 15], "next_method": [12, 15], "trigger_kwarg": [12, 15], "next_kwarg": [12, 15], "timedelta": [12, 15, 16, 32], "datetimesensor": 12, "target_tim": [12, 15, 32], "wait": [12, 14, 15, 16, 17, 29, 34], "until": [12, 15, 17], "advantag": [12, 26, 29], "idempot": [12, 27], "some": [12, 27, 29], "timesensor": [12, 15, 33], "timedeltasensor": [12, 16, 33], "suit": 12, "11am": 12, "each": [12, 29], "execution_d": 12, "1am": 12, "hour": [12, 32], "unnecessari": 12, "g": [12, 14], "d": [12, 25, 29], "1970": [12, 14], "01": [12, 22], "01t11": 12, "00": [12, 27], "alreadi": [12, 25], "schedul": [12, 27, 29], "23": 12, "daili": 12, "next": [12, 17, 30], "immedi": [12, 15, 16], "we": [12, 30], "wait_for_0100": 12, "tomorrow": 12, "job": [12, 15], "succe": [12, 15, 31], "datetimesensorasync": 12, "start_from_trigg": [12, 15], "end_from_trigg": [12, 15, 16], "occur": [12, 27], "defer": [12, 16], "itself": [12, 16, 30], "avoid": [12, 16], "worker": [12, 15, 16, 29], "slot": [12, 15, 16, 29], "drop": [12, 16, 25, 29], "go": [12, 15, 16], "dure": [12, 15, 29], "dynam": [12, 15], "usag": [12, 15], "start_trigger_arg": [12, 15], "execute_complet": [12, 15, 16], "event": [12, 15, 16, 27], "fire": [12, 15, 16], "pythonsensor": [14, 33], "could": 14, "start_d": 14, "timesensorasync": [15, 33], "free": 15, "delta": [16, 32], "interv": 16, "length": 16, "befor": [16, 26, 27, 29], "succeed": 16, "timedeltasensorasync": [16, 33], "deferr": 16, "Will": 16, "waitsensor": 16, "time_to_wait": 16, "getboolean": 16, "default_deferr": 16, "fallback": 16, "period": [16, 27], "measur": 16, "data_interval_end": 16, "dayofweeksensor": [17, 21, 33], "first": [17, 27], "2018": 17, "12": [17, 25], "22": 17, "fridai": 17, "multipl": [17, 29], "don": 17, "want": [17, 25, 26, 29, 30], "anyth": 17, "prepare_virtualenv": 19, "venv_directori": 19, "python_bin": 19, "requirements_file_path": 19, "write_python_script": 19, "jinja_context": 19, "filenam": 19, "render_template_as_native_obj": 19, "its": [19, 27, 29, 34], "placehold": 19, "dump": 19, "convert": 19, "nativ": 19, "airflow_vers": 20, "airflow_v_2_10_plu": 20, "airflow_v_3_0_plu": 20, "airflow": [21, 23, 25, 26, 27, 29, 30, 31, 32, 34], "provid": [21, 23, 25, 29, 30], "standard": [21, 25, 29], "migrat": 21, "core": [21, 23], "use_task_execution_d": 21, "remov": [21, 22, 25], "pleas": [21, 25, 29], "built": 21, "is_venv_instal": 21, "commit": 22, "chang": [22, 26, 27, 30], "high": 22, "level": [22, 29], "changelog": 22, "latest": [22, 30], "2024": 22, "11": [22, 25], "14": [22, 27], "subject": 22, "2ef8438eec": 22, "44018": 22, "e7194dff6a": 22, "13": 22, "support": [22, 24, 29], "semicolon": 22, "strip": 22, "dbapihook": 22, "prestohook": 22, "trinohook": 22, "41916": 22, "f757b87581": 22, "section": [22, 26], "43889": 22, "084e29e9e2": 22, "43716": 22, "9bbf6f16f7": 22, "09": 22, "9": 22, "43556": 22, "5f9fdf016d": 22, "05": 22, "config": [22, 29], "43674": 22, "286075f059": 22, "04": 22, "uv": [22, 23], "43612": 22, "fe0dd9b8b3": 22, "switch": 22, "43568": 22, "dd7f669e6c": 22, "31": 22, "readi": [22, 34], "releas": [22, 24], "43550": 22, "0c9e159dc4": 22, "fix": [22, 30], "43553": 22, "06088a3abc": 22, "42081": 22, "4d54cda411": 22, "24": 22, "make": [22, 27, 29], "conn": 22, "basesqloper": 22, "42891": 22, "0e112bf0e4": 22, "42783": 22, "2ed06d1e9f": 22, "17": 22, "chore": 22, "43053": 22, "420b24aa79": 22, "42794": 22, "857ca4c06c": 22, "main": [22, 25, 29, 30], "tree": 22, "workspac": 22, "project": 22, "42505": 22, "a5ffbbda17": 22, "42252": 22, "48e39b927a": 22, "02": 22, "revert": 22, "42": 22, "42659": 22, "61d1dbbc7f": 22, "42506": 22, "4c2c4079d6": 22, "21": 22, "42392": 22, "20ea6b7598": 22, "18": 22, "41564": 22, "page": [23, 25], "cfg": 23, "previous": 23, "describ": [23, 25, 29], "tool": 23, "auto": 23, "select": [23, 25, 26, 29], "airflow__standard__venv_install_method": 23, "class": 24, "top": [24, 25], "minimum": 24, "common": [24, 29], "20": 24, "download": [25, 29], "offici": 25, "down": 25, "left": 25, "sdist": 25, "whl": 25, "softwar": 25, "foundat": 25, "asc": 25, "sha512": 25, "those": [25, 27], "link": [25, 29], "pgp": 25, "kei": [25, 29], "essenti": 25, "sha": 25, "gpg": 25, "well": 25, "relev": 25, "distribut": 25, "recommend": [25, 26, 29, 34], "mirror": 25, "pgpk": 25, "ka": 25, "pgpv": 25, "tar": 25, "gz": 25, "sat": 25, "sep": 25, "49": 25, "54": 25, "2021": 25, "bst": 25, "rsa": 25, "cde15c6e4d3a8ec4ecf4ba4b6674e08ad7de406f": 25, "issuer": 25, "kaxilnaik": 25, "good": [25, 30], "kaxil": 25, "naik": 25, "unknown": 25, "aka": 25, "gmail": 25, "com": [25, 29], "certifi": 25, "trust": 25, "There": [25, 26], "indic": 25, "belong": 25, "owner": 25, "primari": 25, "fingerprint": 25, "cde1": 25, "5c6e": 25, "4d3a": 25, "8ec4": 25, "ecf4": 25, "ba4b": 25, "6674": 25, "e08a": 25, "d7de": 25, "406f": 25, "correct": 25, "worri": 25, "about": [25, 29, 30], "certif": 25, "sign": 25, "why": 25, "By": [25, 26], "previou": 25, "step": 25, "know": 25, "valid": 25, "sum": 25, "shasum": 25, "512": 25, "diff": 25, "match": 25, "local": [25, 26, 29], "package_vers": 25, "package_nam": 25, "provider_download_dir": 25, "mktemp": 25, "dep": 25, "dest": 25, "curl": 25, "apache_airflow_providers_standard": 25, "py3": 25, "l": 25, "la": 25, "onc": [25, 29], "instruct": [25, 30], "chapter": 25, "determin": 26, "taskflow": 26, "decor": [26, 29, 34], "over": [26, 27, 29, 34], "classic": [26, 29, 34], "example_dag": [26, 27, 29, 31, 32, 34], "example_bash_decor": 26, "run_after_loop": 26, "run_thi": [26, 29], "example_bash_oper": 26, "parameter": 26, "also_run_thi": 26, "ti_kei": 26, "task_instance_key_str": 26, "also_thi": 26, "format": [26, 29], "also_run_this_again": 26, "also_this_again": 26, "encourag": 26, "approach": [26, 27], "nice": 26, "overal": 26, "paradigm": 26, "Or": 26, "produc": 26, "thu": 26, "desir": 26, "this_will_skip": 26, "hello": 26, "world": 26, "this_skip": 26, "particularli": 26, "manipul": 26, "scenario": 26, "json": 26, "transform": 26, "store": 26, "simplifi": 26, "receiv": [26, 27, 30], "result_processor": 26, "jq": 26, "c": 26, "lastmodifi": 26, "data_interval_start": [26, 29], "ts_zulu": 26, "filter_today_chang": 26, "enabl": 26, "content": [26, 29], "abl": 26, "disk": [26, 29], "rel": 26, "usr": 26, "test_dag": 26, "shown": 26, "tash": 26, "bash_exampl": 26, "t2": [26, 32], "mani": 26, "reason": [26, 30], "proper": 26, "highlight": 26, "compos": 26, "languag": 26, "flexibl": 26, "structur": 26, "possibl": 26, "constructor": 26, "opt": 26, "example_bash_dag": 26, "doesn": 26, "disabl": 26, "ad": [26, 27, 29], "run_command_from_script": 26, "airflow_hom": 26, "run_script": 26, "encount": 26, "try": 26, "home": 26, "batcher": 26, "power": 26, "condit": [26, 29, 34], "etc": 26, "help": [26, 29], "augment": 26, "even": [26, 27, 29], "sleep_in": 26, "sleep": [26, 29], "60": [26, 34], "No": 26, "todai": 26, "logical_d": [26, 27], "strftime": 26, "_get_files_in_cwd": 26, "pathlib": 26, "dir_cont": 26, "glob": 26, "elem": 26, "is_fil": 26, "get_file_stat": 26, "shlex": 26, "join": 26, "cmd": 26, "stat": 26, "numer": 26, "pre": [26, 29], "rang": [27, 29], "machin": 27, "clock": 27, "moment": 27, "second": [27, 29, 32], "situat": 27, "cleanup": [27, 29], "mainten": 27, "realli": 27, "suppos": 27, "back": [27, 29], "actual": 27, "slightli": 27, "determinist": 27, "potenti": 27, "dagrun": [27, 29], "mean": [27, 29], "properli": 27, "decis": 27, "delai": 27, "example_branch_datetime_oper": 27, "empty_task_11": 27, "date_in_rang": 27, "dag1": 27, "empty_task_21": 27, "date_outside_rang": 27, "cond1": 27, "datetime_branch": 27, "pendulum": [27, 29], "2020": 27, "15": 27, "order": 27, "comparison": 27, "done": [27, 29, 30], "span": 27, "empty_task_12": 27, "dag2": 27, "empty_task_22": 27, "cond2": 27, "sinc": [27, 29], "unilater": 27, "much": 27, "friendli": 27, "affect": 27, "suitabl": 27, "empty_task_13": 27, "dag3": 27, "empty_task_23": 27, "cond3": 27, "example_branch_day_of_week_oper": 27, "empty_task_1": 27, "branch_tru": 27, "empty_task_2": 27, "branch_fals": 27, "empty_task_3": 27, "branch_weekend": 27, "empty_task_4": 27, "branch_mid_week": 27, "make_choic": 27, "make_weekend_choic": 27, "pythonbranchoper": 28, "example_python_decor": 29, "print_the_context": 29, "print_context": 29, "print": 29, "pprint": 29, "example_python_oper": 29, "endgroup": 29, "5": 29, "4": 29, "my_sleeping_funct": 29, "random_bas": 29, "sleeping_task": 29, "sleep_for_": 29, "log_the_sql": 29, "log_sql_queri": 29, "sampl": 29, "log_sql": 29, "info": 29, "task_inst": 29, "taskinst": 29, "implicitli": 29, "explicitli": 29, "hint": 29, "analysi": 29, "example_python_context_decor": 29, "example_python_context_oper": 29, "constraint": 29, "addition": 29, "offer": 29, "strong": 29, "focu": 29, "protocol": 29, "wider": 29, "compat": 29, "smoother": 29, "exchang": 29, "still": 29, "effect": 29, "virtualenv_python": 29, "colorama": 29, "callable_virtualenv": 29, "modul": 29, "fore": 29, "red": 29, "text": 29, "green": 29, "background": 29, "dim": 29, "reset_al": 29, "_": 29, "flush": 29, "finish": 29, "virtualenv_task": 29, "unfortun": 29, "due": 29, "incompat": 29, "underli": 29, "sure": 29, "won": 29, "relat": 29, "lazy_object_proxi": 29, "bodi": 29, "cut": 29, "w": 29, "surround": 29, "As": 29, "again": 29, "reli": 29, "somepackag": 29, "archiv": 29, "anotherpackag": 29, "find": 29, "my": 29, "adjust": 29, "privat": 29, "repositori": 29, "secret": 29, "special": 29, "remot": 29, "forc": 29, "per": 29, "suffici": 29, "But": 29, "repeat": 29, "uniqu": 29, "subfold": 29, "variat": 29, "autom": 29, "share": 29, "individu": 29, "kubernet": 29, "pod": 29, "restart": 29, "persist": 29, "volum": 29, "problem": 29, "broken": 29, "influenc": 29, "cache_kei": 29, "vector": 29, "calcul": 29, "modif": 29, "post": 29, "pollut": 29, "maintain": 29, "limit": 29, "bit": 29, "challeng": 29, "involv": 29, "bypass": 29, "extent": 29, "print_the_context_venv": 29, "print_context_venv": 29, "preinstal": 29, "subdirectori": 29, "contrari": 29, "regular": 29, "activ": 29, "mere": 29, "path_to_python_binari": 29, "external_python": 29, "callable_external_python": 29, "sy": 29, "external_python_task": 29, "print_the_context_extern": 29, "some_external_python": 29, "print_context_extern": 29, "example_branch_operator_decor": 29, "choic": 29, "branch_": 29, "random": 29, "example_branch_oper": 29, "hybrid": 29, "branch_virtualenv": 29, "dir": 29, "keep": 29, "faster": 29, "tempfil": 29, "gettempdir": 29, "numpi": 29, "26": 29, "branching_virtualenv": 29, "np": 29, "arang": 29, "6": 29, "venv_": 29, "branch_with_venv": 29, "branching_venv": 29, "branch_external_python": 29, "branching_ext_python": 29, "ext_py_": 29, "branch_with_external_python": 29, "branching_ext_pi": 29, "control": 29, "satisfi": 29, "obtain": 29, "condition_is_tru": 29, "condition_is_fals": 29, "short_circuit": 29, "example_short_circuit_decor": 29, "check_condit": 29, "ds_true": 29, "true_": 29, "ds_fals": 29, "false_": 29, "chain": 29, "example_short_circuit_oper": 29, "cond_tru": 29, "cond_fals": 29, "rule": [29, 30], "especi": 29, "rather": 29, "notic": 29, "task_7": 29, "upstream": [29, 34], "regardless": 29, "statu": 29, "triggerrul": 29, "all_don": 29, "task_1": 29, "task_2": 29, "task_3": 29, "task_4": 29, "task_5": 29, "task_6": 29, "task_": 29, "independ": 30, "vulner": 30, "publish": 30, "upgrad": 30, "found": 30, "pypi": 30, "develop": 30, "alwai": 30, "prepar": 30, "strict": 30, "semver": 30, "polici": 30, "break": 30, "minor": 30, "patchlevel": 30, "bug": 30, "bugfix": 30, "critic": 30, "band": 30, "stakehold": 30, "decid": 30, "cherri": 30, "pick": 30, "older": 30, "mix": 30, "govern": 30, "interest": 30, "parti": 30, "arbitrari": [31, 34], "sens": [31, 32], "example_sensor": [31, 32, 34], "t3": 31, "sensor_succe": 31, "t4": 31, "sensor_fails_after_3_second": 31, "soft_fail": [31, 32, 34], "t0": 32, "wait_some_second": 32, "async": 32, "t0a": 32, "wait_some_seconds_async": 32, "t1": 32, "fire_immedi": 32, "tz": 32, "timezon": 32, "utc": 32, "timeout_after_second_date_in_the_futur": 32, "t1a": 32, "fire_immediately_async": 32, "t2a": 32, "timeout_after_second_date_in_the_future_async": 32, "t11": 32, "week_day_sensor_failing_on_timeout": 32, "example_sensor_decor": 34, "poke_interv": 34, "3600": 34, "reschedul": 34, "wait_for_upstream": 34, "pokereturnvalu": 34, "is_don": 34, "xcom_valu": 34, "t9": 34, "success_sensor_python": 34, "success_cal": 34, "t10": 34, "failure_timeout_sensor_python": 34, "failure_cal": 34}, "objects": {"airflow.providers": [[4, 0, 0, "-", "standard"]], "airflow.providers.standard": [[4, 1, 1, "", "__version__"], [1, 0, 0, "-", "hooks"], [8, 0, 0, "-", "operators"], [13, 0, 0, "-", "sensors"], [18, 0, 0, "-", "utils"]], "airflow.providers.standard.hooks": [[0, 0, 0, "-", "filesystem"], [2, 0, 0, "-", "package_index"], [3, 0, 0, "-", "subprocess"]], "airflow.providers.standard.hooks.filesystem": [[0, 2, 1, "", "FSHook"]], "airflow.providers.standard.hooks.filesystem.FSHook": [[0, 3, 1, "", "conn_name_attr"], [0, 3, 1, "", "conn_type"], [0, 3, 1, "", "default_conn_name"], [0, 4, 1, "", "get_conn"], [0, 4, 1, "", "get_connection_form_widgets"], [0, 4, 1, "", "get_path"], [0, 4, 1, "", "get_ui_field_behaviour"], [0, 3, 1, "", "hook_name"], [0, 4, 1, "", "test_connection"]], "airflow.providers.standard.hooks.package_index": [[2, 2, 1, "", "PackageIndexHook"]], "airflow.providers.standard.hooks.package_index.PackageIndexHook": [[2, 3, 1, "", "conn_name_attr"], [2, 3, 1, "", "conn_type"], [2, 3, 1, "", "default_conn_name"], [2, 4, 1, "", "get_conn"], [2, 4, 1, "", "get_connection_url"], [2, 4, 1, "", "get_ui_field_behaviour"], [2, 3, 1, "", "hook_name"], [2, 4, 1, "", "test_connection"]], "airflow.providers.standard.hooks.subprocess": [[3, 2, 1, "", "SubprocessHook"], [3, 1, 1, "", "SubprocessResult"], [3, 5, 1, "", "working_directory"]], "airflow.providers.standard.hooks.subprocess.SubprocessHook": [[3, 4, 1, "", "run_command"], [3, 4, 1, "", "send_sigterm"]], "airflow.providers.standard.operators": [[5, 0, 0, "-", "bash"], [6, 0, 0, "-", "datetime"], [7, 0, 0, "-", "generic_transfer"], [9, 0, 0, "-", "python"], [10, 0, 0, "-", "weekday"]], "airflow.providers.standard.operators.bash": [[5, 2, 1, "", "BashOperator"]], "airflow.providers.standard.operators.bash.BashOperator": [[5, 4, 1, "", "execute"], [5, 4, 1, "", "get_env"], [5, 4, 1, "", "on_kill"], [5, 4, 1, "", "subprocess_hook"], [5, 3, 1, "", "template_ext"], [5, 3, 1, "", "template_fields"], [5, 3, 1, "", "template_fields_renderers"], [5, 3, 1, "", "ui_color"]], "airflow.providers.standard.operators.datetime": [[6, 2, 1, "", "BranchDateTimeOperator"], [6, 5, 1, "", "target_times_as_dates"]], "airflow.providers.standard.operators.datetime.BranchDateTimeOperator": [[6, 4, 1, "", "choose_branch"]], "airflow.providers.standard.operators.generic_transfer": [[7, 2, 1, "", "GenericTransfer"]], "airflow.providers.standard.operators.generic_transfer.GenericTransfer": [[7, 4, 1, "", "execute"], [7, 4, 1, "", "get_hook"], [7, 3, 1, "", "template_ext"], [7, 3, 1, "", "template_fields"], [7, 3, 1, "", "template_fields_renderers"], [7, 3, 1, "", "ui_color"]], "airflow.providers.standard.operators.python": [[9, 2, 1, "", "BranchExternalPythonOperator"], [9, 2, 1, "", "BranchPythonOperator"], [9, 2, 1, "", "BranchPythonVirtualenvOperator"], [9, 2, 1, "", "ExternalPythonOperator"], [9, 2, 1, "", "PythonOperator"], [9, 2, 1, "", "PythonVirtualenvOperator"], [9, 2, 1, "", "ShortCircuitOperator"], [9, 5, 1, "", "get_current_context"], [9, 1, 1, "", "log"]], "airflow.providers.standard.operators.python.BranchExternalPythonOperator": [[9, 4, 1, "", "execute"]], "airflow.providers.standard.operators.python.BranchPythonOperator": [[9, 4, 1, "", "execute"]], "airflow.providers.standard.operators.python.BranchPythonVirtualenvOperator": [[9, 4, 1, "", "execute"]], "airflow.providers.standard.operators.python.ExternalPythonOperator": [[9, 4, 1, "", "execute_callable"], [9, 3, 1, "", "template_fields"]], "airflow.providers.standard.operators.python.PythonOperator": [[9, 3, 1, "", "BLUE"], [9, 4, 1, "", "determine_kwargs"], [9, 4, 1, "", "execute"], [9, 4, 1, "", "execute_callable"], [9, 3, 1, "", "shallow_copy_attrs"], [9, 3, 1, "", "template_fields"], [9, 3, 1, "", "template_fields_renderers"], [9, 3, 1, "", "ui_color"]], "airflow.providers.standard.operators.python.PythonVirtualenvOperator": [[9, 4, 1, "", "execute_callable"], [9, 3, 1, "", "template_ext"], [9, 3, 1, "", "template_fields"]], "airflow.providers.standard.operators.python.ShortCircuitOperator": [[9, 4, 1, "", "execute"]], "airflow.providers.standard.operators.weekday": [[10, 2, 1, "", "BranchDayOfWeekOperator"]], "airflow.providers.standard.operators.weekday.BranchDayOfWeekOperator": [[10, 4, 1, "", "choose_branch"]], "airflow.providers.standard.sensors": [[11, 0, 0, "-", "bash"], [12, 0, 0, "-", "date_time"], [14, 0, 0, "-", "python"], [15, 0, 0, "-", "time"], [16, 0, 0, "-", "time_delta"], [17, 0, 0, "-", "weekday"]], "airflow.providers.standard.sensors.bash": [[11, 2, 1, "", "BashSensor"]], "airflow.providers.standard.sensors.bash.BashSensor": [[11, 4, 1, "", "poke"], [11, 3, 1, "", "template_fields"]], "airflow.providers.standard.sensors.date_time": [[12, 2, 1, "", "DateTimeSensor"], [12, 2, 1, "", "DateTimeSensorAsync"], [12, 2, 1, "", "StartTriggerArgs"]], "airflow.providers.standard.sensors.date_time.DateTimeSensor": [[12, 4, 1, "", "poke"], [12, 3, 1, "", "template_fields"]], "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync": [[12, 4, 1, "", "execute"], [12, 4, 1, "", "execute_complete"], [12, 3, 1, "", "start_from_trigger"], [12, 3, 1, "", "start_trigger_args"]], "airflow.providers.standard.sensors.date_time.StartTriggerArgs": [[12, 3, 1, "", "next_kwargs"], [12, 3, 1, "", "next_method"], [12, 3, 1, "", "timeout"], [12, 3, 1, "", "trigger_cls"], [12, 3, 1, "", "trigger_kwargs"]], "airflow.providers.standard.sensors.python": [[14, 2, 1, "", "PythonSensor"]], "airflow.providers.standard.sensors.python.PythonSensor": [[14, 4, 1, "", "poke"], [14, 3, 1, "", "template_fields"]], "airflow.providers.standard.sensors.time": [[15, 2, 1, "", "StartTriggerArgs"], [15, 2, 1, "", "TimeSensor"], [15, 2, 1, "", "TimeSensorAsync"]], "airflow.providers.standard.sensors.time.StartTriggerArgs": [[15, 3, 1, "", "next_kwargs"], [15, 3, 1, "", "next_method"], [15, 3, 1, "", "timeout"], [15, 3, 1, "", "trigger_cls"], [15, 3, 1, "", "trigger_kwargs"]], "airflow.providers.standard.sensors.time.TimeSensor": [[15, 4, 1, "", "poke"]], "airflow.providers.standard.sensors.time.TimeSensorAsync": [[15, 4, 1, "", "execute"], [15, 4, 1, "", "execute_complete"], [15, 3, 1, "", "start_from_trigger"], [15, 3, 1, "", "start_trigger_args"]], "airflow.providers.standard.sensors.time_delta": [[16, 2, 1, "", "TimeDeltaSensor"], [16, 2, 1, "", "TimeDeltaSensorAsync"], [16, 2, 1, "", "WaitSensor"]], "airflow.providers.standard.sensors.time_delta.TimeDeltaSensor": [[16, 4, 1, "", "poke"]], "airflow.providers.standard.sensors.time_delta.TimeDeltaSensorAsync": [[16, 4, 1, "", "execute"], [16, 4, 1, "", "execute_complete"]], "airflow.providers.standard.sensors.time_delta.WaitSensor": [[16, 4, 1, "", "execute"]], "airflow.providers.standard.sensors.weekday": [[17, 2, 1, "", "DayOfWeekSensor"]], "airflow.providers.standard.sensors.weekday.DayOfWeekSensor": [[17, 4, 1, "", "poke"]], "airflow.providers.standard.utils": [[19, 0, 0, "-", "python_virtualenv"], [20, 0, 0, "-", "version_references"]], "airflow.providers.standard.utils.python_virtualenv": [[19, 5, 1, "", "prepare_virtualenv"], [19, 5, 1, "", "write_python_script"]], "airflow.providers.standard.utils.version_references": [[20, 1, 1, "", "AIRFLOW_VERSION"], [20, 1, 1, "", "AIRFLOW_V_2_10_PLUS"], [20, 1, 1, "", "AIRFLOW_V_3_0_PLUS"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"]}, "titleterms": {"airflow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24], "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24], "standard": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 28, 33], "hook": [0, 1, 2, 3], "filesystem": 0, "modul": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20], "content": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20], "class": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17], "submodul": [1, 8, 13, 18], "package_index": 2, "subprocess": 3, "function": [3, 6, 9, 19], "attribut": [3, 9], "subpackag": 4, "packag": [4, 22, 24, 25], "oper": [5, 6, 7, 8, 9, 10, 28], "bash": [5, 11, 26], "datetim": 6, "generic_transf": 7, "python": [9, 14, 26], "weekdai": [10, 17], "sensor": [11, 12, 13, 14, 15, 16, 17, 33], "date_tim": 12, "time": [15, 27], "time_delta": 16, "util": [18, 19, 20], "python_virtualenv": 19, "version_refer": 20, "changelog": 21, "0": [21, 22], "1": [21, 22], "break": 21, "chang": 21, "apach": [22, 24], "configur": 23, "refer": 23, "section": 23, "venv_install_method": 23, "instal": [24, 25], "requir": 24, "from": [25, 26], "sourc": 25, "releas": [25, 30], "integr": 25, "verifi": 25, "pypi": 25, "bashoper": 26, "templat": [26, 29], "skip": 26, "output": 26, "processor": 26, "execut": 26, "command": 26, "file": 26, "With": 26, "jinja": 26, "without": 26, "found": 26, "enrich": 26, "branchdatetimeoper": 27, "usag": 27, "current": 27, "logic": 27, "date": 27, "branchdayofweekoper": 27, "pythonoper": 29, "pass": 29, "argument": 29, "context": 29, "pythonvirtualenvoper": 29, "virtual": 29, "environ": 29, "setup": 29, "option": 29, "cach": 29, "reus": 29, "externalpythonoper": 29, "pythonbranchoper": 29, "branchpythonvirtualenvoper": 29, "branchexternalpythonoper": 29, "shortcircuitoper": 29, "secur": 30, "patch": 30, "bashsensor": 31, "timedeltasensor": 32, "timedeltasensorasync": 32, "timesensor": 32, "timesensorasync": 32, "dayofweeksensor": 32, "pythonsensor": 34}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"airflow.providers.standard.hooks.filesystem": [[0, "module-airflow.providers.standard.hooks.filesystem"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [19, "module-contents"], [20, "module-contents"]], "Classes": [[0, "classes"], [2, "classes"], [3, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"]], "airflow.providers.standard.hooks": [[1, "module-airflow.providers.standard.hooks"]], "Submodules": [[1, "submodules"], [8, "submodules"], [13, "submodules"], [18, "submodules"]], "airflow.providers.standard.hooks.package_index": [[2, "module-airflow.providers.standard.hooks.package_index"]], "airflow.providers.standard.hooks.subprocess": [[3, "module-airflow.providers.standard.hooks.subprocess"]], "Functions": [[3, "functions"], [6, "functions"], [9, "functions"], [19, "functions"]], "Attributes": [[3, "attributes"], [9, "attributes"]], "airflow.providers.standard": [[4, "module-airflow.providers.standard"]], "Subpackages": [[4, "subpackages"]], "Package Contents": [[4, "package-contents"]], "airflow.providers.standard.operators.bash": [[5, "module-airflow.providers.standard.operators.bash"]], "airflow.providers.standard.operators.datetime": [[6, "module-airflow.providers.standard.operators.datetime"]], "airflow.providers.standard.operators.generic_transfer": [[7, "module-airflow.providers.standard.operators.generic_transfer"]], "airflow.providers.standard.operators": [[8, "module-airflow.providers.standard.operators"]], "airflow.providers.standard.operators.python": [[9, "module-airflow.providers.standard.operators.python"]], "airflow.providers.standard.operators.weekday": [[10, "module-airflow.providers.standard.operators.weekday"]], "airflow.providers.standard.sensors.bash": [[11, "module-airflow.providers.standard.sensors.bash"]], "airflow.providers.standard.sensors.date_time": [[12, "module-airflow.providers.standard.sensors.date_time"]], "airflow.providers.standard.sensors": [[13, "module-airflow.providers.standard.sensors"]], "airflow.providers.standard.sensors.python": [[14, "module-airflow.providers.standard.sensors.python"]], "airflow.providers.standard.sensors.time": [[15, "module-airflow.providers.standard.sensors.time"]], "airflow.providers.standard.sensors.time_delta": [[16, "module-airflow.providers.standard.sensors.time_delta"]], "airflow.providers.standard.sensors.weekday": [[17, "module-airflow.providers.standard.sensors.weekday"]], "airflow.providers.standard.utils": [[18, "module-airflow.providers.standard.utils"]], "airflow.providers.standard.utils.python_virtualenv": [[19, "module-airflow.providers.standard.utils.python_virtualenv"]], "airflow.providers.standard.utils.version_references": [[20, "module-airflow.providers.standard.utils.version_references"]], "Changelog": [[21, "changelog"]], "0.0.1": [[21, "id1"], [22, "id1"]], "Breaking changes": [[21, "breaking-changes"]], "Package apache-airflow-providers-standard": [[22, "package-apache-airflow-providers-standard"]], "Configuration Reference": [[23, "configuration-reference"]], "Sections:": [[23, "sections"]], "[standard]": [[23, "standard"]], "venv_install_method": [[23, "venv-install-method"]], "apache-airflow-providers-standard": [[24, "apache-airflow-providers-standard"]], "apache-airflow-providers-standard package": [[24, "apache-airflow-providers-standard-package"]], "Provider package": [[24, "provider-package"]], "Installation": [[24, "installation"]], "Requirements": [[24, "requirements"]], "Installing from sources": [[25, "installing-from-sources"]], "Released packages": [[25, "released-packages"]], "Release integrity": [[25, "release-integrity"]], "Verifying PyPI releases": [[25, "verifying-pypi-releases"]], "BashOperator": [[26, "bashoperator"]], "Templating": [[26, "templating"], [29, "templating"], [29, "id2"], [29, "id5"]], "Skipping": [[26, "skipping"]], "Output processor": [[26, "output-processor"]], "Executing commands from files": [[26, "executing-commands-from-files"]], "With Jinja template": [[26, "with-jinja-template"]], "Without Jinja template": [[26, "without-jinja-template"]], "Jinja template not found": [[26, "jinja-template-not-found"]], "Enriching Bash with Python": [[26, "enriching-bash-with-python"]], "BranchDateTimeOperator": [[27, "branchdatetimeoperator"]], "Usage with current time": [[27, "usage-with-current-time"]], "Usage with logical date": [[27, "usage-with-logical-date"]], "BranchDayOfWeekOperator": [[27, "branchdayofweekoperator"]], "Standard Operators": [[28, "standard-operators"]], "PythonOperator": [[29, "pythonoperator"]], "Passing in arguments": [[29, "passing-in-arguments"], [29, "id1"], [29, "id4"]], "Context": [[29, "context"], [29, "id3"], [29, "id6"]], "PythonVirtualenvOperator": [[29, "pythonvirtualenvoperator"]], "Virtual environment setup options": [[29, "virtual-environment-setup-options"]], "Caching and reuse": [[29, "caching-and-reuse"]], "ExternalPythonOperator": [[29, "externalpythonoperator"]], "PythonBranchOperator": [[29, "pythonbranchoperator"]], "Passing in arguments and Templating": [[29, "passing-in-arguments-and-templating"], [29, "id7"], [29, "id8"], [29, "id9"]], "BranchPythonVirtualenvOperator": [[29, "branchpythonvirtualenvoperator"]], "BranchExternalPythonOperator": [[29, "branchexternalpythonoperator"]], "ShortCircuitOperator": [[29, "shortcircuitoperator"]], "Releasing security patches": [[30, "releasing-security-patches"]], "BashSensor": [[31, "bashsensor"]], "TimeDeltaSensor": [[32, "timedeltasensor"]], "TimeDeltaSensorAsync": [[32, "timedeltasensorasync"]], "TimeSensor": [[32, "timesensor"]], "TimeSensorAsync": [[32, "timesensorasync"]], "DayOfWeekSensor": [[32, "dayofweeksensor"]], "Standard Sensors": [[33, "standard-sensors"]], "PythonSensor": [[34, "pythonsensor"]]}, "indexentries": {"fshook (class in airflow.providers.standard.hooks.filesystem)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook"]], "airflow.providers.standard.hooks.filesystem": [[0, "module-airflow.providers.standard.hooks.filesystem"]], "conn_name_attr (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.conn_name_attr"]], "conn_type (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.conn_type"]], "default_conn_name (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.default_conn_name"]], "get_conn() (airflow.providers.standard.hooks.filesystem.fshook method)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.get_conn"]], "get_connection_form_widgets() (airflow.providers.standard.hooks.filesystem.fshook class method)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.get_connection_form_widgets"]], "get_path() (airflow.providers.standard.hooks.filesystem.fshook method)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.get_path"]], "get_ui_field_behaviour() (airflow.providers.standard.hooks.filesystem.fshook class method)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.get_ui_field_behaviour"]], "hook_name (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.hook_name"]], "module": [[0, "module-airflow.providers.standard.hooks.filesystem"], [1, "module-airflow.providers.standard.hooks"], [2, "module-airflow.providers.standard.hooks.package_index"], [3, "module-airflow.providers.standard.hooks.subprocess"], [4, "module-airflow.providers.standard"], [5, "module-airflow.providers.standard.operators.bash"], [6, "module-airflow.providers.standard.operators.datetime"], [7, "module-airflow.providers.standard.operators.generic_transfer"], [8, "module-airflow.providers.standard.operators"], [9, "module-airflow.providers.standard.operators.python"], [10, "module-airflow.providers.standard.operators.weekday"], [11, "module-airflow.providers.standard.sensors.bash"], [12, "module-airflow.providers.standard.sensors.date_time"], [13, "module-airflow.providers.standard.sensors"], [14, "module-airflow.providers.standard.sensors.python"], [15, "module-airflow.providers.standard.sensors.time"], [16, "module-airflow.providers.standard.sensors.time_delta"], [17, "module-airflow.providers.standard.sensors.weekday"], [18, "module-airflow.providers.standard.utils"], [19, "module-airflow.providers.standard.utils.python_virtualenv"], [20, "module-airflow.providers.standard.utils.version_references"]], "test_connection() (airflow.providers.standard.hooks.filesystem.fshook method)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.test_connection"]], "airflow.providers.standard.hooks": [[1, "module-airflow.providers.standard.hooks"]], "packageindexhook (class in airflow.providers.standard.hooks.package_index)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook"]], "airflow.providers.standard.hooks.package_index": [[2, "module-airflow.providers.standard.hooks.package_index"]], "conn_name_attr (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.conn_name_attr"]], "conn_type (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.conn_type"]], "default_conn_name (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.default_conn_name"]], "get_conn() (airflow.providers.standard.hooks.package_index.packageindexhook method)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.get_conn"]], "get_connection_url() (airflow.providers.standard.hooks.package_index.packageindexhook method)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.get_connection_url"]], "get_ui_field_behaviour() (airflow.providers.standard.hooks.package_index.packageindexhook static method)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.get_ui_field_behaviour"]], "hook_name (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.hook_name"]], "test_connection() (airflow.providers.standard.hooks.package_index.packageindexhook method)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.test_connection"]], "subprocesshook (class in airflow.providers.standard.hooks.subprocess)": [[3, "airflow.providers.standard.hooks.subprocess.SubprocessHook"]], "subprocessresult (in module airflow.providers.standard.hooks.subprocess)": [[3, "airflow.providers.standard.hooks.subprocess.SubprocessResult"]], "airflow.providers.standard.hooks.subprocess": [[3, "module-airflow.providers.standard.hooks.subprocess"]], "run_command() (airflow.providers.standard.hooks.subprocess.subprocesshook method)": [[3, "airflow.providers.standard.hooks.subprocess.SubprocessHook.run_command"]], "send_sigterm() (airflow.providers.standard.hooks.subprocess.subprocesshook method)": [[3, "airflow.providers.standard.hooks.subprocess.SubprocessHook.send_sigterm"]], "working_directory() (in module airflow.providers.standard.hooks.subprocess)": [[3, "airflow.providers.standard.hooks.subprocess.working_directory"]], "__version__ (in module airflow.providers.standard)": [[4, "airflow.providers.standard.__version__"]], "airflow.providers.standard": [[4, "module-airflow.providers.standard"]], "bashoperator (class in airflow.providers.standard.operators.bash)": [[5, "airflow.providers.standard.operators.bash.BashOperator"]], "airflow.providers.standard.operators.bash": [[5, "module-airflow.providers.standard.operators.bash"]], "execute() (airflow.providers.standard.operators.bash.bashoperator method)": [[5, "airflow.providers.standard.operators.bash.BashOperator.execute"]], "get_env() (airflow.providers.standard.operators.bash.bashoperator method)": [[5, "airflow.providers.standard.operators.bash.BashOperator.get_env"]], "on_kill() (airflow.providers.standard.operators.bash.bashoperator method)": [[5, "airflow.providers.standard.operators.bash.BashOperator.on_kill"]], "subprocess_hook() (airflow.providers.standard.operators.bash.bashoperator method)": [[5, "airflow.providers.standard.operators.bash.BashOperator.subprocess_hook"]], "template_ext (airflow.providers.standard.operators.bash.bashoperator attribute)": [[5, "airflow.providers.standard.operators.bash.BashOperator.template_ext"]], "template_fields (airflow.providers.standard.operators.bash.bashoperator attribute)": [[5, "airflow.providers.standard.operators.bash.BashOperator.template_fields"]], "template_fields_renderers (airflow.providers.standard.operators.bash.bashoperator attribute)": [[5, "airflow.providers.standard.operators.bash.BashOperator.template_fields_renderers"]], "ui_color (airflow.providers.standard.operators.bash.bashoperator attribute)": [[5, "airflow.providers.standard.operators.bash.BashOperator.ui_color"]], "branchdatetimeoperator (class in airflow.providers.standard.operators.datetime)": [[6, "airflow.providers.standard.operators.datetime.BranchDateTimeOperator"]], "airflow.providers.standard.operators.datetime": [[6, "module-airflow.providers.standard.operators.datetime"]], "choose_branch() (airflow.providers.standard.operators.datetime.branchdatetimeoperator method)": [[6, "airflow.providers.standard.operators.datetime.BranchDateTimeOperator.choose_branch"]], "target_times_as_dates() (in module airflow.providers.standard.operators.datetime)": [[6, "airflow.providers.standard.operators.datetime.target_times_as_dates"]], "generictransfer (class in airflow.providers.standard.operators.generic_transfer)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer"]], "airflow.providers.standard.operators.generic_transfer": [[7, "module-airflow.providers.standard.operators.generic_transfer"]], "execute() (airflow.providers.standard.operators.generic_transfer.generictransfer method)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.execute"]], "get_hook() (airflow.providers.standard.operators.generic_transfer.generictransfer class method)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.get_hook"]], "template_ext (airflow.providers.standard.operators.generic_transfer.generictransfer attribute)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.template_ext"]], "template_fields (airflow.providers.standard.operators.generic_transfer.generictransfer attribute)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.template_fields"]], "template_fields_renderers (airflow.providers.standard.operators.generic_transfer.generictransfer attribute)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.template_fields_renderers"]], "ui_color (airflow.providers.standard.operators.generic_transfer.generictransfer attribute)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.ui_color"]], "airflow.providers.standard.operators": [[8, "module-airflow.providers.standard.operators"]], "blue (airflow.providers.standard.operators.python.pythonoperator attribute)": [[9, "airflow.providers.standard.operators.python.PythonOperator.BLUE"]], "branchexternalpythonoperator (class in airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.BranchExternalPythonOperator"]], "branchpythonoperator (class in airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.BranchPythonOperator"]], "branchpythonvirtualenvoperator (class in airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.BranchPythonVirtualenvOperator"]], "externalpythonoperator (class in airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.ExternalPythonOperator"]], "pythonoperator (class in airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.PythonOperator"]], "pythonvirtualenvoperator (class in airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.PythonVirtualenvOperator"]], "shortcircuitoperator (class in airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.ShortCircuitOperator"]], "airflow.providers.standard.operators.python": [[9, "module-airflow.providers.standard.operators.python"]], "determine_kwargs() (airflow.providers.standard.operators.python.pythonoperator method)": [[9, "airflow.providers.standard.operators.python.PythonOperator.determine_kwargs"]], "execute() (airflow.providers.standard.operators.python.branchexternalpythonoperator method)": [[9, "airflow.providers.standard.operators.python.BranchExternalPythonOperator.execute"]], "execute() (airflow.providers.standard.operators.python.branchpythonoperator method)": [[9, "airflow.providers.standard.operators.python.BranchPythonOperator.execute"]], "execute() (airflow.providers.standard.operators.python.branchpythonvirtualenvoperator method)": [[9, "airflow.providers.standard.operators.python.BranchPythonVirtualenvOperator.execute"]], "execute() (airflow.providers.standard.operators.python.pythonoperator method)": [[9, "airflow.providers.standard.operators.python.PythonOperator.execute"]], "execute() (airflow.providers.standard.operators.python.shortcircuitoperator method)": [[9, "airflow.providers.standard.operators.python.ShortCircuitOperator.execute"]], "execute_callable() (airflow.providers.standard.operators.python.externalpythonoperator method)": [[9, "airflow.providers.standard.operators.python.ExternalPythonOperator.execute_callable"]], "execute_callable() (airflow.providers.standard.operators.python.pythonoperator method)": [[9, "airflow.providers.standard.operators.python.PythonOperator.execute_callable"]], "execute_callable() (airflow.providers.standard.operators.python.pythonvirtualenvoperator method)": [[9, "airflow.providers.standard.operators.python.PythonVirtualenvOperator.execute_callable"]], "get_current_context() (in module airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.get_current_context"]], "log (in module airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.log"]], "shallow_copy_attrs (airflow.providers.standard.operators.python.pythonoperator attribute)": [[9, "airflow.providers.standard.operators.python.PythonOperator.shallow_copy_attrs"]], "template_ext (airflow.providers.standard.operators.python.pythonvirtualenvoperator attribute)": [[9, "airflow.providers.standard.operators.python.PythonVirtualenvOperator.template_ext"]], "template_fields (airflow.providers.standard.operators.python.externalpythonoperator attribute)": [[9, "airflow.providers.standard.operators.python.ExternalPythonOperator.template_fields"]], "template_fields (airflow.providers.standard.operators.python.pythonoperator attribute)": [[9, "airflow.providers.standard.operators.python.PythonOperator.template_fields"]], "template_fields (airflow.providers.standard.operators.python.pythonvirtualenvoperator attribute)": [[9, "airflow.providers.standard.operators.python.PythonVirtualenvOperator.template_fields"]], "template_fields_renderers (airflow.providers.standard.operators.python.pythonoperator attribute)": [[9, "airflow.providers.standard.operators.python.PythonOperator.template_fields_renderers"]], "ui_color (airflow.providers.standard.operators.python.pythonoperator attribute)": [[9, "airflow.providers.standard.operators.python.PythonOperator.ui_color"]], "branchdayofweekoperator (class in airflow.providers.standard.operators.weekday)": [[10, "airflow.providers.standard.operators.weekday.BranchDayOfWeekOperator"]], "airflow.providers.standard.operators.weekday": [[10, "module-airflow.providers.standard.operators.weekday"]], "choose_branch() (airflow.providers.standard.operators.weekday.branchdayofweekoperator method)": [[10, "airflow.providers.standard.operators.weekday.BranchDayOfWeekOperator.choose_branch"]], "bashsensor (class in airflow.providers.standard.sensors.bash)": [[11, "airflow.providers.standard.sensors.bash.BashSensor"]], "airflow.providers.standard.sensors.bash": [[11, "module-airflow.providers.standard.sensors.bash"]], "poke() (airflow.providers.standard.sensors.bash.bashsensor method)": [[11, "airflow.providers.standard.sensors.bash.BashSensor.poke"]], "template_fields (airflow.providers.standard.sensors.bash.bashsensor attribute)": [[11, "airflow.providers.standard.sensors.bash.BashSensor.template_fields"]], "datetimesensor (class in airflow.providers.standard.sensors.date_time)": [[12, "airflow.providers.standard.sensors.date_time.DateTimeSensor"]], "datetimesensorasync (class in airflow.providers.standard.sensors.date_time)": [[12, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync"]], "starttriggerargs (class in airflow.providers.standard.sensors.date_time)": [[12, "airflow.providers.standard.sensors.date_time.StartTriggerArgs"]], "airflow.providers.standard.sensors.date_time": [[12, "module-airflow.providers.standard.sensors.date_time"]], "execute() (airflow.providers.standard.sensors.date_time.datetimesensorasync method)": [[12, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync.execute"]], "execute_complete() (airflow.providers.standard.sensors.date_time.datetimesensorasync method)": [[12, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync.execute_complete"]], "next_kwargs (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[12, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.next_kwargs"]], "next_method (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[12, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.next_method"]], "poke() (airflow.providers.standard.sensors.date_time.datetimesensor method)": [[12, "airflow.providers.standard.sensors.date_time.DateTimeSensor.poke"]], "start_from_trigger (airflow.providers.standard.sensors.date_time.datetimesensorasync attribute)": [[12, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync.start_from_trigger"]], "start_trigger_args (airflow.providers.standard.sensors.date_time.datetimesensorasync attribute)": [[12, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync.start_trigger_args"]], "template_fields (airflow.providers.standard.sensors.date_time.datetimesensor attribute)": [[12, "airflow.providers.standard.sensors.date_time.DateTimeSensor.template_fields"]], "timeout (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[12, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.timeout"]], "trigger_cls (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[12, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.trigger_cls"]], "trigger_kwargs (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[12, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.trigger_kwargs"]], "airflow.providers.standard.sensors": [[13, "module-airflow.providers.standard.sensors"]], "pythonsensor (class in airflow.providers.standard.sensors.python)": [[14, "airflow.providers.standard.sensors.python.PythonSensor"]], "airflow.providers.standard.sensors.python": [[14, "module-airflow.providers.standard.sensors.python"]], "poke() (airflow.providers.standard.sensors.python.pythonsensor method)": [[14, "airflow.providers.standard.sensors.python.PythonSensor.poke"]], "template_fields (airflow.providers.standard.sensors.python.pythonsensor attribute)": [[14, "airflow.providers.standard.sensors.python.PythonSensor.template_fields"]], "starttriggerargs (class in airflow.providers.standard.sensors.time)": [[15, "airflow.providers.standard.sensors.time.StartTriggerArgs"]], "timesensor (class in airflow.providers.standard.sensors.time)": [[15, "airflow.providers.standard.sensors.time.TimeSensor"]], "timesensorasync (class in airflow.providers.standard.sensors.time)": [[15, "airflow.providers.standard.sensors.time.TimeSensorAsync"]], "airflow.providers.standard.sensors.time": [[15, "module-airflow.providers.standard.sensors.time"]], "execute() (airflow.providers.standard.sensors.time.timesensorasync method)": [[15, "airflow.providers.standard.sensors.time.TimeSensorAsync.execute"]], "execute_complete() (airflow.providers.standard.sensors.time.timesensorasync method)": [[15, "airflow.providers.standard.sensors.time.TimeSensorAsync.execute_complete"]], "next_kwargs (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[15, "airflow.providers.standard.sensors.time.StartTriggerArgs.next_kwargs"]], "next_method (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[15, "airflow.providers.standard.sensors.time.StartTriggerArgs.next_method"]], "poke() (airflow.providers.standard.sensors.time.timesensor method)": [[15, "airflow.providers.standard.sensors.time.TimeSensor.poke"]], "start_from_trigger (airflow.providers.standard.sensors.time.timesensorasync attribute)": [[15, "airflow.providers.standard.sensors.time.TimeSensorAsync.start_from_trigger"]], "start_trigger_args (airflow.providers.standard.sensors.time.timesensorasync attribute)": [[15, "airflow.providers.standard.sensors.time.TimeSensorAsync.start_trigger_args"]], "timeout (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[15, "airflow.providers.standard.sensors.time.StartTriggerArgs.timeout"]], "trigger_cls (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[15, "airflow.providers.standard.sensors.time.StartTriggerArgs.trigger_cls"]], "trigger_kwargs (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[15, "airflow.providers.standard.sensors.time.StartTriggerArgs.trigger_kwargs"]], "timedeltasensor (class in airflow.providers.standard.sensors.time_delta)": [[16, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensor"]], "timedeltasensorasync (class in airflow.providers.standard.sensors.time_delta)": [[16, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensorAsync"]], "waitsensor (class in airflow.providers.standard.sensors.time_delta)": [[16, "airflow.providers.standard.sensors.time_delta.WaitSensor"]], "airflow.providers.standard.sensors.time_delta": [[16, "module-airflow.providers.standard.sensors.time_delta"]], "execute() (airflow.providers.standard.sensors.time_delta.timedeltasensorasync method)": [[16, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensorAsync.execute"]], "execute() (airflow.providers.standard.sensors.time_delta.waitsensor method)": [[16, "airflow.providers.standard.sensors.time_delta.WaitSensor.execute"]], "execute_complete() (airflow.providers.standard.sensors.time_delta.timedeltasensorasync method)": [[16, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensorAsync.execute_complete"]], "poke() (airflow.providers.standard.sensors.time_delta.timedeltasensor method)": [[16, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensor.poke"]], "dayofweeksensor (class in airflow.providers.standard.sensors.weekday)": [[17, "airflow.providers.standard.sensors.weekday.DayOfWeekSensor"]], "airflow.providers.standard.sensors.weekday": [[17, "module-airflow.providers.standard.sensors.weekday"]], "poke() (airflow.providers.standard.sensors.weekday.dayofweeksensor method)": [[17, "airflow.providers.standard.sensors.weekday.DayOfWeekSensor.poke"]], "airflow.providers.standard.utils": [[18, "module-airflow.providers.standard.utils"]], "airflow.providers.standard.utils.python_virtualenv": [[19, "module-airflow.providers.standard.utils.python_virtualenv"]], "prepare_virtualenv() (in module airflow.providers.standard.utils.python_virtualenv)": [[19, "airflow.providers.standard.utils.python_virtualenv.prepare_virtualenv"]], "write_python_script() (in module airflow.providers.standard.utils.python_virtualenv)": [[19, "airflow.providers.standard.utils.python_virtualenv.write_python_script"]], "airflow_version (in module airflow.providers.standard.utils.version_references)": [[20, "airflow.providers.standard.utils.version_references.AIRFLOW_VERSION"]], "airflow_v_2_10_plus (in module airflow.providers.standard.utils.version_references)": [[20, "airflow.providers.standard.utils.version_references.AIRFLOW_V_2_10_PLUS"]], "airflow_v_3_0_plus (in module airflow.providers.standard.utils.version_references)": [[20, "airflow.providers.standard.utils.version_references.AIRFLOW_V_3_0_PLUS"]], "airflow.providers.standard.utils.version_references": [[20, "module-airflow.providers.standard.utils.version_references"]]}})