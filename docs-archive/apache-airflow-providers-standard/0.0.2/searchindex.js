Search.setIndex({"docnames": ["_api/airflow/providers/standard/hooks/filesystem/index", "_api/airflow/providers/standard/hooks/index", "_api/airflow/providers/standard/hooks/package_index/index", "_api/airflow/providers/standard/hooks/subprocess/index", "_api/airflow/providers/standard/index", "_api/airflow/providers/standard/operators/bash/index", "_api/airflow/providers/standard/operators/datetime/index", "_api/airflow/providers/standard/operators/generic_transfer/index", "_api/airflow/providers/standard/operators/index", "_api/airflow/providers/standard/operators/python/index", "_api/airflow/providers/standard/operators/trigger_dagrun/index", "_api/airflow/providers/standard/operators/weekday/index", "_api/airflow/providers/standard/sensors/bash/index", "_api/airflow/providers/standard/sensors/date_time/index", "_api/airflow/providers/standard/sensors/filesystem/index", "_api/airflow/providers/standard/sensors/index", "_api/airflow/providers/standard/sensors/python/index", "_api/airflow/providers/standard/sensors/time/index", "_api/airflow/providers/standard/sensors/time_delta/index", "_api/airflow/providers/standard/sensors/weekday/index", "_api/airflow/providers/standard/utils/index", "_api/airflow/providers/standard/utils/python_virtualenv/index", "_api/airflow/providers/standard/utils/version_references/index", "changelog", "commits", "configurations-ref", "index", "installing-providers-from-sources", "operators/bash", "operators/datetime", "operators/index", "operators/python", "security", "sensors/bash", "sensors/datetime", "sensors/file", "sensors/index", "sensors/python"], "filenames": ["_api/airflow/providers/standard/hooks/filesystem/index.rst", "_api/airflow/providers/standard/hooks/index.rst", "_api/airflow/providers/standard/hooks/package_index/index.rst", "_api/airflow/providers/standard/hooks/subprocess/index.rst", "_api/airflow/providers/standard/index.rst", "_api/airflow/providers/standard/operators/bash/index.rst", "_api/airflow/providers/standard/operators/datetime/index.rst", "_api/airflow/providers/standard/operators/generic_transfer/index.rst", "_api/airflow/providers/standard/operators/index.rst", "_api/airflow/providers/standard/operators/python/index.rst", "_api/airflow/providers/standard/operators/trigger_dagrun/index.rst", "_api/airflow/providers/standard/operators/weekday/index.rst", "_api/airflow/providers/standard/sensors/bash/index.rst", "_api/airflow/providers/standard/sensors/date_time/index.rst", "_api/airflow/providers/standard/sensors/filesystem/index.rst", "_api/airflow/providers/standard/sensors/index.rst", "_api/airflow/providers/standard/sensors/python/index.rst", "_api/airflow/providers/standard/sensors/time/index.rst", "_api/airflow/providers/standard/sensors/time_delta/index.rst", "_api/airflow/providers/standard/sensors/weekday/index.rst", "_api/airflow/providers/standard/utils/index.rst", "_api/airflow/providers/standard/utils/python_virtualenv/index.rst", "_api/airflow/providers/standard/utils/version_references/index.rst", "changelog.rst", "commits.rst", "configurations-ref.rst", "index.rst", "installing-providers-from-sources.rst", "operators/bash.rst", "operators/datetime.rst", "operators/index.rst", "operators/python.rst", "security.rst", "sensors/bash.rst", "sensors/datetime.rst", "sensors/file.rst", "sensors/index.rst", "sensors/python.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.hooks.filesystem</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.hooks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.hooks.package_index</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.hooks.subprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.bash</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.datetime</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.generic_transfer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.python</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.trigger_dagrun</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.weekday</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.bash</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.date_time</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.filesystem</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.python</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.time</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.time_delta</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.weekday</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.utils.python_virtualenv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.utils.version_references</span></code>", "Changelog", "Package apache-airflow-providers-standard", "Configuration Reference", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apache-airflow-providers-standard</span></code>", "Installing from sources", "BashOperator", "BranchDateTimeOperator", "Standard Operators", "PythonOperator", "Releasing security patches", "BashSensor", "TimeDeltaSensor", "FileSensor", "Standard Sensors", "PythonSensor"], "terms": {"fshook": [0, 24], "fs_conn_id": [0, 14, 35], "default_conn_nam": [0, 2], "kwarg": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 28, 31], "sourc": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 28, 29, 31, 33, 34, 35, 37], "base": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 29, 31], "basehook": [0, 2, 3, 7], "allow": [0, 9, 10, 24, 28, 29, 31], "interact": 0, "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "file": [0, 5, 9, 14, 21, 24, 25, 27, 31, 35], "server": [0, 27], "connect": [0, 2, 7, 14, 31, 35], "should": [0, 5, 6, 9, 11, 25, 27, 28, 31, 32, 33], "have": [0, 3, 5, 9, 13, 28, 31, 32, 35], "name": [0, 5, 9, 10, 11, 14, 19, 21, 28], "path": [0, 9, 14, 21, 25, 28, 29, 31], "specifi": [0, 2, 5, 9, 10, 13, 17, 18, 19, 28, 31, 34], "under": [0, 28, 31], "extra": [0, 7, 31], "exampl": [0, 5, 9, 11, 13, 19, 25, 27, 28, 29, 31], "id": [0, 7, 10, 14, 24, 27, 35], "fs_test": 0, "type": [0, 3, 5, 7, 9, 10, 21, 25, 28, 31], "host": 0, "schema": 0, "login": 0, "password": 0, "port": 0, "empti": [0, 11, 28, 31], "tmp": [0, 28, 31, 35], "conn_name_attr": [0, 2], "fs_default": [0, 14, 35], "conn_typ": [0, 2], "f": [0, 28, 31], "hook_nam": [0, 2], "classmethod": [0, 7], "get_connection_form_widget": 0, "return": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 28, 31, 33, 37], "widget": 0, "add": [0, 5, 9, 11, 24, 28, 31], "form": [0, 9], "get_ui_field_behaviour": [0, 2], "custom": [0, 2], "field": [0, 2, 9], "behaviour": [0, 2], "get_conn": [0, 2], "get_path": 0, "get": [0, 5, 9, 16, 27, 31, 32], "locat": [0, 28], "str": [0, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 19, 21, 28, 31], "test_connect": [0, 2], "test": [0, 2, 24, 28, 32], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "dev0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "experiment": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "featur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "filesystem": [1, 4, 9, 15, 23, 24, 35], "package_index": [1, 4], "subprocess": [1, 4, 5], "addit": [2, 9, 21, 28, 31], "packag": [2, 9, 21, 23, 25, 31], "index": [2, 9, 21, 24, 31], "python": [2, 4, 8, 15, 21, 24, 25, 26, 27, 31, 37], "packageindexhook": [2, 24], "pi_conn_id": 2, "us": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 37], "package_index_default": 2, "static": [2, 31], "get_connection_url": 2, "url": [2, 9, 21, 31], "embed": [2, 25], "credenti": 2, "subprocessresult": 3, "working_directori": 3, "cwd": [3, 5, 28], "none": [3, 5, 6, 7, 9, 10, 12, 13, 14, 16, 17, 18, 21, 27, 29, 31], "context": [3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 28], "manag": [3, 27], "handl": [3, 13, 17, 18, 31], "temporari": [3, 5, 12, 27, 28, 31], "work": [3, 5, 9, 28], "directori": [3, 5, 12, 14, 21, 27, 28, 31], "given": [3, 9, 14, 29], "otherwis": [3, 5, 25, 29, 31, 33], "creat": [3, 5, 7, 9, 10, 13, 14, 17, 18, 21, 23, 27, 28, 31], "subprocesshook": [3, 24], "run": [3, 5, 6, 9, 10, 11, 13, 18, 19, 27, 29, 31, 34], "process": [3, 5, 9, 12, 28], "run_command": 3, "command": [3, 5, 12, 31, 33], "env": [3, 5, 12, 28, 31], "output_encod": [3, 5, 12], "utf": [3, 5, 12], "8": [3, 5, 12, 24, 26], "execut": [3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 24, 29, 31, 37], "If": [3, 5, 6, 9, 10, 11, 12, 13, 14, 19, 21, 27, 28, 29, 31], "which": [3, 5, 6, 9, 11, 12, 13, 17, 25, 28, 31, 32], "clean": [3, 5, 9, 31], "afterward": 3, "suppli": 3, "o": [3, 9, 27, 31], "environ": [3, 5, 9, 12, 21, 25], "pass": [3, 5, 6, 9, 11, 13, 14, 17, 19, 24, 28, 35], "paramet": [3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 23, 24, 28, 29, 31], "list": [3, 6, 7, 9, 10, 11, 16, 21, 24, 25, 28, 31], "dict": [3, 5, 7, 9, 10, 13, 14, 16, 17, 21], "option": [3, 9, 10, 11, 19, 21, 25], "contain": [3, 5, 9, 25, 27, 28, 31], "variabl": [3, 5, 9, 12, 21, 25, 28, 31], "made": [3, 9, 16, 27, 31], "avail": [3, 9, 16, 21, 25, 27, 31], "shell": [3, 5, 28], "omit": 3, "note": [3, 9, 10, 31], "case": [3, 13, 28, 31, 32], "you": [3, 5, 9, 11, 19, 25, 26, 27, 28, 31, 32, 35], "sentri": 3, "configur": [3, 9, 10, 31], "origin": [3, 27], "from": [3, 5, 7, 9, 11, 13, 14, 17, 18, 19, 21, 23, 24, 31, 32], "also": [3, 5, 11, 19, 24, 27, 28, 29, 31, 35], "subprocess_": 3, "prefix": [3, 5], "see": [3, 9, 21, 24, 25, 26, 31], "http": [3, 27, 28, 31], "apach": [3, 23, 25, 27, 28, 31], "org": [3, 27, 28], "doc": [3, 24], "stabl": 3, "administr": 3, "deploy": 3, "log": [3, 9, 31], "monitor": 3, "error": [3, 12, 28], "html": 3, "detail": [3, 24, 27], "encod": [3, 5, 12], "decod": 3, "stdout": [3, 5], "default": [3, 5, 7, 9, 10, 12, 14, 25, 28, 31, 32, 35], "namedtupl": 3, "exit_cod": 3, "output": [3, 5, 9, 12, 31], "last": [3, 5], "line": [3, 5], "stderr": 3, "send_sigterm": 3, "send": 3, "sigterm": 3, "signal": 3, "self": [3, 9, 10, 27], "sub_process": 3, "one": [3, 6, 9, 11, 13, 27, 29, 31], "exist": [3, 5, 10, 14, 26], "hook": [4, 5, 7, 23, 24, 31], "oper": [4, 13, 14, 17, 18, 23, 24, 25, 28, 29, 31, 34, 37], "bash": [4, 8, 15, 24, 27], "datetim": [4, 8, 10, 13, 17, 18, 29, 31, 34], "generic_transf": [4, 8], "trigger_dagrun": [4, 8], "weekdai": [4, 8, 15, 28, 29, 34], "sensor": [4, 23, 24, 35, 37], "date_tim": [4, 15], "time": [4, 6, 12, 15, 18, 24, 31, 34], "time_delta": [4, 15], "util": [4, 5, 6, 10, 11, 19, 24], "python_virtualenv": [4, 20], "version_refer": [4, 20], "__version__": 4, "bashoper": [5, 24, 30], "bash_command": [5, 12, 28, 33], "append_env": 5, "fals": [5, 6, 9, 10, 11, 13, 14, 17, 18, 19, 21, 31], "skip_exit_cod": 5, "skip_on_exit_cod": [5, 9, 28], "99": [5, 28], "output_processor": [5, 28], "lambda": [5, 28, 31], "result": [5, 9, 29], "model": [5, 7, 9, 10, 32], "baseoper": [5, 7, 9, 10], "script": [5, 12, 21, 24, 27, 28], "set": [5, 9, 10, 11, 12, 13, 14, 17, 19, 25, 29, 31], "For": [5, 6, 9, 11, 12, 14, 16, 17, 18, 19, 24, 25, 26, 27, 28, 31], "more": [5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 25, 29, 31], "inform": [5, 6, 9, 11, 12, 14, 16, 17, 18, 19, 21, 24, 25, 31, 32], "how": [5, 6, 9, 11, 12, 14, 16, 17, 18, 19, 24, 27, 28], "take": [5, 6, 9, 11, 12, 13, 14, 16, 17, 18, 19, 28, 29, 31], "look": [5, 6, 9, 11, 12, 14, 16, 17, 18, 19, 25], "guid": [5, 6, 9, 11, 12, 14, 16, 17, 18, 19, 24, 27], "do_xcom_push": 5, "true": [5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 19, 21, 29, 31, 33, 34, 35, 37], "written": 5, "push": [5, 9, 28, 31], "xcom": [5, 9, 28, 31], "when": [5, 6, 7, 9, 10, 13, 14, 16, 17, 18, 19, 21, 23, 24, 28, 29, 31, 32, 33], "complet": [5, 10, 12, 14, 18, 31], "argnotset": 5, "The": [5, 7, 9, 10, 12, 13, 14, 17, 21, 25, 26, 27, 28, 29, 31, 32, 33, 37], "refer": [5, 7, 9, 10, 12, 13, 14, 16, 17, 18, 24], "must": [5, 9, 10, 12, 25, 28], "sh": [5, 12, 28], "templat": [5, 7, 9, 10, 12, 13, 14, 16, 17, 18, 21, 23, 24], "defin": [5, 9, 12, 28, 31, 35], "new": [5, 9, 12, 31, 32], "ar": [5, 6, 9, 10, 12, 13, 16, 25, 26, 27, 28, 29, 31, 32], "instead": [5, 9, 12, 13, 23, 28], "inherit": [5, 9, 12], "current": [5, 6, 9, 11, 12, 31], "behavior": [5, 9, 12, 14, 28], "bool": [5, 6, 9, 10, 11, 13, 14, 17, 18, 19, 21], "param": [5, 7], "doe": [5, 13, 29, 31], "user": [5, 9, 10, 16, 27, 28], "either": [5, 9, 14, 31], "updat": [5, 24], "append": 5, "int": [5, 9, 10, 12, 18], "collect": [5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 19], "abc": [5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 19], "task": [5, 6, 9, 10, 11, 12, 13, 14, 17, 18, 19, 28, 31, 37], "exit": [5, 9, 12, 28, 33], "code": [5, 9, 12, 27, 28, 31], "leav": [5, 9], "skip": [5, 9, 10, 31], "state": [5, 9, 10, 28], "ani": [5, 9, 11, 12, 13, 14, 16, 17, 27, 28, 29, 31, 33], "non": [5, 9, 12, 28, 29], "zero": [5, 9, 12, 28], "treat": [5, 9, 12], "failur": [5, 9, 28], "To": [5, 11, 19, 27, 28, 31], "dag": [5, 9, 10, 13, 18, 19, 28, 29, 31], "folder": [5, 9, 14, 24, 27, 28, 31], "might": [5, 29, 31, 32], "dag_run": [5, 28], "write": [5, 28], "access": [5, 10, 16, 28, 31], "render": [5, 7, 9, 10, 13, 14, 17, 18, 21, 28], "jinja": [5, 7, 9, 10, 13, 14, 17, 18, 21, 31], "callabl": [5, 9, 16, 28, 31, 37], "function": [5, 10, 16, 28, 31], "further": [5, 31], "evalu": [5, 9, 31], "In": [5, 9, 23, 28, 29, 31], "gener": [5, 10, 28, 31], "success": [5, 10], "anoth": [5, 7, 28], "throw": 5, "except": [5, 12, 28, 29, 32], "airflowskipexcept": [5, 28], "can": [5, 9, 11, 13, 14, 19, 25, 26, 27, 28, 29, 31, 32, 35], "all": [5, 9, 10, 13, 25, 26, 28, 31, 32], "rais": [5, 9, 10, 12, 28, 29], "airflowexcept": [5, 28], "recogn": 5, "unless": 5, "whole": 5, "issu": [5, 31], "aris": 5, "sub": [5, 9], "easiest": 5, "wai": [5, 31], "address": 5, "e": [5, 13, 16, 31], "python3": 5, "py": [5, 28, 29, 31, 33, 34, 35, 37], "data_interval_end": [5, 13, 18], "simpli": 5, "without": [5, 9, 13, 14, 17, 18, 31], "space": [5, 28, 31], "after": [5, 9, 13, 16, 17, 18, 28, 29, 31, 34], "argument": [5, 9, 13, 14, 16, 17, 28, 29], "my_script": 5, "becaus": [5, 13, 18, 28, 29, 31], "tri": [5, 28], "load": [5, 7, 9, 21, 28], "end": [5, 13, 17, 18, 28, 34], "your": [5, 9, 16, 21, 28, 29, 31, 35], "do": [5, 11, 13, 27, 28], "put": [5, 16], "blank": 5, "And": 5, "": [5, 6, 9, 11, 16, 18, 19, 27, 28, 29, 31], "template_searchpath": [5, 28], "care": [5, 28], "taken": [5, 28], "input": [5, 16, 28], "perform": [5, 28, 29, 31], "escap": [5, 28], "sanit": [5, 28], "appli": [5, 9, 16, 28], "mostli": [5, 28], "conf": [5, 9, 10, 14, 18, 21, 28], "submit": [5, 28], "via": [5, 26, 27, 28, 31, 35], "web": [5, 28], "ui": [5, 28], "most": [5, 27, 28, 31], "risk": [5, 28], "bash_task": [5, 28], "task_id": [5, 6, 9, 11, 13, 19, 28, 29, 31, 33, 34, 35, 37], "echo": [5, 27, 28], "here": [5, 28], "messag": [5, 28], "els": [5, 28], "doubl": [5, 28], "quot": [5, 28], "insid": [5, 9, 14, 24, 28, 31], "below": [5, 6, 9, 25, 26, 27, 28, 31], "version": [5, 9, 23, 24, 26, 27, 31, 32, 34], "10": [5, 13, 24, 29, 31], "template_field": [5, 7, 9, 10, 12, 13, 14, 16], "sequenc": [5, 7, 9, 10, 12, 13, 14, 16], "template_fields_render": [5, 7, 9, 10], "template_ext": [5, 7, 9], "ui_color": [5, 7, 9, 10, 14], "f0ede4": 5, "subprocess_hook": 5, "get_env": 5, "build": [5, 27, 28], "expos": [5, 7], "deriv": [5, 7, 9, 10, 13, 14, 16, 17, 18, 19], "same": [5, 7, 9, 10, 13, 14, 17, 18, 31], "dictionari": [5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 31], "get_template_context": [5, 7, 9, 10, 13, 14, 17, 18], "on_kil": 5, "overrid": [5, 13, 14, 16, 17, 18, 19, 31], "method": [5, 6, 7, 9, 11, 23], "up": [5, 9, 13, 17, 18, 31], "instanc": 5, "kill": 5, "thread": 5, "multiprocess": 5, "within": [5, 14, 28, 31], "need": [5, 7, 9, 13, 28, 31, 35], "ghost": 5, "behind": 5, "branchdatetimeoper": [6, 23, 30], "follow_task_ids_if_tru": [6, 11, 29], "follow_task_ids_if_fals": [6, 11, 29], "target_low": [6, 29], "target_upp": [6, 29], "use_task_logical_d": [6, 11, 19, 23, 29], "branch": [6, 9, 11, 29, 31, 32], "basebranchoper": [6, 11], "two": [6, 11, 29], "depend": [6, 9, 11, 24, 29, 31, 32], "now": [6, 34], "fall": [6, 29], "abov": [6, 27, 29], "iter": [6, 9, 11, 19], "task_group_id": [6, 9, 11], "follow": [6, 9, 11, 25, 27, 29, 31, 32], "target": [6, 7, 9, 24, 29], "lower": [6, 28], "bound": 6, "upper": 6, "logic": [6, 10, 11, 19, 28], "date": [6, 10, 11, 19], "compar": [6, 11, 19], "backfil": [6, 10, 11, 13, 19], "system": [6, 9, 10, 11, 19, 21, 31], "choose_branch": [6, 11], "abstract": [6, 11], "choos": [6, 11, 27], "subclass": [6, 11], "implement": [6, 11], "whatev": [6, 11, 31], "necessari": [6, 11], "target_times_as_d": 6, "base_d": 6, "ensur": [6, 28, 31], "combin": [6, 28, 29], "them": [6, 31], "generictransf": [7, 24], "sql": [7, 9, 26, 31], "destination_t": 7, "source_conn_id": 7, "source_hook_param": 7, "destination_conn_id": 7, "destination_hook_param": 7, "preoper": 7, "insert_arg": 7, "move": [7, 9, 23, 24, 28, 29], "data": [7, 9, 18, 28, 29, 31, 37], "assum": [7, 9, 31], "thei": 7, "both": [7, 9, 28, 29, 31], "requir": [7, 9, 13, 17, 21, 24, 31, 32, 34], "respect": [7, 9, 31], "get_record": 7, "destin": 7, "insert_row": 7, "meant": [7, 9, 31], "small": 7, "ish": 7, "dataset": 7, "fit": [7, 28], "memori": 7, "queri": [7, 31], "against": 7, "databas": [7, 10], "tabl": 7, "statement": 7, "prior": 7, "hql": [7, 9], "b0f07c": 7, "get_hook": 7, "conn_id": 7, "hook_param": 7, "pythonoper": [9, 30], "python_cal": [9, 16, 31, 37], "op_arg": [9, 16, 31], "op_kwarg": [9, 16, 31], "templates_dict": [9, 16, 31], "templates_ext": [9, 31], "show_return_value_in_log": 9, "keyword": [9, 13, 14, 16, 17, 31], "correspond": 9, "exactli": 9, "what": 9, "header": 9, "directli": [9, 13, 14, 17, 18, 28], "would": [9, 11, 21, 31], "like": [9, 24, 28, 31], "valu": [9, 11, 16, 19, 28, 29, 31, 33, 37], "ti": [9, 31], "With": [9, 31], "explicit": 9, "def": [9, 28, 31, 37], "my_python_cal": 9, "A": [9, 13, 16, 18, 28], "object": [9, 10, 16, 21, 28, 29, 31], "posit": [9, 16], "unpack": [9, 16, 21], "call": [9, 16, 28, 31], "map": [9, 12, 13, 14, 16, 17], "where": [9, 16, 21, 28, 31, 32], "engin": [9, 16], "sometim": [9, 16], "between": [9, 16, 29], "__init__": [9, 16], "place": [9, 16, 28], "ha": [9, 13, 16, 23, 28, 29, 31], "been": [9, 16, 23], "extens": [9, 28], "resolv": 9, "while": [9, 13, 17, 18, 31], "whether": [9, 10, 14, 21, 29, 31], "show": 9, "return_valu": 9, "It": [9, 10, 13, 27, 28, 29, 31, 34], "prevent": [9, 31], "huge": 9, "transmiss": 9, "larg": 9, "amount": 9, "taskapi": 9, "blue": 9, "ffefeb": [9, 10], "shallow_copy_attr": 9, "determine_kwarg": 9, "execute_cal": 9, "branchpythonoper": [9, 31], "branchmixin": 9, "workflow": [9, 28, 29], "expect": 9, "singl": [9, 11, 19], "point": [9, 28, 31], "group": [9, 31], "downstream": [9, 11, 28, 31], "other": [9, 12, 28, 31, 33], "mark": [9, 10, 24], "so": [9, 25, 28, 29, 31, 32], "t": [9, 19, 28, 31], "forward": 9, "propag": 9, "fill": [9, 29], "infer": 9, "shortcircuitoper": [9, 30], "ignore_downstream_trigger_rul": [9, 31], "skipmixin": 9, "pipelin": [9, 28, 31], "continu": [9, 31], "falsi": [9, 31], "short": [9, 31], "circuit": [9, 31], "mode": [9, 10, 18, 29, 31, 35, 37], "truthi": [9, 31], "proce": 9, "normal": [9, 31], "ignor": [9, 31], "trigger_rul": [9, 31], "consid": [9, 28, 31], "howev": [9, 28], "direct": [9, 31], "subsequ": [9, 31], "were": [9, 25, 31], "purpos": [9, 31], "perhap": [9, 31], "pythonvirtualenvoper": [9, 23, 24, 30], "python_vers": 9, "serial": [9, 31], "system_site_packag": [9, 21, 31], "pip_install_opt": [9, 21, 31], "string_arg": 9, "expect_airflow": [9, 31], "index_url": [9, 21, 31], "venv_cache_path": [9, 31], "env_var": 9, "inherit_env": 9, "use_dil": 9, "use_airflow_context": [9, 31], "_basepythonvirtualenvoper": 9, "virtualenv": [9, 21, 23, 24, 31], "destroi": 9, "automat": [9, 10, 25, 31], "certain": [9, 29], "caveat": 9, "part": [9, 31], "import": [9, 11, 19, 24, 27, 28, 31], "happen": [9, 29, 31], "outsid": 9, "scope": [9, 32], "mai": [9, 28], "referenc": 9, "global": [9, 31], "virtualenv_string_arg": 9, "popul": 9, "stuff": [9, 31], "through": [9, 31], "differ": [9, 18, 27, 28, 29, 31], "major": [9, 13, 32], "than": [9, 29, 31], "cannot": 9, "macro": 9, "being": 9, "plugin": 9, "though": 9, "virtual": [9, 21, 25], "string": [9, 25, 28], "pip": [9, 21, 25, 26, 27, 31], "7": [9, 25, 31], "accept": 9, "_serializertypedef": 9, "arg": 9, "pickl": [9, 31], "includ": [9, 21, 24, 26, 32], "librari": [9, 31], "cloudpickl": [9, 31], "complex": 9, "dill": [9, 31], "document": [9, 21, 24, 25], "instal": [9, 21, 25, 31, 32], "h": [9, 21], "present": 9, "var": [9, 31], "runtim": [9, 10, 31], "split": [9, 24], "newlin": 9, "warn": [9, 27], "attempt": [9, 31], "start": [9, 13, 14, 17, 18, 25, 31], "pathlik": 9, "parent": 9, "cach": 9, "venv": [9, 23, 24, 31], "hash": [9, 31], "wherea": 9, "replac": [9, 13, 18, 21, 31], "checksum": [9, 27], "delet": [9, 31], "temp": [9, 31], "everi": [9, 31], "deprec": [9, 10], "get_current_context": [9, 31], "txt": [9, 21, 31], "branchpythonvirtualenvoper": [9, 30], "externalpythonoper": [9, 30], "expect_pendulum": 9, "re": [9, 29, 31], "reus": 9, "overhead": 9, "extern": [9, 10, 31], "fail": [9, 10, 12, 28], "full": [9, 11, 19], "specif": [9, 31, 34], "binari": [9, 21, 27, 31], "bin": [9, 27, 31], "absolut": 9, "usual": [9, 12, 31], "x": 9, "branchexternalpythonoper": [9, 30], "extend": 9, "separ": [9, 28, 32], "similarli": 9, "retriev": 9, "alter": 9, "signatur": [9, 10, 27], "simplest": 9, "old": [9, 10], "style": [9, 31], "my_task": 9, "onli": [9, 10, 12, 14, 29, 31, 32], "wa": [9, 10, 25, 29], "xcom_logical_date_iso": 10, "trigger_logical_date_iso": 10, "xcom_run_id": 10, "trigger_run_id": 10, "triggerdagrunlink": 10, "baseoperatorlink": 10, "link": [10, 27, 31], "triggerdagrunoper": [10, 23, 24], "trigger": [10, 13, 14, 17, 18, 31, 34], "get_link": 10, "ti_kei": [10, 28], "dttm": 10, "That": 10, "still": [10, 31], "support": [10, 24, 26, 31], "associ": 10, "taskinstancekei": 10, "taskinst": [10, 31], "trigger_dag_id": [10, 23, 24], "logical_d": [10, 13, 23, 24, 28, 29], "reset_dag_run": 10, "wait_for_complet": 10, "poke_interv": [10, 37], "60": [10, 28, 37], "allowed_st": 10, "failed_st": 10, "skip_when_already_exist": 10, "deferr": [10, 14, 18, 35], "getboolean": [10, 14, 18], "default_deferr": [10, 14, 18], "fallback": [10, 14, 18], "isol": 10, "enabl": [10, 14, 28], "dag_id": 10, "clear": 10, "alreadi": [10, 13, 27], "rerun": 10, "reset": 10, "recreat": 10, "immut": 10, "dagrunalreadyexist": 10, "wait": [10, 13, 14, 16, 17, 18, 19, 31, 37], "poke": [10, 12, 13, 14, 16, 17, 18, 19], "interv": [10, 18], "check": [10, 11, 12, 19, 27, 28, 37], "statu": [10, 31], "dagrunst": 10, "valid": [10, 27], "disallow": 10, "defer": [10, 13, 14, 18], "until": [10, 13, 14, 17, 19], "done": [10, 14, 29, 31, 32], "operator_extra_link": 10, "execute_complet": [10, 13, 14, 17, 18], "session": 10, "event": [10, 13, 14, 17, 18, 29], "branchdayofweekoper": [11, 23, 24, 30], "week_dai": [11, 19, 29, 34], "dai": [11, 13, 17, 19, 28, 29, 34], "emptyoper": [11, 29, 31], "mondai": [11, 19, 29, 34], "other_dai": 11, "monday_check": 11, "enum": [11, 19], "workdai": 11, "weekend": [11, 29], "weekend_check": [11, 19], "saturdai": [11, 19, 28, 29], "sundai": [11, 19, 28, 29], "criteria": 11, "met": 11, "week": [11, 19, 29, 34], "tuesdai": [11, 19], "is_todai": 11, "bashsensor": [12, 36], "retry_exit_cod": 12, "basesensoroper": [12, 13, 14, 16, 17, 18, 19], "yet": 12, "retri": 12, "later": [12, 31], "accord": 12, "timeout": [12, 13, 17, 33, 34, 37], "caus": 12, "never": 12, "out": [12, 24, 31, 32], "starttriggerarg": [13, 17], "trigger_cl": [13, 17], "next_method": [13, 17], "trigger_kwarg": [13, 14, 17], "next_kwarg": [13, 17], "timedelta": [13, 17, 18, 34], "datetimesensor": 13, "target_tim": [13, 17, 34], "advantag": [13, 28, 31], "idempot": [13, 29], "some": [13, 29, 31], "timesensor": [13, 17, 36], "timedeltasensor": [13, 18, 36], "suit": 13, "1": [13, 26, 31, 33, 34], "11am": 13, "each": [13, 31], "1am": 13, "hour": [13, 34], "unnecessari": 13, "g": [13, 16], "d": [13, 27, 31], "1970": [13, 16], "01": [13, 24], "01t11": 13, "00": [13, 29], "schedul": [13, 29, 31], "23": 13, "daili": 13, "next": [13, 19, 32], "immedi": [13, 17, 18], "we": [13, 32], "wait_for_0100": 13, "tomorrow": 13, "job": [13, 17, 35], "succe": [13, 17, 33], "datetimesensorasync": 13, "start_from_trigg": [13, 14, 17], "end_from_trigg": [13, 17, 18], "occur": [13, 29], "itself": [13, 18, 32], "avoid": [13, 18], "worker": [13, 14, 17, 18, 31], "slot": [13, 17, 18, 31], "drop": [13, 18, 27, 31], "go": [13, 14, 17, 18], "dure": [13, 14, 17, 31], "dynam": [13, 14, 17], "usag": [13, 14, 17], "start_trigger_arg": [13, 14, 17], "fire": [13, 17, 18], "filesensor": [14, 36], "filepath": [14, 35], "recurs": 14, "land": 14, "subdirectori": [14, 31], "rel": [14, 28], "glob": [14, 28], "match": [14, 27], "91818a": 14, "pythonsensor": [16, 36], "could": 16, "start_d": 16, "timesensorasync": [17, 36], "free": 17, "delta": [18, 34], "length": 18, "befor": [18, 28, 29, 31], "succeed": 18, "timedeltasensorasync": [18, 36], "Will": 18, "waitsensor": 18, "time_to_wait": 18, "period": [18, 29], "measur": 18, "dayofweeksensor": [19, 23, 36], "first": [19, 29], "2018": 19, "12": [19, 27], "22": 19, "fridai": 19, "multipl": [19, 31], "don": 19, "want": [19, 27, 28, 31, 32], "anyth": 19, "prepare_virtualenv": 21, "venv_directori": 21, "python_bin": 21, "requirements_file_path": 21, "write_python_script": 21, "jinja_context": 21, "filenam": 21, "render_template_as_native_obj": 21, "its": [21, 29, 31, 37], "placehold": 21, "dump": 21, "convert": 21, "nativ": 21, "airflow_vers": 22, "airflow_v_2_10_plu": 22, "airflow_v_3_0_plu": 22, "airflow": [23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 37], "provid": [23, 25, 27, 31, 32], "standard": [23, 27, 31], "extra_link": [23, 24], "42810": [23, 24], "44053": [23, 24], "43890": [23, 24], "renam": [23, 24], "execution_d": [23, 24], "across": [23, 24], "codebas": [23, 24], "43902": [23, 24], "migrat": 23, "core": [23, 25], "use_task_execution_d": 23, "remov": [23, 24, 27], "pleas": [23, 27, 31], "built": 23, "is_venv_instal": 23, "initi": 23, "41564": [23, 24], "commit": 24, "chang": [24, 28, 29, 32], "high": 24, "level": [24, 31], "changelog": 24, "latest": [24, 32], "2024": 24, "11": [24, 27], "24": 24, "subject": 24, "1275fec92f": 24, "9": 24, "ruff": 24, "black": 24, "rule": [24, 31, 32], "44298": 24, "d0f433b024": 24, "21": 24, "fix": [24, 32], "f05ce08362": 24, "20": [24, 26], "36803b8bd9": 24, "17": 24, "b6c75d2cd6": 24, "rst": 24, "44110": 24, "123dadda0": 24, "15": [24, 29], "14": [24, 29], "a53d9f6d25": 24, "prepar": [24, 32], "nov": 24, "1st": 24, "wave": 24, "44011": 24, "2ef8438eec": 24, "44018": 24, "e7194dff6a": 24, "13": 24, "semicolon": 24, "strip": 24, "dbapihook": 24, "prestohook": 24, "trinohook": 24, "41916": 24, "f757b87581": 24, "section": [24, 28], "43889": 24, "084e29e9e2": 24, "43716": 24, "9bbf6f16f7": 24, "09": 24, "43556": 24, "5f9fdf016d": 24, "05": 24, "config": [24, 31], "43674": 24, "286075f059": 24, "04": 24, "uv": [24, 25], "43612": 24, "fe0dd9b8b3": 24, "switch": 24, "43568": 24, "dd7f669e6c": 24, "31": 24, "readi": [24, 37], "releas": [24, 26], "43550": 24, "0c9e159dc4": 24, "43553": 24, "06088a3abc": 24, "42081": 24, "4d54cda411": 24, "make": [24, 29, 31], "conn": 24, "basesqloper": 24, "42891": 24, "0e112bf0e4": 24, "42783": 24, "2ed06d1e9f": 24, "chore": 24, "43053": 24, "420b24aa79": 24, "42794": 24, "857ca4c06c": 24, "main": [24, 27, 31, 32], "tree": 24, "workspac": 24, "project": 24, "42505": 24, "a5ffbbda17": 24, "42252": 24, "48e39b927a": 24, "02": 24, "revert": 24, "42": 24, "42659": 24, "61d1dbbc7f": 24, "42506": 24, "4c2c4079d6": 24, "42392": 24, "20ea6b7598": 24, "18": 24, "page": [25, 27], "cfg": 25, "previous": 25, "describ": [25, 27, 31], "tool": 25, "auto": 25, "select": [25, 27, 28, 31], "airflow__standard__venv_install_method": 25, "class": 26, "top": [26, 27], "minimum": 26, "common": [26, 31], "download": [27, 31], "offici": 27, "down": 27, "left": 27, "sdist": 27, "whl": 27, "softwar": 27, "foundat": 27, "asc": 27, "sha512": 27, "those": [27, 29], "pgp": 27, "kei": [27, 31], "essenti": 27, "sha": 27, "gpg": 27, "well": 27, "relev": 27, "distribut": 27, "recommend": [27, 28, 31, 37], "mirror": 27, "pgpk": 27, "ka": 27, "pgpv": 27, "tar": 27, "gz": 27, "sat": 27, "sep": 27, "49": 27, "54": 27, "2021": 27, "bst": 27, "rsa": 27, "cde15c6e4d3a8ec4ecf4ba4b6674e08ad7de406f": 27, "issuer": 27, "kaxilnaik": 27, "good": [27, 32], "kaxil": 27, "naik": 27, "unknown": 27, "aka": 27, "gmail": 27, "com": [27, 31], "certifi": 27, "trust": 27, "There": [27, 28], "indic": 27, "belong": 27, "owner": 27, "primari": 27, "fingerprint": 27, "cde1": 27, "5c6e": 27, "4d3a": 27, "8ec4": 27, "ecf4": 27, "ba4b": 27, "6674": 27, "e08a": 27, "d7de": 27, "406f": 27, "correct": 27, "worri": 27, "about": [27, 31, 32], "certif": 27, "sign": 27, "why": 27, "By": [27, 28], "previou": 27, "step": 27, "know": 27, "sum": 27, "shasum": 27, "512": 27, "diff": 27, "local": [27, 28, 31, 35], "package_vers": 27, "package_nam": 27, "provider_download_dir": 27, "mktemp": 27, "dep": 27, "dest": 27, "curl": 27, "apache_airflow_providers_standard": 27, "py3": 27, "l": 27, "la": 27, "onc": [27, 31], "instruct": [27, 32], "chapter": 27, "determin": 28, "taskflow": 28, "decor": [28, 31, 37], "over": [28, 29, 31, 37], "classic": [28, 31, 37], "example_dag": [28, 29, 31, 33, 34, 35, 37], "example_bash_decor": 28, "run_after_loop": 28, "run_thi": [28, 31], "example_bash_oper": 28, "parameter": 28, "also_run_thi": 28, "task_instance_key_str": 28, "also_thi": 28, "format": [28, 31], "also_run_this_again": 28, "also_this_again": 28, "encourag": 28, "approach": [28, 29], "nice": 28, "overal": 28, "paradigm": 28, "Or": 28, "produc": 28, "thu": 28, "desir": 28, "this_will_skip": 28, "hello": 28, "world": 28, "this_skip": 28, "particularli": 28, "manipul": 28, "scenario": 28, "json": 28, "transform": 28, "store": 28, "simplifi": 28, "receiv": [28, 29, 32], "result_processor": 28, "jq": 28, "c": 28, "lastmodifi": 28, "data_interval_start": [28, 31], "ts_zulu": 28, "filter_today_chang": 28, "content": [28, 31], "abl": 28, "disk": [28, 31], "usr": 28, "test_dag": 28, "shown": 28, "tash": 28, "bash_exampl": 28, "t2": [28, 34], "mani": 28, "reason": [28, 32], "proper": 28, "highlight": 28, "compos": 28, "languag": 28, "flexibl": 28, "structur": 28, "possibl": 28, "constructor": 28, "opt": 28, "example_bash_dag": 28, "doesn": 28, "disabl": 28, "ad": [28, 29, 31], "run_command_from_script": 28, "airflow_hom": 28, "run_script": 28, "encount": 28, "try": 28, "home": 28, "batcher": 28, "power": 28, "condit": [28, 31, 37], "etc": 28, "help": [28, 31], "augment": 28, "even": [28, 29, 31], "sleep_in": 28, "sleep": [28, 31], "No": 28, "todai": 28, "strftime": 28, "_get_files_in_cwd": 28, "pathlib": 28, "dir_cont": 28, "elem": 28, "is_fil": 28, "get_file_stat": 28, "shlex": 28, "join": 28, "cmd": 28, "stat": 28, "numer": 28, "pre": [28, 31], "rang": [29, 31], "machin": 29, "clock": 29, "moment": 29, "second": [29, 31, 34], "situat": 29, "cleanup": [29, 31], "mainten": 29, "realli": 29, "suppos": 29, "back": [29, 31], "actual": 29, "slightli": 29, "determinist": 29, "potenti": 29, "dagrun": [29, 31], "mean": [29, 31], "properli": 29, "decis": 29, "delai": 29, "example_branch_datetime_oper": 29, "empty_task_11": 29, "date_in_rang": 29, "dag1": 29, "empty_task_21": 29, "date_outside_rang": 29, "cond1": 29, "datetime_branch": 29, "pendulum": [29, 31], "2020": 29, "order": 29, "comparison": 29, "span": 29, "empty_task_12": 29, "dag2": 29, "empty_task_22": 29, "cond2": 29, "sinc": [29, 31], "unilater": 29, "much": 29, "friendli": 29, "affect": 29, "suitabl": 29, "empty_task_13": 29, "dag3": 29, "empty_task_23": 29, "cond3": 29, "example_branch_day_of_week_oper": 29, "empty_task_1": 29, "branch_tru": 29, "empty_task_2": 29, "branch_fals": 29, "empty_task_3": 29, "branch_weekend": 29, "empty_task_4": 29, "branch_mid_week": 29, "make_choic": 29, "make_weekend_choic": 29, "pythonbranchoper": 30, "example_python_decor": 31, "print_the_context": 31, "print_context": 31, "print": 31, "pprint": 31, "example_python_oper": 31, "endgroup": 31, "5": 31, "4": 31, "my_sleeping_funct": 31, "random_bas": 31, "sleeping_task": 31, "sleep_for_": 31, "log_the_sql": 31, "log_sql_queri": 31, "sampl": 31, "log_sql": 31, "info": 31, "task_inst": 31, "implicitli": 31, "explicitli": 31, "hint": 31, "analysi": 31, "example_python_context_decor": 31, "example_python_context_oper": 31, "constraint": 31, "addition": 31, "offer": 31, "strong": 31, "focu": 31, "protocol": 31, "wider": 31, "compat": 31, "smoother": 31, "exchang": 31, "effect": 31, "virtualenv_python": 31, "colorama": 31, "callable_virtualenv": 31, "modul": 31, "fore": 31, "red": 31, "text": 31, "green": 31, "background": 31, "dim": 31, "reset_al": 31, "_": 31, "flush": 31, "finish": 31, "virtualenv_task": 31, "unfortun": 31, "due": 31, "incompat": 31, "underli": 31, "sure": 31, "won": 31, "relat": 31, "lazy_object_proxi": 31, "bodi": 31, "cut": 31, "w": 31, "surround": 31, "As": 31, "again": 31, "reli": 31, "somepackag": 31, "archiv": 31, "anotherpackag": 31, "find": 31, "my": 31, "adjust": 31, "privat": 31, "repositori": 31, "secret": 31, "special": 31, "remot": 31, "forc": 31, "per": 31, "suffici": 31, "But": 31, "repeat": 31, "uniqu": 31, "subfold": 31, "variat": 31, "autom": 31, "share": 31, "individu": 31, "kubernet": 31, "pod": 31, "restart": 31, "persist": 31, "volum": 31, "problem": 31, "broken": 31, "influenc": 31, "cache_kei": 31, "vector": 31, "calcul": 31, "modif": 31, "post": 31, "pollut": 31, "maintain": 31, "limit": 31, "bit": 31, "challeng": 31, "involv": 31, "bypass": 31, "extent": 31, "print_the_context_venv": 31, "print_context_venv": 31, "preinstal": 31, "contrari": 31, "regular": 31, "activ": 31, "mere": 31, "path_to_python_binari": 31, "external_python": 31, "callable_external_python": 31, "sy": 31, "external_python_task": 31, "print_the_context_extern": 31, "some_external_python": 31, "print_context_extern": 31, "example_branch_operator_decor": 31, "choic": 31, "branch_": 31, "random": 31, "example_branch_oper": 31, "hybrid": 31, "branch_virtualenv": 31, "dir": 31, "keep": 31, "faster": 31, "tempfil": 31, "gettempdir": 31, "numpi": 31, "26": 31, "branching_virtualenv": 31, "np": 31, "arang": 31, "6": 31, "venv_": 31, "branch_with_venv": 31, "branching_venv": 31, "branch_external_python": 31, "branching_ext_python": 31, "ext_py_": 31, "branch_with_external_python": 31, "branching_ext_pi": 31, "control": 31, "satisfi": 31, "obtain": 31, "condition_is_tru": 31, "condition_is_fals": 31, "short_circuit": 31, "example_short_circuit_decor": 31, "check_condit": 31, "ds_true": 31, "true_": 31, "ds_fals": 31, "false_": 31, "chain": 31, "example_short_circuit_oper": 31, "cond_tru": 31, "cond_fals": 31, "especi": 31, "rather": 31, "notic": 31, "task_7": 31, "upstream": [31, 37], "regardless": 31, "triggerrul": 31, "all_don": 31, "task_1": 31, "task_2": 31, "task_3": 31, "task_4": 31, "task_5": 31, "task_6": 31, "task_": 31, "independ": 32, "vulner": 32, "publish": 32, "upgrad": 32, "found": 32, "pypi": 32, "develop": 32, "alwai": 32, "strict": 32, "semver": 32, "polici": 32, "break": 32, "minor": 32, "patchlevel": 32, "bug": 32, "bugfix": 32, "critic": 32, "band": 32, "stakehold": 32, "decid": 32, "cherri": 32, "pick": 32, "older": 32, "mix": 32, "govern": 32, "interest": 32, "parti": 32, "arbitrari": [33, 37], "sens": [33, 34], "example_sensor": [33, 34, 35, 37], "t3": 33, "sensor_succe": 33, "t4": 33, "sensor_fails_after_3_second": 33, "soft_fail": [33, 34, 37], "t0": 34, "wait_some_second": 34, "async": 34, "t0a": 34, "wait_some_seconds_async": 34, "t1": 34, "fire_immedi": 34, "tz": 34, "timezon": 34, "utc": 34, "timeout_after_second_date_in_the_futur": 34, "t1a": 34, "fire_immediately_async": 34, "t2a": 34, "timeout_after_second_date_in_the_future_async": 34, "t11": 34, "week_day_sensor_failing_on_timeout": 34, "detect": 35, "appear": 35, "t6": 35, "wait_for_fil": 35, "temporary_file_for_test": 35, "t7": 35, "wait_for_file_async": 35, "example_sensor_decor": 37, "3600": 37, "reschedul": 37, "wait_for_upstream": 37, "pokereturnvalu": 37, "is_don": 37, "xcom_valu": 37, "t9": 37, "success_sensor_python": 37, "success_cal": 37, "t10": 37, "failure_timeout_sensor_python": 37, "failure_cal": 37}, "objects": {"airflow.providers": [[4, 0, 0, "-", "standard"]], "airflow.providers.standard": [[4, 1, 1, "", "__version__"], [1, 0, 0, "-", "hooks"], [8, 0, 0, "-", "operators"], [15, 0, 0, "-", "sensors"], [20, 0, 0, "-", "utils"]], "airflow.providers.standard.hooks": [[0, 0, 0, "-", "filesystem"], [2, 0, 0, "-", "package_index"], [3, 0, 0, "-", "subprocess"]], "airflow.providers.standard.hooks.filesystem": [[0, 2, 1, "", "FSHook"]], "airflow.providers.standard.hooks.filesystem.FSHook": [[0, 3, 1, "", "conn_name_attr"], [0, 3, 1, "", "conn_type"], [0, 3, 1, "", "default_conn_name"], [0, 4, 1, "", "get_conn"], [0, 4, 1, "", "get_connection_form_widgets"], [0, 4, 1, "", "get_path"], [0, 4, 1, "", "get_ui_field_behaviour"], [0, 3, 1, "", "hook_name"], [0, 4, 1, "", "test_connection"]], "airflow.providers.standard.hooks.package_index": [[2, 2, 1, "", "PackageIndexHook"]], "airflow.providers.standard.hooks.package_index.PackageIndexHook": [[2, 3, 1, "", "conn_name_attr"], [2, 3, 1, "", "conn_type"], [2, 3, 1, "", "default_conn_name"], [2, 4, 1, "", "get_conn"], [2, 4, 1, "", "get_connection_url"], [2, 4, 1, "", "get_ui_field_behaviour"], [2, 3, 1, "", "hook_name"], [2, 4, 1, "", "test_connection"]], "airflow.providers.standard.hooks.subprocess": [[3, 2, 1, "", "SubprocessHook"], [3, 1, 1, "", "SubprocessResult"], [3, 5, 1, "", "working_directory"]], "airflow.providers.standard.hooks.subprocess.SubprocessHook": [[3, 4, 1, "", "run_command"], [3, 4, 1, "", "send_sigterm"]], "airflow.providers.standard.operators": [[5, 0, 0, "-", "bash"], [6, 0, 0, "-", "datetime"], [7, 0, 0, "-", "generic_transfer"], [9, 0, 0, "-", "python"], [10, 0, 0, "-", "trigger_dagrun"], [11, 0, 0, "-", "weekday"]], "airflow.providers.standard.operators.bash": [[5, 2, 1, "", "BashOperator"]], "airflow.providers.standard.operators.bash.BashOperator": [[5, 4, 1, "", "execute"], [5, 4, 1, "", "get_env"], [5, 4, 1, "", "on_kill"], [5, 4, 1, "", "subprocess_hook"], [5, 3, 1, "", "template_ext"], [5, 3, 1, "", "template_fields"], [5, 3, 1, "", "template_fields_renderers"], [5, 3, 1, "", "ui_color"]], "airflow.providers.standard.operators.datetime": [[6, 2, 1, "", "BranchDateTimeOperator"], [6, 5, 1, "", "target_times_as_dates"]], "airflow.providers.standard.operators.datetime.BranchDateTimeOperator": [[6, 4, 1, "", "choose_branch"]], "airflow.providers.standard.operators.generic_transfer": [[7, 2, 1, "", "GenericTransfer"]], "airflow.providers.standard.operators.generic_transfer.GenericTransfer": [[7, 4, 1, "", "execute"], [7, 4, 1, "", "get_hook"], [7, 3, 1, "", "template_ext"], [7, 3, 1, "", "template_fields"], [7, 3, 1, "", "template_fields_renderers"], [7, 3, 1, "", "ui_color"]], "airflow.providers.standard.operators.python": [[9, 2, 1, "", "BranchExternalPythonOperator"], [9, 2, 1, "", "BranchPythonOperator"], [9, 2, 1, "", "BranchPythonVirtualenvOperator"], [9, 2, 1, "", "ExternalPythonOperator"], [9, 2, 1, "", "PythonOperator"], [9, 2, 1, "", "PythonVirtualenvOperator"], [9, 2, 1, "", "ShortCircuitOperator"], [9, 5, 1, "", "get_current_context"], [9, 1, 1, "", "log"]], "airflow.providers.standard.operators.python.BranchExternalPythonOperator": [[9, 4, 1, "", "execute"]], "airflow.providers.standard.operators.python.BranchPythonOperator": [[9, 4, 1, "", "execute"]], "airflow.providers.standard.operators.python.BranchPythonVirtualenvOperator": [[9, 4, 1, "", "execute"]], "airflow.providers.standard.operators.python.ExternalPythonOperator": [[9, 4, 1, "", "execute_callable"], [9, 3, 1, "", "template_fields"]], "airflow.providers.standard.operators.python.PythonOperator": [[9, 3, 1, "", "BLUE"], [9, 4, 1, "", "determine_kwargs"], [9, 4, 1, "", "execute"], [9, 4, 1, "", "execute_callable"], [9, 3, 1, "", "shallow_copy_attrs"], [9, 3, 1, "", "template_fields"], [9, 3, 1, "", "template_fields_renderers"], [9, 3, 1, "", "ui_color"]], "airflow.providers.standard.operators.python.PythonVirtualenvOperator": [[9, 4, 1, "", "execute_callable"], [9, 3, 1, "", "template_ext"], [9, 3, 1, "", "template_fields"]], "airflow.providers.standard.operators.python.ShortCircuitOperator": [[9, 4, 1, "", "execute"]], "airflow.providers.standard.operators.trigger_dagrun": [[10, 2, 1, "", "TriggerDagRunLink"], [10, 2, 1, "", "TriggerDagRunOperator"], [10, 1, 1, "", "XCOM_LOGICAL_DATE_ISO"], [10, 1, 1, "", "XCOM_RUN_ID"]], "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunLink": [[10, 4, 1, "", "get_link"], [10, 3, 1, "", "name"]], "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator": [[10, 4, 1, "", "execute"], [10, 4, 1, "", "execute_complete"], [10, 3, 1, "", "operator_extra_links"], [10, 3, 1, "", "template_fields"], [10, 3, 1, "", "template_fields_renderers"], [10, 3, 1, "", "ui_color"]], "airflow.providers.standard.operators.weekday": [[11, 2, 1, "", "BranchDayOfWeekOperator"]], "airflow.providers.standard.operators.weekday.BranchDayOfWeekOperator": [[11, 4, 1, "", "choose_branch"]], "airflow.providers.standard.sensors": [[12, 0, 0, "-", "bash"], [13, 0, 0, "-", "date_time"], [14, 0, 0, "-", "filesystem"], [16, 0, 0, "-", "python"], [17, 0, 0, "-", "time"], [18, 0, 0, "-", "time_delta"], [19, 0, 0, "-", "weekday"]], "airflow.providers.standard.sensors.bash": [[12, 2, 1, "", "BashSensor"]], "airflow.providers.standard.sensors.bash.BashSensor": [[12, 4, 1, "", "poke"], [12, 3, 1, "", "template_fields"]], "airflow.providers.standard.sensors.date_time": [[13, 2, 1, "", "DateTimeSensor"], [13, 2, 1, "", "DateTimeSensorAsync"], [13, 2, 1, "", "StartTriggerArgs"]], "airflow.providers.standard.sensors.date_time.DateTimeSensor": [[13, 4, 1, "", "poke"], [13, 3, 1, "", "template_fields"]], "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync": [[13, 4, 1, "", "execute"], [13, 4, 1, "", "execute_complete"], [13, 3, 1, "", "start_from_trigger"], [13, 3, 1, "", "start_trigger_args"]], "airflow.providers.standard.sensors.date_time.StartTriggerArgs": [[13, 3, 1, "", "next_kwargs"], [13, 3, 1, "", "next_method"], [13, 3, 1, "", "timeout"], [13, 3, 1, "", "trigger_cls"], [13, 3, 1, "", "trigger_kwargs"]], "airflow.providers.standard.sensors.filesystem": [[14, 2, 1, "", "FileSensor"]], "airflow.providers.standard.sensors.filesystem.FileSensor": [[14, 4, 1, "", "execute"], [14, 4, 1, "", "execute_complete"], [14, 4, 1, "", "path"], [14, 4, 1, "", "poke"], [14, 3, 1, "", "start_from_trigger"], [14, 3, 1, "", "start_trigger_args"], [14, 3, 1, "", "template_fields"], [14, 3, 1, "", "ui_color"]], "airflow.providers.standard.sensors.python": [[16, 2, 1, "", "PythonSensor"]], "airflow.providers.standard.sensors.python.PythonSensor": [[16, 4, 1, "", "poke"], [16, 3, 1, "", "template_fields"]], "airflow.providers.standard.sensors.time": [[17, 2, 1, "", "StartTriggerArgs"], [17, 2, 1, "", "TimeSensor"], [17, 2, 1, "", "TimeSensorAsync"]], "airflow.providers.standard.sensors.time.StartTriggerArgs": [[17, 3, 1, "", "next_kwargs"], [17, 3, 1, "", "next_method"], [17, 3, 1, "", "timeout"], [17, 3, 1, "", "trigger_cls"], [17, 3, 1, "", "trigger_kwargs"]], "airflow.providers.standard.sensors.time.TimeSensor": [[17, 4, 1, "", "poke"]], "airflow.providers.standard.sensors.time.TimeSensorAsync": [[17, 4, 1, "", "execute"], [17, 4, 1, "", "execute_complete"], [17, 3, 1, "", "start_from_trigger"], [17, 3, 1, "", "start_trigger_args"]], "airflow.providers.standard.sensors.time_delta": [[18, 2, 1, "", "TimeDeltaSensor"], [18, 2, 1, "", "TimeDeltaSensorAsync"], [18, 2, 1, "", "WaitSensor"]], "airflow.providers.standard.sensors.time_delta.TimeDeltaSensor": [[18, 4, 1, "", "poke"]], "airflow.providers.standard.sensors.time_delta.TimeDeltaSensorAsync": [[18, 4, 1, "", "execute"], [18, 4, 1, "", "execute_complete"]], "airflow.providers.standard.sensors.time_delta.WaitSensor": [[18, 4, 1, "", "execute"]], "airflow.providers.standard.sensors.weekday": [[19, 2, 1, "", "DayOfWeekSensor"]], "airflow.providers.standard.sensors.weekday.DayOfWeekSensor": [[19, 4, 1, "", "poke"]], "airflow.providers.standard.utils": [[21, 0, 0, "-", "python_virtualenv"], [22, 0, 0, "-", "version_references"]], "airflow.providers.standard.utils.python_virtualenv": [[21, 5, 1, "", "prepare_virtualenv"], [21, 5, 1, "", "write_python_script"]], "airflow.providers.standard.utils.version_references": [[22, 1, 1, "", "AIRFLOW_VERSION"], [22, 1, 1, "", "AIRFLOW_V_2_10_PLUS"], [22, 1, 1, "", "AIRFLOW_V_3_0_PLUS"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"]}, "titleterms": {"airflow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26], "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26], "standard": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 30, 36], "hook": [0, 1, 2, 3], "filesystem": [0, 14], "modul": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22], "content": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22], "class": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19], "submodul": [1, 8, 15, 20], "package_index": 2, "subprocess": 3, "function": [3, 6, 9, 21], "attribut": [3, 9, 10], "subpackag": 4, "packag": [4, 24, 26, 27], "oper": [5, 6, 7, 8, 9, 10, 11, 30], "bash": [5, 12, 28], "datetim": 6, "generic_transf": 7, "python": [9, 16, 28], "trigger_dagrun": 10, "weekdai": [11, 19], "sensor": [12, 13, 14, 15, 16, 17, 18, 19, 36], "date_tim": 13, "time": [17, 29], "time_delta": 18, "util": [20, 21, 22], "python_virtualenv": 21, "version_refer": 22, "changelog": 23, "0": [23, 24], "2": [23, 24], "bug": 23, "fix": 23, "misc": 23, "1": [23, 24], "break": 23, "chang": 23, "apach": [24, 26], "configur": 25, "refer": 25, "section": 25, "venv_install_method": 25, "instal": [26, 27], "requir": 26, "from": [27, 28], "sourc": 27, "releas": [27, 32], "integr": 27, "verifi": 27, "pypi": 27, "bashoper": 28, "templat": [28, 31], "skip": 28, "output": 28, "processor": 28, "execut": 28, "command": 28, "file": 28, "With": 28, "jinja": 28, "without": 28, "found": 28, "enrich": 28, "branchdatetimeoper": 29, "usag": 29, "current": 29, "logic": 29, "date": 29, "branchdayofweekoper": 29, "pythonoper": 31, "pass": 31, "argument": 31, "context": 31, "pythonvirtualenvoper": 31, "virtual": 31, "environ": 31, "setup": 31, "option": 31, "cach": 31, "reus": 31, "externalpythonoper": 31, "pythonbranchoper": 31, "branchpythonvirtualenvoper": 31, "branchexternalpythonoper": 31, "shortcircuitoper": 31, "secur": 32, "patch": 32, "bashsensor": 33, "timedeltasensor": 34, "timedeltasensorasync": 34, "timesensor": 34, "timesensorasync": 34, "dayofweeksensor": 34, "filesensor": 35, "pythonsensor": 37}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"airflow.providers.standard.hooks.filesystem": [[0, "module-airflow.providers.standard.hooks.filesystem"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [21, "module-contents"], [22, "module-contents"]], "Classes": [[0, "classes"], [2, "classes"], [3, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"]], "airflow.providers.standard.hooks": [[1, "module-airflow.providers.standard.hooks"]], "Submodules": [[1, "submodules"], [8, "submodules"], [15, "submodules"], [20, "submodules"]], "airflow.providers.standard.hooks.package_index": [[2, "module-airflow.providers.standard.hooks.package_index"]], "airflow.providers.standard.hooks.subprocess": [[3, "module-airflow.providers.standard.hooks.subprocess"]], "Functions": [[3, "functions"], [6, "functions"], [9, "functions"], [21, "functions"]], "Attributes": [[3, "attributes"], [9, "attributes"], [10, "attributes"]], "airflow.providers.standard": [[4, "module-airflow.providers.standard"]], "Subpackages": [[4, "subpackages"]], "Package Contents": [[4, "package-contents"]], "airflow.providers.standard.operators.bash": [[5, "module-airflow.providers.standard.operators.bash"]], "airflow.providers.standard.operators.datetime": [[6, "module-airflow.providers.standard.operators.datetime"]], "airflow.providers.standard.operators.generic_transfer": [[7, "module-airflow.providers.standard.operators.generic_transfer"]], "airflow.providers.standard.operators": [[8, "module-airflow.providers.standard.operators"]], "airflow.providers.standard.operators.python": [[9, "module-airflow.providers.standard.operators.python"]], "airflow.providers.standard.operators.trigger_dagrun": [[10, "module-airflow.providers.standard.operators.trigger_dagrun"]], "airflow.providers.standard.operators.weekday": [[11, "module-airflow.providers.standard.operators.weekday"]], "airflow.providers.standard.sensors.bash": [[12, "module-airflow.providers.standard.sensors.bash"]], "airflow.providers.standard.sensors.date_time": [[13, "module-airflow.providers.standard.sensors.date_time"]], "airflow.providers.standard.sensors.filesystem": [[14, "module-airflow.providers.standard.sensors.filesystem"]], "airflow.providers.standard.sensors": [[15, "module-airflow.providers.standard.sensors"]], "airflow.providers.standard.sensors.python": [[16, "module-airflow.providers.standard.sensors.python"]], "airflow.providers.standard.sensors.time": [[17, "module-airflow.providers.standard.sensors.time"]], "airflow.providers.standard.sensors.time_delta": [[18, "module-airflow.providers.standard.sensors.time_delta"]], "airflow.providers.standard.sensors.weekday": [[19, "module-airflow.providers.standard.sensors.weekday"]], "airflow.providers.standard.utils": [[20, "module-airflow.providers.standard.utils"]], "airflow.providers.standard.utils.python_virtualenv": [[21, "module-airflow.providers.standard.utils.python_virtualenv"]], "airflow.providers.standard.utils.version_references": [[22, "module-airflow.providers.standard.utils.version_references"]], "Changelog": [[23, "changelog"]], "0.0.2": [[23, "id1"], [24, "id1"]], "Bug Fixes": [[23, "bug-fixes"]], "Misc": [[23, "misc"]], "0.0.1": [[23, "id2"], [24, "id2"]], "Breaking changes": [[23, "breaking-changes"]], "Package apache-airflow-providers-standard": [[24, "package-apache-airflow-providers-standard"]], "Configuration Reference": [[25, "configuration-reference"]], "Sections:": [[25, "sections"]], "[standard]": [[25, "standard"]], "venv_install_method": [[25, "venv-install-method"]], "apache-airflow-providers-standard": [[26, "apache-airflow-providers-standard"]], "apache-airflow-providers-standard package": [[26, "apache-airflow-providers-standard-package"]], "Provider package": [[26, "provider-package"]], "Installation": [[26, "installation"]], "Requirements": [[26, "requirements"]], "Installing from sources": [[27, "installing-from-sources"]], "Released packages": [[27, "released-packages"]], "Release integrity": [[27, "release-integrity"]], "Verifying PyPI releases": [[27, "verifying-pypi-releases"]], "BashOperator": [[28, "bashoperator"]], "Templating": [[28, "templating"], [31, "templating"], [31, "id2"], [31, "id5"]], "Skipping": [[28, "skipping"]], "Output processor": [[28, "output-processor"]], "Executing commands from files": [[28, "executing-commands-from-files"]], "With Jinja template": [[28, "with-jinja-template"]], "Without Jinja template": [[28, "without-jinja-template"]], "Jinja template not found": [[28, "jinja-template-not-found"]], "Enriching Bash with Python": [[28, "enriching-bash-with-python"]], "BranchDateTimeOperator": [[29, "branchdatetimeoperator"]], "Usage with current time": [[29, "usage-with-current-time"]], "Usage with logical date": [[29, "usage-with-logical-date"]], "BranchDayOfWeekOperator": [[29, "branchdayofweekoperator"]], "Standard Operators": [[30, "standard-operators"]], "PythonOperator": [[31, "pythonoperator"]], "Passing in arguments": [[31, "passing-in-arguments"], [31, "id1"], [31, "id4"]], "Context": [[31, "context"], [31, "id3"], [31, "id6"]], "PythonVirtualenvOperator": [[31, "pythonvirtualenvoperator"]], "Virtual environment setup options": [[31, "virtual-environment-setup-options"]], "Caching and reuse": [[31, "caching-and-reuse"]], "ExternalPythonOperator": [[31, "externalpythonoperator"]], "PythonBranchOperator": [[31, "pythonbranchoperator"]], "Passing in arguments and Templating": [[31, "passing-in-arguments-and-templating"], [31, "id7"], [31, "id8"], [31, "id9"]], "BranchPythonVirtualenvOperator": [[31, "branchpythonvirtualenvoperator"]], "BranchExternalPythonOperator": [[31, "branchexternalpythonoperator"]], "ShortCircuitOperator": [[31, "shortcircuitoperator"]], "Releasing security patches": [[32, "releasing-security-patches"]], "BashSensor": [[33, "bashsensor"]], "TimeDeltaSensor": [[34, "timedeltasensor"]], "TimeDeltaSensorAsync": [[34, "timedeltasensorasync"]], "TimeSensor": [[34, "timesensor"]], "TimeSensorAsync": [[34, "timesensorasync"]], "DayOfWeekSensor": [[34, "dayofweeksensor"]], "FileSensor": [[35, "filesensor"]], "Standard Sensors": [[36, "standard-sensors"]], "PythonSensor": [[37, "pythonsensor"]]}, "indexentries": {"fshook (class in airflow.providers.standard.hooks.filesystem)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook"]], "airflow.providers.standard.hooks.filesystem": [[0, "module-airflow.providers.standard.hooks.filesystem"]], "conn_name_attr (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.conn_name_attr"]], "conn_type (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.conn_type"]], "default_conn_name (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.default_conn_name"]], "get_conn() (airflow.providers.standard.hooks.filesystem.fshook method)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.get_conn"]], "get_connection_form_widgets() (airflow.providers.standard.hooks.filesystem.fshook class method)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.get_connection_form_widgets"]], "get_path() (airflow.providers.standard.hooks.filesystem.fshook method)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.get_path"]], "get_ui_field_behaviour() (airflow.providers.standard.hooks.filesystem.fshook class method)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.get_ui_field_behaviour"]], "hook_name (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.hook_name"]], "module": [[0, "module-airflow.providers.standard.hooks.filesystem"], [1, "module-airflow.providers.standard.hooks"], [2, "module-airflow.providers.standard.hooks.package_index"], [3, "module-airflow.providers.standard.hooks.subprocess"], [4, "module-airflow.providers.standard"], [5, "module-airflow.providers.standard.operators.bash"], [6, "module-airflow.providers.standard.operators.datetime"], [7, "module-airflow.providers.standard.operators.generic_transfer"], [8, "module-airflow.providers.standard.operators"], [9, "module-airflow.providers.standard.operators.python"], [10, "module-airflow.providers.standard.operators.trigger_dagrun"], [11, "module-airflow.providers.standard.operators.weekday"], [12, "module-airflow.providers.standard.sensors.bash"], [13, "module-airflow.providers.standard.sensors.date_time"], [14, "module-airflow.providers.standard.sensors.filesystem"], [15, "module-airflow.providers.standard.sensors"], [16, "module-airflow.providers.standard.sensors.python"], [17, "module-airflow.providers.standard.sensors.time"], [18, "module-airflow.providers.standard.sensors.time_delta"], [19, "module-airflow.providers.standard.sensors.weekday"], [20, "module-airflow.providers.standard.utils"], [21, "module-airflow.providers.standard.utils.python_virtualenv"], [22, "module-airflow.providers.standard.utils.version_references"]], "test_connection() (airflow.providers.standard.hooks.filesystem.fshook method)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.test_connection"]], "airflow.providers.standard.hooks": [[1, "module-airflow.providers.standard.hooks"]], "packageindexhook (class in airflow.providers.standard.hooks.package_index)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook"]], "airflow.providers.standard.hooks.package_index": [[2, "module-airflow.providers.standard.hooks.package_index"]], "conn_name_attr (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.conn_name_attr"]], "conn_type (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.conn_type"]], "default_conn_name (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.default_conn_name"]], "get_conn() (airflow.providers.standard.hooks.package_index.packageindexhook method)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.get_conn"]], "get_connection_url() (airflow.providers.standard.hooks.package_index.packageindexhook method)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.get_connection_url"]], "get_ui_field_behaviour() (airflow.providers.standard.hooks.package_index.packageindexhook static method)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.get_ui_field_behaviour"]], "hook_name (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.hook_name"]], "test_connection() (airflow.providers.standard.hooks.package_index.packageindexhook method)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.test_connection"]], "subprocesshook (class in airflow.providers.standard.hooks.subprocess)": [[3, "airflow.providers.standard.hooks.subprocess.SubprocessHook"]], "subprocessresult (in module airflow.providers.standard.hooks.subprocess)": [[3, "airflow.providers.standard.hooks.subprocess.SubprocessResult"]], "airflow.providers.standard.hooks.subprocess": [[3, "module-airflow.providers.standard.hooks.subprocess"]], "run_command() (airflow.providers.standard.hooks.subprocess.subprocesshook method)": [[3, "airflow.providers.standard.hooks.subprocess.SubprocessHook.run_command"]], "send_sigterm() (airflow.providers.standard.hooks.subprocess.subprocesshook method)": [[3, "airflow.providers.standard.hooks.subprocess.SubprocessHook.send_sigterm"]], "working_directory() (in module airflow.providers.standard.hooks.subprocess)": [[3, "airflow.providers.standard.hooks.subprocess.working_directory"]], "__version__ (in module airflow.providers.standard)": [[4, "airflow.providers.standard.__version__"]], "airflow.providers.standard": [[4, "module-airflow.providers.standard"]], "bashoperator (class in airflow.providers.standard.operators.bash)": [[5, "airflow.providers.standard.operators.bash.BashOperator"]], "airflow.providers.standard.operators.bash": [[5, "module-airflow.providers.standard.operators.bash"]], "execute() (airflow.providers.standard.operators.bash.bashoperator method)": [[5, "airflow.providers.standard.operators.bash.BashOperator.execute"]], "get_env() (airflow.providers.standard.operators.bash.bashoperator method)": [[5, "airflow.providers.standard.operators.bash.BashOperator.get_env"]], "on_kill() (airflow.providers.standard.operators.bash.bashoperator method)": [[5, "airflow.providers.standard.operators.bash.BashOperator.on_kill"]], "subprocess_hook() (airflow.providers.standard.operators.bash.bashoperator method)": [[5, "airflow.providers.standard.operators.bash.BashOperator.subprocess_hook"]], "template_ext (airflow.providers.standard.operators.bash.bashoperator attribute)": [[5, "airflow.providers.standard.operators.bash.BashOperator.template_ext"]], "template_fields (airflow.providers.standard.operators.bash.bashoperator attribute)": [[5, "airflow.providers.standard.operators.bash.BashOperator.template_fields"]], "template_fields_renderers (airflow.providers.standard.operators.bash.bashoperator attribute)": [[5, "airflow.providers.standard.operators.bash.BashOperator.template_fields_renderers"]], "ui_color (airflow.providers.standard.operators.bash.bashoperator attribute)": [[5, "airflow.providers.standard.operators.bash.BashOperator.ui_color"]], "branchdatetimeoperator (class in airflow.providers.standard.operators.datetime)": [[6, "airflow.providers.standard.operators.datetime.BranchDateTimeOperator"]], "airflow.providers.standard.operators.datetime": [[6, "module-airflow.providers.standard.operators.datetime"]], "choose_branch() (airflow.providers.standard.operators.datetime.branchdatetimeoperator method)": [[6, "airflow.providers.standard.operators.datetime.BranchDateTimeOperator.choose_branch"]], "target_times_as_dates() (in module airflow.providers.standard.operators.datetime)": [[6, "airflow.providers.standard.operators.datetime.target_times_as_dates"]], "generictransfer (class in airflow.providers.standard.operators.generic_transfer)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer"]], "airflow.providers.standard.operators.generic_transfer": [[7, "module-airflow.providers.standard.operators.generic_transfer"]], "execute() (airflow.providers.standard.operators.generic_transfer.generictransfer method)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.execute"]], "get_hook() (airflow.providers.standard.operators.generic_transfer.generictransfer class method)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.get_hook"]], "template_ext (airflow.providers.standard.operators.generic_transfer.generictransfer attribute)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.template_ext"]], "template_fields (airflow.providers.standard.operators.generic_transfer.generictransfer attribute)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.template_fields"]], "template_fields_renderers (airflow.providers.standard.operators.generic_transfer.generictransfer attribute)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.template_fields_renderers"]], "ui_color (airflow.providers.standard.operators.generic_transfer.generictransfer attribute)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.ui_color"]], "airflow.providers.standard.operators": [[8, "module-airflow.providers.standard.operators"]], "blue (airflow.providers.standard.operators.python.pythonoperator attribute)": [[9, "airflow.providers.standard.operators.python.PythonOperator.BLUE"]], "branchexternalpythonoperator (class in airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.BranchExternalPythonOperator"]], "branchpythonoperator (class in airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.BranchPythonOperator"]], "branchpythonvirtualenvoperator (class in airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.BranchPythonVirtualenvOperator"]], "externalpythonoperator (class in airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.ExternalPythonOperator"]], "pythonoperator (class in airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.PythonOperator"]], "pythonvirtualenvoperator (class in airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.PythonVirtualenvOperator"]], "shortcircuitoperator (class in airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.ShortCircuitOperator"]], "airflow.providers.standard.operators.python": [[9, "module-airflow.providers.standard.operators.python"]], "determine_kwargs() (airflow.providers.standard.operators.python.pythonoperator method)": [[9, "airflow.providers.standard.operators.python.PythonOperator.determine_kwargs"]], "execute() (airflow.providers.standard.operators.python.branchexternalpythonoperator method)": [[9, "airflow.providers.standard.operators.python.BranchExternalPythonOperator.execute"]], "execute() (airflow.providers.standard.operators.python.branchpythonoperator method)": [[9, "airflow.providers.standard.operators.python.BranchPythonOperator.execute"]], "execute() (airflow.providers.standard.operators.python.branchpythonvirtualenvoperator method)": [[9, "airflow.providers.standard.operators.python.BranchPythonVirtualenvOperator.execute"]], "execute() (airflow.providers.standard.operators.python.pythonoperator method)": [[9, "airflow.providers.standard.operators.python.PythonOperator.execute"]], "execute() (airflow.providers.standard.operators.python.shortcircuitoperator method)": [[9, "airflow.providers.standard.operators.python.ShortCircuitOperator.execute"]], "execute_callable() (airflow.providers.standard.operators.python.externalpythonoperator method)": [[9, "airflow.providers.standard.operators.python.ExternalPythonOperator.execute_callable"]], "execute_callable() (airflow.providers.standard.operators.python.pythonoperator method)": [[9, "airflow.providers.standard.operators.python.PythonOperator.execute_callable"]], "execute_callable() (airflow.providers.standard.operators.python.pythonvirtualenvoperator method)": [[9, "airflow.providers.standard.operators.python.PythonVirtualenvOperator.execute_callable"]], "get_current_context() (in module airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.get_current_context"]], "log (in module airflow.providers.standard.operators.python)": [[9, "airflow.providers.standard.operators.python.log"]], "shallow_copy_attrs (airflow.providers.standard.operators.python.pythonoperator attribute)": [[9, "airflow.providers.standard.operators.python.PythonOperator.shallow_copy_attrs"]], "template_ext (airflow.providers.standard.operators.python.pythonvirtualenvoperator attribute)": [[9, "airflow.providers.standard.operators.python.PythonVirtualenvOperator.template_ext"]], "template_fields (airflow.providers.standard.operators.python.externalpythonoperator attribute)": [[9, "airflow.providers.standard.operators.python.ExternalPythonOperator.template_fields"]], "template_fields (airflow.providers.standard.operators.python.pythonoperator attribute)": [[9, "airflow.providers.standard.operators.python.PythonOperator.template_fields"]], "template_fields (airflow.providers.standard.operators.python.pythonvirtualenvoperator attribute)": [[9, "airflow.providers.standard.operators.python.PythonVirtualenvOperator.template_fields"]], "template_fields_renderers (airflow.providers.standard.operators.python.pythonoperator attribute)": [[9, "airflow.providers.standard.operators.python.PythonOperator.template_fields_renderers"]], "ui_color (airflow.providers.standard.operators.python.pythonoperator attribute)": [[9, "airflow.providers.standard.operators.python.PythonOperator.ui_color"]], "triggerdagrunlink (class in airflow.providers.standard.operators.trigger_dagrun)": [[10, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunLink"]], "triggerdagrunoperator (class in airflow.providers.standard.operators.trigger_dagrun)": [[10, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator"]], "xcom_logical_date_iso (in module airflow.providers.standard.operators.trigger_dagrun)": [[10, "airflow.providers.standard.operators.trigger_dagrun.XCOM_LOGICAL_DATE_ISO"]], "xcom_run_id (in module airflow.providers.standard.operators.trigger_dagrun)": [[10, "airflow.providers.standard.operators.trigger_dagrun.XCOM_RUN_ID"]], "airflow.providers.standard.operators.trigger_dagrun": [[10, "module-airflow.providers.standard.operators.trigger_dagrun"]], "execute() (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator method)": [[10, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.execute"]], "execute_complete() (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator method)": [[10, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.execute_complete"]], "get_link() (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunlink method)": [[10, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunLink.get_link"]], "name (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunlink attribute)": [[10, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunLink.name"]], "operator_extra_links (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[10, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.operator_extra_links"]], "template_fields (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[10, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.template_fields"]], "template_fields_renderers (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[10, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.template_fields_renderers"]], "ui_color (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[10, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.ui_color"]], "branchdayofweekoperator (class in airflow.providers.standard.operators.weekday)": [[11, "airflow.providers.standard.operators.weekday.BranchDayOfWeekOperator"]], "airflow.providers.standard.operators.weekday": [[11, "module-airflow.providers.standard.operators.weekday"]], "choose_branch() (airflow.providers.standard.operators.weekday.branchdayofweekoperator method)": [[11, "airflow.providers.standard.operators.weekday.BranchDayOfWeekOperator.choose_branch"]], "bashsensor (class in airflow.providers.standard.sensors.bash)": [[12, "airflow.providers.standard.sensors.bash.BashSensor"]], "airflow.providers.standard.sensors.bash": [[12, "module-airflow.providers.standard.sensors.bash"]], "poke() (airflow.providers.standard.sensors.bash.bashsensor method)": [[12, "airflow.providers.standard.sensors.bash.BashSensor.poke"]], "template_fields (airflow.providers.standard.sensors.bash.bashsensor attribute)": [[12, "airflow.providers.standard.sensors.bash.BashSensor.template_fields"]], "datetimesensor (class in airflow.providers.standard.sensors.date_time)": [[13, "airflow.providers.standard.sensors.date_time.DateTimeSensor"]], "datetimesensorasync (class in airflow.providers.standard.sensors.date_time)": [[13, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync"]], "starttriggerargs (class in airflow.providers.standard.sensors.date_time)": [[13, "airflow.providers.standard.sensors.date_time.StartTriggerArgs"]], "airflow.providers.standard.sensors.date_time": [[13, "module-airflow.providers.standard.sensors.date_time"]], "execute() (airflow.providers.standard.sensors.date_time.datetimesensorasync method)": [[13, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync.execute"]], "execute_complete() (airflow.providers.standard.sensors.date_time.datetimesensorasync method)": [[13, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync.execute_complete"]], "next_kwargs (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[13, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.next_kwargs"]], "next_method (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[13, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.next_method"]], "poke() (airflow.providers.standard.sensors.date_time.datetimesensor method)": [[13, "airflow.providers.standard.sensors.date_time.DateTimeSensor.poke"]], "start_from_trigger (airflow.providers.standard.sensors.date_time.datetimesensorasync attribute)": [[13, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync.start_from_trigger"]], "start_trigger_args (airflow.providers.standard.sensors.date_time.datetimesensorasync attribute)": [[13, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync.start_trigger_args"]], "template_fields (airflow.providers.standard.sensors.date_time.datetimesensor attribute)": [[13, "airflow.providers.standard.sensors.date_time.DateTimeSensor.template_fields"]], "timeout (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[13, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.timeout"]], "trigger_cls (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[13, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.trigger_cls"]], "trigger_kwargs (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[13, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.trigger_kwargs"]], "filesensor (class in airflow.providers.standard.sensors.filesystem)": [[14, "airflow.providers.standard.sensors.filesystem.FileSensor"]], "airflow.providers.standard.sensors.filesystem": [[14, "module-airflow.providers.standard.sensors.filesystem"]], "execute() (airflow.providers.standard.sensors.filesystem.filesensor method)": [[14, "airflow.providers.standard.sensors.filesystem.FileSensor.execute"]], "execute_complete() (airflow.providers.standard.sensors.filesystem.filesensor method)": [[14, "airflow.providers.standard.sensors.filesystem.FileSensor.execute_complete"]], "path() (airflow.providers.standard.sensors.filesystem.filesensor method)": [[14, "airflow.providers.standard.sensors.filesystem.FileSensor.path"]], "poke() (airflow.providers.standard.sensors.filesystem.filesensor method)": [[14, "airflow.providers.standard.sensors.filesystem.FileSensor.poke"]], "start_from_trigger (airflow.providers.standard.sensors.filesystem.filesensor attribute)": [[14, "airflow.providers.standard.sensors.filesystem.FileSensor.start_from_trigger"]], "start_trigger_args (airflow.providers.standard.sensors.filesystem.filesensor attribute)": [[14, "airflow.providers.standard.sensors.filesystem.FileSensor.start_trigger_args"]], "template_fields (airflow.providers.standard.sensors.filesystem.filesensor attribute)": [[14, "airflow.providers.standard.sensors.filesystem.FileSensor.template_fields"]], "ui_color (airflow.providers.standard.sensors.filesystem.filesensor attribute)": [[14, "airflow.providers.standard.sensors.filesystem.FileSensor.ui_color"]], "airflow.providers.standard.sensors": [[15, "module-airflow.providers.standard.sensors"]], "pythonsensor (class in airflow.providers.standard.sensors.python)": [[16, "airflow.providers.standard.sensors.python.PythonSensor"]], "airflow.providers.standard.sensors.python": [[16, "module-airflow.providers.standard.sensors.python"]], "poke() (airflow.providers.standard.sensors.python.pythonsensor method)": [[16, "airflow.providers.standard.sensors.python.PythonSensor.poke"]], "template_fields (airflow.providers.standard.sensors.python.pythonsensor attribute)": [[16, "airflow.providers.standard.sensors.python.PythonSensor.template_fields"]], "starttriggerargs (class in airflow.providers.standard.sensors.time)": [[17, "airflow.providers.standard.sensors.time.StartTriggerArgs"]], "timesensor (class in airflow.providers.standard.sensors.time)": [[17, "airflow.providers.standard.sensors.time.TimeSensor"]], "timesensorasync (class in airflow.providers.standard.sensors.time)": [[17, "airflow.providers.standard.sensors.time.TimeSensorAsync"]], "airflow.providers.standard.sensors.time": [[17, "module-airflow.providers.standard.sensors.time"]], "execute() (airflow.providers.standard.sensors.time.timesensorasync method)": [[17, "airflow.providers.standard.sensors.time.TimeSensorAsync.execute"]], "execute_complete() (airflow.providers.standard.sensors.time.timesensorasync method)": [[17, "airflow.providers.standard.sensors.time.TimeSensorAsync.execute_complete"]], "next_kwargs (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[17, "airflow.providers.standard.sensors.time.StartTriggerArgs.next_kwargs"]], "next_method (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[17, "airflow.providers.standard.sensors.time.StartTriggerArgs.next_method"]], "poke() (airflow.providers.standard.sensors.time.timesensor method)": [[17, "airflow.providers.standard.sensors.time.TimeSensor.poke"]], "start_from_trigger (airflow.providers.standard.sensors.time.timesensorasync attribute)": [[17, "airflow.providers.standard.sensors.time.TimeSensorAsync.start_from_trigger"]], "start_trigger_args (airflow.providers.standard.sensors.time.timesensorasync attribute)": [[17, "airflow.providers.standard.sensors.time.TimeSensorAsync.start_trigger_args"]], "timeout (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[17, "airflow.providers.standard.sensors.time.StartTriggerArgs.timeout"]], "trigger_cls (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[17, "airflow.providers.standard.sensors.time.StartTriggerArgs.trigger_cls"]], "trigger_kwargs (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[17, "airflow.providers.standard.sensors.time.StartTriggerArgs.trigger_kwargs"]], "timedeltasensor (class in airflow.providers.standard.sensors.time_delta)": [[18, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensor"]], "timedeltasensorasync (class in airflow.providers.standard.sensors.time_delta)": [[18, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensorAsync"]], "waitsensor (class in airflow.providers.standard.sensors.time_delta)": [[18, "airflow.providers.standard.sensors.time_delta.WaitSensor"]], "airflow.providers.standard.sensors.time_delta": [[18, "module-airflow.providers.standard.sensors.time_delta"]], "execute() (airflow.providers.standard.sensors.time_delta.timedeltasensorasync method)": [[18, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensorAsync.execute"]], "execute() (airflow.providers.standard.sensors.time_delta.waitsensor method)": [[18, "airflow.providers.standard.sensors.time_delta.WaitSensor.execute"]], "execute_complete() (airflow.providers.standard.sensors.time_delta.timedeltasensorasync method)": [[18, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensorAsync.execute_complete"]], "poke() (airflow.providers.standard.sensors.time_delta.timedeltasensor method)": [[18, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensor.poke"]], "dayofweeksensor (class in airflow.providers.standard.sensors.weekday)": [[19, "airflow.providers.standard.sensors.weekday.DayOfWeekSensor"]], "airflow.providers.standard.sensors.weekday": [[19, "module-airflow.providers.standard.sensors.weekday"]], "poke() (airflow.providers.standard.sensors.weekday.dayofweeksensor method)": [[19, "airflow.providers.standard.sensors.weekday.DayOfWeekSensor.poke"]], "airflow.providers.standard.utils": [[20, "module-airflow.providers.standard.utils"]], "airflow.providers.standard.utils.python_virtualenv": [[21, "module-airflow.providers.standard.utils.python_virtualenv"]], "prepare_virtualenv() (in module airflow.providers.standard.utils.python_virtualenv)": [[21, "airflow.providers.standard.utils.python_virtualenv.prepare_virtualenv"]], "write_python_script() (in module airflow.providers.standard.utils.python_virtualenv)": [[21, "airflow.providers.standard.utils.python_virtualenv.write_python_script"]], "airflow_version (in module airflow.providers.standard.utils.version_references)": [[22, "airflow.providers.standard.utils.version_references.AIRFLOW_VERSION"]], "airflow_v_2_10_plus (in module airflow.providers.standard.utils.version_references)": [[22, "airflow.providers.standard.utils.version_references.AIRFLOW_V_2_10_PLUS"]], "airflow_v_3_0_plus (in module airflow.providers.standard.utils.version_references)": [[22, "airflow.providers.standard.utils.version_references.AIRFLOW_V_3_0_PLUS"]], "airflow.providers.standard.utils.version_references": [[22, "module-airflow.providers.standard.utils.version_references"]]}})