airflow.providers.standard.triggers.file
========================================

.. py:module:: airflow.providers.standard.triggers.file


Classes
-------

.. autoapisummary::

   airflow.providers.standard.triggers.file.FileTrigger
   airflow.providers.standard.triggers.file.FileDeleteTrigger


Module Contents
---------------

.. py:class:: FileTrigger(filepath, recursive = False, poke_interval = 5.0, **kwargs)

   Bases: :py:obj:`airflow.triggers.base.BaseTrigger`


   A trigger that fires exactly once after it finds the requested file or folder.

   :param filepath: File or folder name (relative to the base path set within the connection), can
       be a glob.
   :param recursive: when set to ``True``, enables recursive directory matching behavior of
       ``**`` in glob filepath parameter. Defaults to ``False``.
   :param poke_interval: Time that the job should wait in between each try


   .. py:attribute:: filepath


   .. py:attribute:: recursive
      :value: False



   .. py:attribute:: poke_interval
      :value: 5.0



   .. py:method:: serialize()

      Serialize FileTrigger arguments and classpath.



   .. py:method:: run()
      :async:


      Loop until the relevant files are found.



.. py:class:: FileDeleteTrigger(filepath, poke_interval = 5.0, **kwargs)

   Bases: :py:obj:`airflow.triggers.base.BaseEventTrigger`


   A trigger that fires exactly once after it finds the requested file and then delete the file.

   The difference between ``FileTrigger`` and ``FileDeleteTrigger`` is ``FileDeleteTrigger`` can only find a
   specific file.

   :param filepath: File (relative to the base path set within the connection).
   :param poke_interval: Time that the job should wait in between each try


   .. py:attribute:: filepath


   .. py:attribute:: poke_interval
      :value: 5.0



   .. py:method:: serialize()

      Serialize FileDeleteTrigger arguments and classpath.



   .. py:method:: run()
      :async:


      Loop until the relevant file is found.



