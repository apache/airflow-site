Search.setIndex({"alltitles": {"0.0.1": [[64, "id26"], [65, "id10"]], "0.0.2": [[64, "id23"], [65, "id9"]], "0.0.3": [[64, "id20"], [65, "id8"]], "0.1.0": [[64, "id16"], [65, "id7"]], "0.1.1": [[64, "id14"], [65, "id6"]], "0.2.0": [[64, "id10"], [65, "id5"]], "0.3.0": [[64, "id9"], [65, "id4"]], "0.4.0": [[64, "id5"], [65, "id3"]], "1.0.0": [[64, "id2"], [65, "id2"]], "1.1.0": [[64, "id1"], [65, "id1"]], "Attributes": [[15, "attributes"], [22, "attributes"], [24, "attributes"], [42, "attributes"], [44, "attributes"], [45, "attributes"], [46, "attributes"], [47, "attributes"], [48, "attributes"], [49, "attributes"], [50, "attributes"], [51, "attributes"], [52, "attributes"], [53, "attributes"], [54, "attributes"], [55, "attributes"], [56, "attributes"], [57, "attributes"], [58, "attributes"], [59, "attributes"], [60, "attributes"], [61, "attributes"]], "BashOperator": [[69, null]], "BashSensor": [[76, null]], "BranchDateTimeOperator": [[70, null]], "BranchDayOfWeekOperator": [[70, "branchdayofweekoperator"]], "BranchExternalPythonOperator": [[73, "branchexternalpythonoperator"]], "BranchPythonVirtualenvOperator": [[73, "branchpythonvirtualenvoperator"]], "Breaking changes": [[64, "breaking-changes"], [64, "id27"]], "Bug Fixes": [[64, "bug-fixes"], [64, "id3"], [64, "id7"], [64, "id12"], [64, "id18"], [64, "id21"], [64, "id24"]], "Caching and reuse": [[73, "caching-and-reuse"]], "Changelog": [[64, null]], "Classes": [[8, "classes"], [11, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [38, "classes"], [42, "classes"], [43, "classes"]], "Configuration Reference": [[66, null]], "Context": [[73, "context"]], "Cross-DAG Dependencies": [[78, null]], "DayOfWeekSensor": [[77, "dayofweeksensor"]], "Doc-only": [[64, "doc-only"]], "Enriching Bash with Python": [[69, "enriching-bash-with-python"]], "Exceptions": [[24, "exceptions"]], "Executing commands from files": [[69, "executing-commands-from-files"]], "ExternalPythonOperator": [[73, "externalpythonoperator"]], "ExternalTaskMarker": [[78, "externaltaskmarker"]], "ExternalTaskSensor": [[78, "externaltasksensor"]], "ExternalTaskSensor with task_group dependency": [[78, "externaltasksensor-with-task-group-dependency"]], "Features": [[64, "features"], [64, "id6"], [64, "id11"], [64, "id17"]], "FileSensor": [[79, null]], "Functions": [[0, "functions"], [1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [6, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [14, "functions"], [18, "functions"], [22, "functions"], [40, "functions"], [44, "functions"], [45, "functions"], [55, "functions"], [56, "functions"], [57, "functions"], [58, "functions"], [59, "functions"]], "Installation": [[67, "installation"]], "Installing from sources": [[68, null]], "Jinja template not found": [[69, "jinja-template-not-found"]], "LatestOnlyOperator": [[72, null]], "Misc": [[64, "misc"], [64, "id4"], [64, "id8"], [64, "id13"], [64, "id15"], [64, "id19"], [64, "id22"], [64, "id25"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [13, "module-contents"], [14, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [38, "module-contents"], [40, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"]], "Output processor": [[69, "output-processor"]], "Package Contents": [[15, "package-contents"]], "Package apache-airflow-providers-standard": [[65, null]], "Passing in arguments": [[73, "passing-in-arguments"], [73, "id1"], [73, "id3"]], "Passing in arguments and Templating": [[73, "passing-in-arguments-and-templating"], [73, "id5"], [73, "id6"], [73, "id7"]], "Provider package": [[67, "provider-package"]], "PythonBranchOperator": [[73, "pythonbranchoperator"]], "PythonOperator": [[73, null]], "PythonSensor": [[81, null]], "PythonVirtualenvOperator": [[73, "pythonvirtualenvoperator"]], "Release integrity": [[68, "release-integrity"]], "Released packages": [[68, "released-packages"]], "Releasing security patches": [[75, null]], "Requirements": [[67, "requirements"]], "Sections:": [[66, "sections"]], "ShortCircuitOperator": [[73, "shortcircuitoperator"]], "Skipping": [[69, "skipping"]], "Standard Operators": [[71, null]], "Standard Sensors": [[80, null]], "Submodules": [[5, "submodules"], [12, "submodules"], [15, "submodules"], [20, "submodules"], [30, "submodules"], [37, "submodules"], [39, "submodules"], [62, "submodules"]], "Templating": [[69, "templating"], [73, "templating"], [73, "id2"], [73, "id4"]], "TimeDeltaSensor": [[77, null]], "TimeDeltaSensorAsync": [[77, "timedeltasensorasync"]], "TimeSensor": [[77, "timesensor"]], "TimeSensorAsync": [[77, "timesensorasync"]], "TriggerDagRunOperator": [[74, null]], "Usage with current time": [[70, "usage-with-current-time"]], "Usage with logical date": [[70, "usage-with-logical-date"]], "Verifying PyPI releases": [[68, "verifying-pypi-releases"]], "Virtual environment setup options": [[73, "virtual-environment-setup-options"]], "With Jinja template": [[69, "with-jinja-template"]], "Without Jinja template": [[69, "without-jinja-template"]], "[standard]": [[66, "standard"]], "airflow.providers.standard": [[15, null]], "airflow.providers.standard.decorators": [[5, null]], "airflow.providers.standard.decorators.bash": [[0, null]], "airflow.providers.standard.decorators.branch_external_python": [[1, null]], "airflow.providers.standard.decorators.branch_python": [[2, null]], "airflow.providers.standard.decorators.branch_virtualenv": [[3, null]], "airflow.providers.standard.decorators.external_python": [[4, null]], "airflow.providers.standard.decorators.python": [[6, null]], "airflow.providers.standard.decorators.python_virtualenv": [[7, null]], "airflow.providers.standard.decorators.sensor": [[8, null]], "airflow.providers.standard.decorators.short_circuit": [[9, null]], "airflow.providers.standard.get_provider_info": [[10, null]], "airflow.providers.standard.hooks": [[12, null]], "airflow.providers.standard.hooks.filesystem": [[11, null]], "airflow.providers.standard.hooks.package_index": [[13, null]], "airflow.providers.standard.hooks.subprocess": [[14, null]], "airflow.providers.standard.operators": [[20, null]], "airflow.providers.standard.operators.bash": [[16, null]], "airflow.providers.standard.operators.branch": [[17, null]], "airflow.providers.standard.operators.datetime": [[18, null]], "airflow.providers.standard.operators.empty": [[19, null]], "airflow.providers.standard.operators.latest_only": [[21, null]], "airflow.providers.standard.operators.python": [[22, null]], "airflow.providers.standard.operators.smooth": [[23, null]], "airflow.providers.standard.operators.trigger_dagrun": [[24, null]], "airflow.providers.standard.operators.weekday": [[25, null]], "airflow.providers.standard.sensors": [[30, null]], "airflow.providers.standard.sensors.bash": [[26, null]], "airflow.providers.standard.sensors.date_time": [[27, null]], "airflow.providers.standard.sensors.external_task": [[28, null]], "airflow.providers.standard.sensors.filesystem": [[29, null]], "airflow.providers.standard.sensors.python": [[31, null]], "airflow.providers.standard.sensors.time": [[32, null]], "airflow.providers.standard.sensors.time_delta": [[33, null]], "airflow.providers.standard.sensors.weekday": [[34, null]], "airflow.providers.standard.triggers": [[37, null]], "airflow.providers.standard.triggers.external_task": [[35, null]], "airflow.providers.standard.triggers.file": [[36, null]], "airflow.providers.standard.triggers.temporal": [[38, null]], "airflow.providers.standard.utils": [[39, null]], "airflow.providers.standard.utils.python_virtualenv": [[40, null]], "airflow.providers.standard.utils.sensor_helper": [[41, null]], "airflow.providers.standard.utils.skipmixin": [[42, null]], "airflow.providers.standard.utils.weekday": [[43, null]], "airflow.providers.standard.version_compat": [[44, null]], "apache-airflow-providers-standard": [[67, null]], "apache-airflow-providers-standard package": [[67, "apache-airflow-providers-standard-package"]], "tests.system.standard": [[62, null]], "tests.system.standard.example_bash_decorator": [[45, null]], "tests.system.standard.example_bash_operator": [[46, null]], "tests.system.standard.example_branch_datetime_operator": [[47, null]], "tests.system.standard.example_branch_day_of_week_operator": [[48, null]], "tests.system.standard.example_branch_operator": [[49, null]], "tests.system.standard.example_branch_operator_decorator": [[50, null]], "tests.system.standard.example_external_task_child_deferrable": [[51, null]], "tests.system.standard.example_external_task_marker_dag": [[52, null]], "tests.system.standard.example_external_task_parent_deferrable": [[53, null]], "tests.system.standard.example_latest_only": [[54, null]], "tests.system.standard.example_python_decorator": [[55, null]], "tests.system.standard.example_python_operator": [[56, null]], "tests.system.standard.example_sensor_decorator": [[57, null]], "tests.system.standard.example_sensors": [[58, null]], "tests.system.standard.example_short_circuit_decorator": [[59, null]], "tests.system.standard.example_short_circuit_operator": [[60, null]], "tests.system.standard.example_trigger_controller_dag": [[61, null]], "tests.system.standard.sql": [[63, null]], "venv_install_method": [[66, "venv-install-method"]]}, "docnames": ["_api/airflow/providers/standard/decorators/bash/index", "_api/airflow/providers/standard/decorators/branch_external_python/index", "_api/airflow/providers/standard/decorators/branch_python/index", "_api/airflow/providers/standard/decorators/branch_virtualenv/index", "_api/airflow/providers/standard/decorators/external_python/index", "_api/airflow/providers/standard/decorators/index", "_api/airflow/providers/standard/decorators/python/index", "_api/airflow/providers/standard/decorators/python_virtualenv/index", "_api/airflow/providers/standard/decorators/sensor/index", "_api/airflow/providers/standard/decorators/short_circuit/index", "_api/airflow/providers/standard/get_provider_info/index", "_api/airflow/providers/standard/hooks/filesystem/index", "_api/airflow/providers/standard/hooks/index", "_api/airflow/providers/standard/hooks/package_index/index", "_api/airflow/providers/standard/hooks/subprocess/index", "_api/airflow/providers/standard/index", "_api/airflow/providers/standard/operators/bash/index", "_api/airflow/providers/standard/operators/branch/index", "_api/airflow/providers/standard/operators/datetime/index", "_api/airflow/providers/standard/operators/empty/index", "_api/airflow/providers/standard/operators/index", "_api/airflow/providers/standard/operators/latest_only/index", "_api/airflow/providers/standard/operators/python/index", "_api/airflow/providers/standard/operators/smooth/index", "_api/airflow/providers/standard/operators/trigger_dagrun/index", "_api/airflow/providers/standard/operators/weekday/index", "_api/airflow/providers/standard/sensors/bash/index", "_api/airflow/providers/standard/sensors/date_time/index", "_api/airflow/providers/standard/sensors/external_task/index", "_api/airflow/providers/standard/sensors/filesystem/index", "_api/airflow/providers/standard/sensors/index", "_api/airflow/providers/standard/sensors/python/index", "_api/airflow/providers/standard/sensors/time/index", "_api/airflow/providers/standard/sensors/time_delta/index", "_api/airflow/providers/standard/sensors/weekday/index", "_api/airflow/providers/standard/triggers/external_task/index", "_api/airflow/providers/standard/triggers/file/index", "_api/airflow/providers/standard/triggers/index", "_api/airflow/providers/standard/triggers/temporal/index", "_api/airflow/providers/standard/utils/index", "_api/airflow/providers/standard/utils/python_virtualenv/index", "_api/airflow/providers/standard/utils/sensor_helper/index", "_api/airflow/providers/standard/utils/skipmixin/index", "_api/airflow/providers/standard/utils/weekday/index", "_api/airflow/providers/standard/version_compat/index", "_api/tests/system/standard/example_bash_decorator/index", "_api/tests/system/standard/example_bash_operator/index", "_api/tests/system/standard/example_branch_datetime_operator/index", "_api/tests/system/standard/example_branch_day_of_week_operator/index", "_api/tests/system/standard/example_branch_operator/index", "_api/tests/system/standard/example_branch_operator_decorator/index", "_api/tests/system/standard/example_external_task_child_deferrable/index", "_api/tests/system/standard/example_external_task_marker_dag/index", "_api/tests/system/standard/example_external_task_parent_deferrable/index", "_api/tests/system/standard/example_latest_only/index", "_api/tests/system/standard/example_python_decorator/index", "_api/tests/system/standard/example_python_operator/index", "_api/tests/system/standard/example_sensor_decorator/index", "_api/tests/system/standard/example_sensors/index", "_api/tests/system/standard/example_short_circuit_decorator/index", "_api/tests/system/standard/example_short_circuit_operator/index", "_api/tests/system/standard/example_trigger_controller_dag/index", "_api/tests/system/standard/index", "_api/tests/system/standard/sql/index", "changelog", "commits", "configurations-ref", "index", "installing-providers-from-sources", "operators/bash", "operators/datetime", "operators/index", "operators/latest_only", "operators/python", "operators/trigger_dag_run", "security", "sensors/bash", "sensors/datetime", "sensors/external_task_sensor", "sensors/file", "sensors/index", "sensors/python"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["_api/airflow/providers/standard/decorators/bash/index.rst", "_api/airflow/providers/standard/decorators/branch_external_python/index.rst", "_api/airflow/providers/standard/decorators/branch_python/index.rst", "_api/airflow/providers/standard/decorators/branch_virtualenv/index.rst", "_api/airflow/providers/standard/decorators/external_python/index.rst", "_api/airflow/providers/standard/decorators/index.rst", "_api/airflow/providers/standard/decorators/python/index.rst", "_api/airflow/providers/standard/decorators/python_virtualenv/index.rst", "_api/airflow/providers/standard/decorators/sensor/index.rst", "_api/airflow/providers/standard/decorators/short_circuit/index.rst", "_api/airflow/providers/standard/get_provider_info/index.rst", "_api/airflow/providers/standard/hooks/filesystem/index.rst", "_api/airflow/providers/standard/hooks/index.rst", "_api/airflow/providers/standard/hooks/package_index/index.rst", "_api/airflow/providers/standard/hooks/subprocess/index.rst", "_api/airflow/providers/standard/index.rst", "_api/airflow/providers/standard/operators/bash/index.rst", "_api/airflow/providers/standard/operators/branch/index.rst", "_api/airflow/providers/standard/operators/datetime/index.rst", "_api/airflow/providers/standard/operators/empty/index.rst", "_api/airflow/providers/standard/operators/index.rst", "_api/airflow/providers/standard/operators/latest_only/index.rst", "_api/airflow/providers/standard/operators/python/index.rst", "_api/airflow/providers/standard/operators/smooth/index.rst", "_api/airflow/providers/standard/operators/trigger_dagrun/index.rst", "_api/airflow/providers/standard/operators/weekday/index.rst", "_api/airflow/providers/standard/sensors/bash/index.rst", "_api/airflow/providers/standard/sensors/date_time/index.rst", "_api/airflow/providers/standard/sensors/external_task/index.rst", "_api/airflow/providers/standard/sensors/filesystem/index.rst", "_api/airflow/providers/standard/sensors/index.rst", "_api/airflow/providers/standard/sensors/python/index.rst", "_api/airflow/providers/standard/sensors/time/index.rst", "_api/airflow/providers/standard/sensors/time_delta/index.rst", "_api/airflow/providers/standard/sensors/weekday/index.rst", "_api/airflow/providers/standard/triggers/external_task/index.rst", "_api/airflow/providers/standard/triggers/file/index.rst", "_api/airflow/providers/standard/triggers/index.rst", "_api/airflow/providers/standard/triggers/temporal/index.rst", "_api/airflow/providers/standard/utils/index.rst", "_api/airflow/providers/standard/utils/python_virtualenv/index.rst", "_api/airflow/providers/standard/utils/sensor_helper/index.rst", "_api/airflow/providers/standard/utils/skipmixin/index.rst", "_api/airflow/providers/standard/utils/weekday/index.rst", "_api/airflow/providers/standard/version_compat/index.rst", "_api/tests/system/standard/example_bash_decorator/index.rst", "_api/tests/system/standard/example_bash_operator/index.rst", "_api/tests/system/standard/example_branch_datetime_operator/index.rst", "_api/tests/system/standard/example_branch_day_of_week_operator/index.rst", "_api/tests/system/standard/example_branch_operator/index.rst", "_api/tests/system/standard/example_branch_operator_decorator/index.rst", "_api/tests/system/standard/example_external_task_child_deferrable/index.rst", "_api/tests/system/standard/example_external_task_marker_dag/index.rst", "_api/tests/system/standard/example_external_task_parent_deferrable/index.rst", "_api/tests/system/standard/example_latest_only/index.rst", "_api/tests/system/standard/example_python_decorator/index.rst", "_api/tests/system/standard/example_python_operator/index.rst", "_api/tests/system/standard/example_sensor_decorator/index.rst", "_api/tests/system/standard/example_sensors/index.rst", "_api/tests/system/standard/example_short_circuit_decorator/index.rst", "_api/tests/system/standard/example_short_circuit_operator/index.rst", "_api/tests/system/standard/example_trigger_controller_dag/index.rst", "_api/tests/system/standard/index.rst", "_api/tests/system/standard/sql/index.rst", "changelog.rst", "commits.rst", "configurations-ref.rst", "index.rst", "installing-providers-from-sources.rst", "operators/bash.rst", "operators/datetime.rst", "operators/index.rst", "operators/latest_only.rst", "operators/python.rst", "operators/trigger_dag_run.rst", "security.rst", "sensors/bash.rst", "sensors/datetime.rst", "sensors/external_task_sensor.rst", "sensors/file.rst", "sensors/index.rst", "sensors/python.rst"], "indexentries": {"__str__() (airflow.providers.standard.operators.trigger_dagrun.dagispaused method)": [[24, "airflow.providers.standard.operators.trigger_dagrun.DagIsPaused.__str__", false]], "__version__ (in module airflow.providers.standard)": [[15, "airflow.providers.standard.__version__", false]], "airflow.providers.standard": [[15, "module-airflow.providers.standard", false]], "airflow.providers.standard.decorators": [[5, "module-airflow.providers.standard.decorators", false]], "airflow.providers.standard.decorators.bash": [[0, "module-airflow.providers.standard.decorators.bash", false]], "airflow.providers.standard.decorators.branch_external_python": [[1, "module-airflow.providers.standard.decorators.branch_external_python", false]], "airflow.providers.standard.decorators.branch_python": [[2, "module-airflow.providers.standard.decorators.branch_python", false]], "airflow.providers.standard.decorators.branch_virtualenv": [[3, "module-airflow.providers.standard.decorators.branch_virtualenv", false]], "airflow.providers.standard.decorators.external_python": [[4, "module-airflow.providers.standard.decorators.external_python", false]], "airflow.providers.standard.decorators.python": [[6, "module-airflow.providers.standard.decorators.python", false]], "airflow.providers.standard.decorators.python_virtualenv": [[7, "module-airflow.providers.standard.decorators.python_virtualenv", false]], "airflow.providers.standard.decorators.sensor": [[8, "module-airflow.providers.standard.decorators.sensor", false]], "airflow.providers.standard.decorators.short_circuit": [[9, "module-airflow.providers.standard.decorators.short_circuit", false]], "airflow.providers.standard.get_provider_info": [[10, "module-airflow.providers.standard.get_provider_info", false]], "airflow.providers.standard.hooks": [[12, "module-airflow.providers.standard.hooks", false]], "airflow.providers.standard.hooks.filesystem": [[11, "module-airflow.providers.standard.hooks.filesystem", false]], "airflow.providers.standard.hooks.package_index": [[13, "module-airflow.providers.standard.hooks.package_index", false]], "airflow.providers.standard.hooks.subprocess": [[14, "module-airflow.providers.standard.hooks.subprocess", false]], "airflow.providers.standard.operators": [[20, "module-airflow.providers.standard.operators", false]], "airflow.providers.standard.operators.bash": [[16, "module-airflow.providers.standard.operators.bash", false]], "airflow.providers.standard.operators.branch": [[17, "module-airflow.providers.standard.operators.branch", false]], "airflow.providers.standard.operators.datetime": [[18, "module-airflow.providers.standard.operators.datetime", false]], "airflow.providers.standard.operators.empty": [[19, "module-airflow.providers.standard.operators.empty", false]], "airflow.providers.standard.operators.latest_only": [[21, "module-airflow.providers.standard.operators.latest_only", false]], "airflow.providers.standard.operators.python": [[22, "module-airflow.providers.standard.operators.python", false]], "airflow.providers.standard.operators.smooth": [[23, "module-airflow.providers.standard.operators.smooth", false]], "airflow.providers.standard.operators.trigger_dagrun": [[24, "module-airflow.providers.standard.operators.trigger_dagrun", false]], "airflow.providers.standard.operators.weekday": [[25, "module-airflow.providers.standard.operators.weekday", false]], "airflow.providers.standard.sensors": [[30, "module-airflow.providers.standard.sensors", false]], "airflow.providers.standard.sensors.bash": [[26, "module-airflow.providers.standard.sensors.bash", false]], "airflow.providers.standard.sensors.date_time": [[27, "module-airflow.providers.standard.sensors.date_time", false]], "airflow.providers.standard.sensors.external_task": [[28, "module-airflow.providers.standard.sensors.external_task", false]], "airflow.providers.standard.sensors.filesystem": [[29, "module-airflow.providers.standard.sensors.filesystem", false]], "airflow.providers.standard.sensors.python": [[31, "module-airflow.providers.standard.sensors.python", false]], "airflow.providers.standard.sensors.time": [[32, "module-airflow.providers.standard.sensors.time", false]], "airflow.providers.standard.sensors.time_delta": [[33, "module-airflow.providers.standard.sensors.time_delta", false]], "airflow.providers.standard.sensors.weekday": [[34, "module-airflow.providers.standard.sensors.weekday", false]], "airflow.providers.standard.triggers": [[37, "module-airflow.providers.standard.triggers", false]], "airflow.providers.standard.triggers.external_task": [[35, "module-airflow.providers.standard.triggers.external_task", false]], "airflow.providers.standard.triggers.file": [[36, "module-airflow.providers.standard.triggers.file", false]], "airflow.providers.standard.triggers.temporal": [[38, "module-airflow.providers.standard.triggers.temporal", false]], "airflow.providers.standard.utils": [[39, "module-airflow.providers.standard.utils", false]], "airflow.providers.standard.utils.python_virtualenv": [[40, "module-airflow.providers.standard.utils.python_virtualenv", false]], "airflow.providers.standard.utils.sensor_helper": [[41, "module-airflow.providers.standard.utils.sensor_helper", false]], "airflow.providers.standard.utils.skipmixin": [[42, "module-airflow.providers.standard.utils.skipmixin", false]], "airflow.providers.standard.utils.weekday": [[43, "module-airflow.providers.standard.utils.weekday", false]], "airflow.providers.standard.version_compat": [[44, "module-airflow.providers.standard.version_compat", false]], "airflow_v_2_10_plus (in module airflow.providers.standard.version_compat)": [[44, "airflow.providers.standard.version_compat.AIRFLOW_V_2_10_PLUS", false]], "airflow_v_3_0_plus (in module airflow.providers.standard.version_compat)": [[44, "airflow.providers.standard.version_compat.AIRFLOW_V_3_0_PLUS", false]], "allowed_states (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.allowed_states", false]], "allowed_states (airflow.providers.standard.triggers.external_task.workflowtrigger attribute)": [[35, "airflow.providers.standard.triggers.external_task.WorkflowTrigger.allowed_states", false]], "append_env (airflow.providers.standard.operators.bash.bashoperator attribute)": [[16, "airflow.providers.standard.operators.bash.BashOperator.append_env", false]], "basebranchoperator (class in airflow.providers.standard.operators.branch)": [[17, "airflow.providers.standard.operators.branch.BaseBranchOperator", false]], "basepath (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[11, "airflow.providers.standard.hooks.filesystem.FSHook.basepath", false]], "bash_command (airflow.providers.standard.operators.bash.bashoperator attribute)": [[16, "airflow.providers.standard.operators.bash.BashOperator.bash_command", false]], "bash_command (airflow.providers.standard.sensors.bash.bashsensor attribute)": [[26, "airflow.providers.standard.sensors.bash.BashSensor.bash_command", false]], "bash_task() (in module airflow.providers.standard.decorators.bash)": [[0, "airflow.providers.standard.decorators.bash.bash_task", false]], "bashoperator (class in airflow.providers.standard.operators.bash)": [[16, "airflow.providers.standard.operators.bash.BashOperator", false]], "bashsensor (class in airflow.providers.standard.sensors.bash)": [[26, "airflow.providers.standard.sensors.bash.BashSensor", false]], "blue (airflow.providers.standard.operators.python.pythonoperator attribute)": [[22, "airflow.providers.standard.operators.python.PythonOperator.BLUE", false]], "branch_external_python_task() (in module airflow.providers.standard.decorators.branch_external_python)": [[1, "airflow.providers.standard.decorators.branch_external_python.branch_external_python_task", false]], "branch_task() (in module airflow.providers.standard.decorators.branch_python)": [[2, "airflow.providers.standard.decorators.branch_python.branch_task", false]], "branch_virtualenv_task() (in module airflow.providers.standard.decorators.branch_virtualenv)": [[3, "airflow.providers.standard.decorators.branch_virtualenv.branch_virtualenv_task", false]], "branchdatetimeoperator (class in airflow.providers.standard.operators.datetime)": [[18, "airflow.providers.standard.operators.datetime.BranchDateTimeOperator", false]], "branchdayofweekoperator (class in airflow.providers.standard.operators.weekday)": [[25, "airflow.providers.standard.operators.weekday.BranchDayOfWeekOperator", false]], "branchexternalpythonoperator (class in airflow.providers.standard.operators.python)": [[22, "airflow.providers.standard.operators.python.BranchExternalPythonOperator", false]], "branchmixin (class in airflow.providers.standard.operators.branch)": [[17, "airflow.providers.standard.operators.branch.BranchMixIn", false]], "branchpythonoperator (class in airflow.providers.standard.operators.python)": [[22, "airflow.providers.standard.operators.python.BranchPythonOperator", false]], "branchpythonvirtualenvoperator (class in airflow.providers.standard.operators.python)": [[22, "airflow.providers.standard.operators.python.BranchPythonVirtualenvOperator", false]], "check_existence (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.check_existence", false]], "child_task1 (in module tests.system.standard.example_external_task_marker_dag)": [[52, "tests.system.standard.example_external_task_marker_dag.child_task1", false]], "choose_branch() (airflow.providers.standard.operators.branch.basebranchoperator method)": [[17, "airflow.providers.standard.operators.branch.BaseBranchOperator.choose_branch", false]], "choose_branch() (airflow.providers.standard.operators.datetime.branchdatetimeoperator method)": [[18, "airflow.providers.standard.operators.datetime.BranchDateTimeOperator.choose_branch", false]], "choose_branch() (airflow.providers.standard.operators.latest_only.latestonlyoperator method)": [[21, "airflow.providers.standard.operators.latest_only.LatestOnlyOperator.choose_branch", false]], "choose_branch() (airflow.providers.standard.operators.weekday.branchdayofweekoperator method)": [[25, "airflow.providers.standard.operators.weekday.BranchDayOfWeekOperator.choose_branch", false]], "cond1 (in module tests.system.standard.example_branch_datetime_operator)": [[47, "tests.system.standard.example_branch_datetime_operator.cond1", false]], "cond2 (in module tests.system.standard.example_branch_datetime_operator)": [[47, "tests.system.standard.example_branch_datetime_operator.cond2", false]], "cond3 (in module tests.system.standard.example_branch_datetime_operator)": [[47, "tests.system.standard.example_branch_datetime_operator.cond3", false]], "cond_true (in module tests.system.standard.example_short_circuit_operator)": [[60, "tests.system.standard.example_short_circuit_operator.cond_true", false]], "conf (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.conf", false]], "conn (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[11, "airflow.providers.standard.hooks.filesystem.FSHook.conn", false]], "conn (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[13, "airflow.providers.standard.hooks.package_index.PackageIndexHook.conn", false]], "conn_name_attr (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[11, "airflow.providers.standard.hooks.filesystem.FSHook.conn_name_attr", false]], "conn_name_attr (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[13, "airflow.providers.standard.hooks.package_index.PackageIndexHook.conn_name_attr", false]], "conn_type (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[11, "airflow.providers.standard.hooks.filesystem.FSHook.conn_type", false]], "conn_type (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[13, "airflow.providers.standard.hooks.package_index.PackageIndexHook.conn_type", false]], "convert() (airflow.providers.standard.utils.weekday.weekday class method)": [[43, "airflow.providers.standard.utils.weekday.WeekDay.convert", false]], "count_dags() (airflow.providers.standard.triggers.external_task.dagstatetrigger method)": [[35, "airflow.providers.standard.triggers.external_task.DagStateTrigger.count_dags", false]], "custom_operator_name (airflow.providers.standard.decorators.sensor.decoratedsensoroperator attribute)": [[8, "airflow.providers.standard.decorators.sensor.DecoratedSensorOperator.custom_operator_name", false]], "cwd (airflow.providers.standard.operators.bash.bashoperator attribute)": [[16, "airflow.providers.standard.operators.bash.BashOperator.cwd", false]], "dag1 (in module tests.system.standard.example_branch_datetime_operator)": [[47, "tests.system.standard.example_branch_datetime_operator.dag1", false]], "dag2 (in module tests.system.standard.example_branch_datetime_operator)": [[47, "tests.system.standard.example_branch_datetime_operator.dag2", false]], "dag3 (in module tests.system.standard.example_branch_datetime_operator)": [[47, "tests.system.standard.example_branch_datetime_operator.dag3", false]], "dag_id (airflow.providers.standard.operators.trigger_dagrun.dagispaused attribute)": [[24, "airflow.providers.standard.operators.trigger_dagrun.DagIsPaused.dag_id", false]], "dag_id (airflow.providers.standard.triggers.external_task.dagstatetrigger attribute)": [[35, "airflow.providers.standard.triggers.external_task.DagStateTrigger.dag_id", false]], "dagispaused": [[24, "airflow.providers.standard.operators.trigger_dagrun.DagIsPaused", false]], "dagstatetrigger (class in airflow.providers.standard.triggers.external_task)": [[35, "airflow.providers.standard.triggers.external_task.DagStateTrigger", false]], "datetimesensor (class in airflow.providers.standard.sensors.date_time)": [[27, "airflow.providers.standard.sensors.date_time.DateTimeSensor", false]], "datetimesensorasync (class in airflow.providers.standard.sensors.date_time)": [[27, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync", false]], "datetimetrigger (class in airflow.providers.standard.triggers.temporal)": [[38, "airflow.providers.standard.triggers.temporal.DateTimeTrigger", false]], "dayofweeksensor (class in airflow.providers.standard.sensors.weekday)": [[34, "airflow.providers.standard.sensors.weekday.DayOfWeekSensor", false]], "decoratedsensoroperator (class in airflow.providers.standard.decorators.sensor)": [[8, "airflow.providers.standard.decorators.sensor.DecoratedSensorOperator", false]], "default_conn_name (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[11, "airflow.providers.standard.hooks.filesystem.FSHook.default_conn_name", false]], "default_conn_name (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[13, "airflow.providers.standard.hooks.package_index.PackageIndexHook.default_conn_name", false]], "deferrable (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.deferrable", false]], "deferrable (airflow.providers.standard.sensors.filesystem.filesensor attribute)": [[29, "airflow.providers.standard.sensors.filesystem.FileSensor.deferrable", false]], "deferrable (airflow.providers.standard.sensors.time_delta.waitsensor attribute)": [[33, "airflow.providers.standard.sensors.time_delta.WaitSensor.deferrable", false]], "delta (airflow.providers.standard.sensors.time_delta.timedeltasensor attribute)": [[33, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensor.delta", false]], "determine_kwargs() (airflow.providers.standard.operators.python.pythonoperator method)": [[22, "airflow.providers.standard.operators.python.PythonOperator.determine_kwargs", false]], "do_branch() (airflow.providers.standard.operators.branch.branchmixin method)": [[17, "airflow.providers.standard.operators.branch.BranchMixIn.do_branch", false]], "empty_task_1 (in module tests.system.standard.example_branch_day_of_week_operator)": [[48, "tests.system.standard.example_branch_day_of_week_operator.empty_task_1", false]], "empty_task_11 (in module tests.system.standard.example_branch_datetime_operator)": [[47, "tests.system.standard.example_branch_datetime_operator.empty_task_11", false]], "empty_task_12 (in module tests.system.standard.example_branch_datetime_operator)": [[47, "tests.system.standard.example_branch_datetime_operator.empty_task_12", false]], "empty_task_13 (in module tests.system.standard.example_branch_datetime_operator)": [[47, "tests.system.standard.example_branch_datetime_operator.empty_task_13", false]], "empty_task_21 (in module tests.system.standard.example_branch_datetime_operator)": [[47, "tests.system.standard.example_branch_datetime_operator.empty_task_21", false]], "empty_task_22 (in module tests.system.standard.example_branch_datetime_operator)": [[47, "tests.system.standard.example_branch_datetime_operator.empty_task_22", false]], "empty_task_23 (in module tests.system.standard.example_branch_datetime_operator)": [[47, "tests.system.standard.example_branch_datetime_operator.empty_task_23", false]], "emptyoperator (class in airflow.providers.standard.operators.empty)": [[19, "airflow.providers.standard.operators.empty.EmptyOperator", false]], "end_from_trigger (airflow.providers.standard.sensors.date_time.datetimesensorasync attribute)": [[27, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync.end_from_trigger", false]], "end_from_trigger (airflow.providers.standard.sensors.time.timesensorasync attribute)": [[32, "airflow.providers.standard.sensors.time.TimeSensorAsync.end_from_trigger", false]], "end_from_trigger (airflow.providers.standard.sensors.time_delta.timedeltasensorasync attribute)": [[33, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensorAsync.end_from_trigger", false]], "end_from_trigger (airflow.providers.standard.triggers.temporal.datetimetrigger attribute)": [[38, "airflow.providers.standard.triggers.temporal.DateTimeTrigger.end_from_trigger", false]], "env (airflow.providers.standard.operators.bash.bashoperator attribute)": [[16, "airflow.providers.standard.operators.bash.BashOperator.env", false]], "env (airflow.providers.standard.sensors.bash.bashsensor attribute)": [[26, "airflow.providers.standard.sensors.bash.BashSensor.env", false]], "example_bash_decorator() (in module tests.system.standard.example_bash_decorator)": [[45, "tests.system.standard.example_bash_decorator.example_bash_decorator", false]], "example_dag (in module tests.system.standard.example_python_decorator)": [[55, "tests.system.standard.example_python_decorator.example_dag", false]], "example_dag (in module tests.system.standard.example_short_circuit_decorator)": [[59, "tests.system.standard.example_short_circuit_decorator.example_dag", false]], "example_python_decorator() (in module tests.system.standard.example_python_decorator)": [[55, "tests.system.standard.example_python_decorator.example_python_decorator", false]], "example_sensor_decorator() (in module tests.system.standard.example_sensor_decorator)": [[57, "tests.system.standard.example_sensor_decorator.example_sensor_decorator", false]], "example_short_circuit_decorator() (in module tests.system.standard.example_short_circuit_decorator)": [[59, "tests.system.standard.example_short_circuit_decorator.example_short_circuit_decorator", false]], "execute() (airflow.providers.standard.operators.bash.bashoperator method)": [[16, "airflow.providers.standard.operators.bash.BashOperator.execute", false]], "execute() (airflow.providers.standard.operators.branch.basebranchoperator method)": [[17, "airflow.providers.standard.operators.branch.BaseBranchOperator.execute", false]], "execute() (airflow.providers.standard.operators.empty.emptyoperator method)": [[19, "airflow.providers.standard.operators.empty.EmptyOperator.execute", false]], "execute() (airflow.providers.standard.operators.python.branchexternalpythonoperator method)": [[22, "airflow.providers.standard.operators.python.BranchExternalPythonOperator.execute", false]], "execute() (airflow.providers.standard.operators.python.branchpythonoperator method)": [[22, "airflow.providers.standard.operators.python.BranchPythonOperator.execute", false]], "execute() (airflow.providers.standard.operators.python.branchpythonvirtualenvoperator method)": [[22, "airflow.providers.standard.operators.python.BranchPythonVirtualenvOperator.execute", false]], "execute() (airflow.providers.standard.operators.python.pythonoperator method)": [[22, "airflow.providers.standard.operators.python.PythonOperator.execute", false]], "execute() (airflow.providers.standard.operators.python.shortcircuitoperator method)": [[22, "airflow.providers.standard.operators.python.ShortCircuitOperator.execute", false]], "execute() (airflow.providers.standard.operators.smooth.smoothoperator method)": [[23, "airflow.providers.standard.operators.smooth.SmoothOperator.execute", false]], "execute() (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator method)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.execute", false]], "execute() (airflow.providers.standard.sensors.date_time.datetimesensorasync method)": [[27, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync.execute", false]], "execute() (airflow.providers.standard.sensors.external_task.externaltasksensor method)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.execute", false]], "execute() (airflow.providers.standard.sensors.filesystem.filesensor method)": [[29, "airflow.providers.standard.sensors.filesystem.FileSensor.execute", false]], "execute() (airflow.providers.standard.sensors.time.timesensorasync method)": [[32, "airflow.providers.standard.sensors.time.TimeSensorAsync.execute", false]], "execute() (airflow.providers.standard.sensors.time_delta.timedeltasensorasync method)": [[33, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensorAsync.execute", false]], "execute() (airflow.providers.standard.sensors.time_delta.waitsensor method)": [[33, "airflow.providers.standard.sensors.time_delta.WaitSensor.execute", false]], "execute_callable() (airflow.providers.standard.operators.python.externalpythonoperator method)": [[22, "airflow.providers.standard.operators.python.ExternalPythonOperator.execute_callable", false]], "execute_callable() (airflow.providers.standard.operators.python.pythonoperator method)": [[22, "airflow.providers.standard.operators.python.PythonOperator.execute_callable", false]], "execute_callable() (airflow.providers.standard.operators.python.pythonvirtualenvoperator method)": [[22, "airflow.providers.standard.operators.python.PythonVirtualenvOperator.execute_callable", false]], "execute_complete() (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator method)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.execute_complete", false]], "execute_complete() (airflow.providers.standard.sensors.date_time.datetimesensorasync method)": [[27, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync.execute_complete", false]], "execute_complete() (airflow.providers.standard.sensors.external_task.externaltasksensor method)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.execute_complete", false]], "execute_complete() (airflow.providers.standard.sensors.filesystem.filesensor method)": [[29, "airflow.providers.standard.sensors.filesystem.FileSensor.execute_complete", false]], "execute_complete() (airflow.providers.standard.sensors.time.timesensorasync method)": [[32, "airflow.providers.standard.sensors.time.TimeSensorAsync.execute_complete", false]], "execute_complete() (airflow.providers.standard.sensors.time_delta.timedeltasensorasync method)": [[33, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensorAsync.execute_complete", false]], "execution_date_fn (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.execution_date_fn", false]], "execution_dates (airflow.providers.standard.triggers.external_task.dagstatetrigger attribute)": [[35, "airflow.providers.standard.triggers.external_task.DagStateTrigger.execution_dates", false]], "execution_dates (airflow.providers.standard.triggers.external_task.workflowtrigger attribute)": [[35, "airflow.providers.standard.triggers.external_task.WorkflowTrigger.execution_dates", false]], "execution_delta (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.execution_delta", false]], "exit_code (airflow.providers.standard.hooks.subprocess.subprocessresult attribute)": [[14, "airflow.providers.standard.hooks.subprocess.SubprocessResult.exit_code", false]], "expect_pendulum (airflow.providers.standard.operators.python.externalpythonoperator attribute)": [[22, "airflow.providers.standard.operators.python.ExternalPythonOperator.expect_pendulum", false]], "external_dag_id (airflow.providers.standard.sensors.external_task.externaltaskmarker attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskMarker.external_dag_id", false]], "external_dag_id (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.external_dag_id", false]], "external_dag_id (airflow.providers.standard.triggers.external_task.workflowtrigger attribute)": [[35, "airflow.providers.standard.triggers.external_task.WorkflowTrigger.external_dag_id", false]], "external_python_task() (in module airflow.providers.standard.decorators.external_python)": [[4, "airflow.providers.standard.decorators.external_python.external_python_task", false]], "external_task_group_id (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.external_task_group_id", false]], "external_task_group_id (airflow.providers.standard.triggers.external_task.workflowtrigger attribute)": [[35, "airflow.providers.standard.triggers.external_task.WorkflowTrigger.external_task_group_id", false]], "external_task_id (airflow.providers.standard.sensors.external_task.externaltaskmarker attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskMarker.external_task_id", false]], "external_task_id (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.external_task_id", false]], "external_task_ids (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.external_task_ids", false]], "external_task_ids (airflow.providers.standard.triggers.external_task.workflowtrigger attribute)": [[35, "airflow.providers.standard.triggers.external_task.WorkflowTrigger.external_task_ids", false]], "externaldaglink (class in airflow.providers.standard.sensors.external_task)": [[28, "airflow.providers.standard.sensors.external_task.ExternalDagLink", false]], "externalpythonoperator (class in airflow.providers.standard.operators.python)": [[22, "airflow.providers.standard.operators.python.ExternalPythonOperator", false]], "externaltaskmarker (class in airflow.providers.standard.sensors.external_task)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskMarker", false]], "externaltasksensor (class in airflow.providers.standard.sensors.external_task)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor", false]], "fail_when_dag_is_paused (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.fail_when_dag_is_paused", false]], "failed_states (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.failed_states", false]], "failed_states (airflow.providers.standard.triggers.external_task.workflowtrigger attribute)": [[35, "airflow.providers.standard.triggers.external_task.WorkflowTrigger.failed_states", false]], "failure_callable() (in module tests.system.standard.example_sensors)": [[58, "tests.system.standard.example_sensors.failure_callable", false]], "filedeletetrigger (class in airflow.providers.standard.triggers.file)": [[36, "airflow.providers.standard.triggers.file.FileDeleteTrigger", false]], "filepath (airflow.providers.standard.sensors.filesystem.filesensor attribute)": [[29, "airflow.providers.standard.sensors.filesystem.FileSensor.filepath", false]], "filepath (airflow.providers.standard.triggers.file.filedeletetrigger attribute)": [[36, "airflow.providers.standard.triggers.file.FileDeleteTrigger.filepath", false]], "filepath (airflow.providers.standard.triggers.file.filetrigger attribute)": [[36, "airflow.providers.standard.triggers.file.FileTrigger.filepath", false]], "filesensor (class in airflow.providers.standard.sensors.filesystem)": [[29, "airflow.providers.standard.sensors.filesystem.FileSensor", false]], "filetrigger (class in airflow.providers.standard.triggers.file)": [[36, "airflow.providers.standard.triggers.file.FileTrigger", false]], "follow_task_ids_if_false (airflow.providers.standard.operators.datetime.branchdatetimeoperator attribute)": [[18, "airflow.providers.standard.operators.datetime.BranchDateTimeOperator.follow_task_ids_if_false", false]], "follow_task_ids_if_false (airflow.providers.standard.operators.weekday.branchdayofweekoperator attribute)": [[25, "airflow.providers.standard.operators.weekday.BranchDayOfWeekOperator.follow_task_ids_if_false", false]], "follow_task_ids_if_true (airflow.providers.standard.operators.datetime.branchdatetimeoperator attribute)": [[18, "airflow.providers.standard.operators.datetime.BranchDateTimeOperator.follow_task_ids_if_true", false]], "follow_task_ids_if_true (airflow.providers.standard.operators.weekday.branchdayofweekoperator attribute)": [[25, "airflow.providers.standard.operators.weekday.BranchDayOfWeekOperator.follow_task_ids_if_true", false]], "friday (airflow.providers.standard.utils.weekday.weekday attribute)": [[43, "airflow.providers.standard.utils.weekday.WeekDay.FRIDAY", false]], "fs_conn_id (airflow.providers.standard.sensors.filesystem.filesensor attribute)": [[29, "airflow.providers.standard.sensors.filesystem.FileSensor.fs_conn_id", false]], "fshook (class in airflow.providers.standard.hooks.filesystem)": [[11, "airflow.providers.standard.hooks.filesystem.FSHook", false]], "get_base_airflow_version_tuple() (in module airflow.providers.standard.version_compat)": [[44, "airflow.providers.standard.version_compat.get_base_airflow_version_tuple", false]], "get_conn() (airflow.providers.standard.hooks.filesystem.fshook method)": [[11, "airflow.providers.standard.hooks.filesystem.FSHook.get_conn", false]], "get_conn() (airflow.providers.standard.hooks.package_index.packageindexhook method)": [[13, "airflow.providers.standard.hooks.package_index.PackageIndexHook.get_conn", false]], "get_connection_form_widgets() (airflow.providers.standard.hooks.filesystem.fshook class method)": [[11, "airflow.providers.standard.hooks.filesystem.FSHook.get_connection_form_widgets", false]], "get_connection_url() (airflow.providers.standard.hooks.package_index.packageindexhook method)": [[13, "airflow.providers.standard.hooks.package_index.PackageIndexHook.get_connection_url", false]], "get_count() (airflow.providers.standard.sensors.external_task.externaltasksensor method)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.get_count", false]], "get_current_context() (in module airflow.providers.standard.operators.python)": [[22, "airflow.providers.standard.operators.python.get_current_context", false]], "get_env() (airflow.providers.standard.operators.bash.bashoperator method)": [[16, "airflow.providers.standard.operators.bash.BashOperator.get_env", false]], "get_external_task_group_task_ids() (airflow.providers.standard.sensors.external_task.externaltasksensor method)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.get_external_task_group_task_ids", false]], "get_link() (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunlink method)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunLink.get_link", false]], "get_link() (airflow.providers.standard.sensors.external_task.externaldaglink method)": [[28, "airflow.providers.standard.sensors.external_task.ExternalDagLink.get_link", false]], "get_path() (airflow.providers.standard.hooks.filesystem.fshook method)": [[11, "airflow.providers.standard.hooks.filesystem.FSHook.get_path", false]], "get_provider_info() (in module airflow.providers.standard.get_provider_info)": [[10, "airflow.providers.standard.get_provider_info.get_provider_info", false]], "get_serialized_fields() (airflow.providers.standard.sensors.external_task.externaltaskmarker class method)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskMarker.get_serialized_fields", false]], "get_ui_field_behaviour() (airflow.providers.standard.hooks.filesystem.fshook class method)": [[11, "airflow.providers.standard.hooks.filesystem.FSHook.get_ui_field_behaviour", false]], "get_ui_field_behaviour() (airflow.providers.standard.hooks.package_index.packageindexhook static method)": [[13, "airflow.providers.standard.hooks.package_index.PackageIndexHook.get_ui_field_behaviour", false]], "get_weekday_number() (airflow.providers.standard.utils.weekday.weekday class method)": [[43, "airflow.providers.standard.utils.weekday.WeekDay.get_weekday_number", false]], "hook_name (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[11, "airflow.providers.standard.hooks.filesystem.FSHook.hook_name", false]], "hook_name (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[13, "airflow.providers.standard.hooks.package_index.PackageIndexHook.hook_name", false]], "ignore_downstream_trigger_rules (airflow.providers.standard.operators.python.shortcircuitoperator attribute)": [[22, "airflow.providers.standard.operators.python.ShortCircuitOperator.ignore_downstream_trigger_rules", false]], "inherits_from_empty_operator (airflow.providers.standard.operators.empty.emptyoperator attribute)": [[19, "airflow.providers.standard.operators.empty.EmptyOperator.inherits_from_empty_operator", false]], "inherits_from_skipmixin (airflow.providers.standard.operators.branch.basebranchoperator attribute)": [[17, "airflow.providers.standard.operators.branch.BaseBranchOperator.inherits_from_skipmixin", false]], "inherits_from_skipmixin (airflow.providers.standard.operators.python.branchpythonoperator attribute)": [[22, "airflow.providers.standard.operators.python.BranchPythonOperator.inherits_from_skipmixin", false]], "inherits_from_skipmixin (airflow.providers.standard.operators.python.branchpythonvirtualenvoperator attribute)": [[22, "airflow.providers.standard.operators.python.BranchPythonVirtualenvOperator.inherits_from_skipmixin", false]], "inherits_from_skipmixin (airflow.providers.standard.operators.python.shortcircuitoperator attribute)": [[22, "airflow.providers.standard.operators.python.ShortCircuitOperator.inherits_from_skipmixin", false]], "latest_only (in module tests.system.standard.example_latest_only)": [[54, "tests.system.standard.example_latest_only.latest_only", false]], "latestonlyoperator (class in airflow.providers.standard.operators.latest_only)": [[21, "airflow.providers.standard.operators.latest_only.LatestOnlyOperator", false]], "log (in module airflow.providers.standard.operators.python)": [[22, "airflow.providers.standard.operators.python.log", false]], "log (in module tests.system.standard.example_python_decorator)": [[55, "tests.system.standard.example_python_decorator.log", false]], "log (in module tests.system.standard.example_python_operator)": [[56, "tests.system.standard.example_python_operator.log", false]], "logical_date (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.logical_date", false]], "logical_dates (airflow.providers.standard.triggers.external_task.workflowtrigger attribute)": [[35, "airflow.providers.standard.triggers.external_task.WorkflowTrigger.logical_dates", false]], "module": [[0, "module-airflow.providers.standard.decorators.bash", false], [1, "module-airflow.providers.standard.decorators.branch_external_python", false], [2, "module-airflow.providers.standard.decorators.branch_python", false], [3, "module-airflow.providers.standard.decorators.branch_virtualenv", false], [4, "module-airflow.providers.standard.decorators.external_python", false], [5, "module-airflow.providers.standard.decorators", false], [6, "module-airflow.providers.standard.decorators.python", false], [7, "module-airflow.providers.standard.decorators.python_virtualenv", false], [8, "module-airflow.providers.standard.decorators.sensor", false], [9, "module-airflow.providers.standard.decorators.short_circuit", false], [10, "module-airflow.providers.standard.get_provider_info", false], [11, "module-airflow.providers.standard.hooks.filesystem", false], [12, "module-airflow.providers.standard.hooks", false], [13, "module-airflow.providers.standard.hooks.package_index", false], [14, "module-airflow.providers.standard.hooks.subprocess", false], [15, "module-airflow.providers.standard", false], [16, "module-airflow.providers.standard.operators.bash", false], [17, "module-airflow.providers.standard.operators.branch", false], [18, "module-airflow.providers.standard.operators.datetime", false], [19, "module-airflow.providers.standard.operators.empty", false], [20, "module-airflow.providers.standard.operators", false], [21, "module-airflow.providers.standard.operators.latest_only", false], [22, "module-airflow.providers.standard.operators.python", false], [23, "module-airflow.providers.standard.operators.smooth", false], [24, "module-airflow.providers.standard.operators.trigger_dagrun", false], [25, "module-airflow.providers.standard.operators.weekday", false], [26, "module-airflow.providers.standard.sensors.bash", false], [27, "module-airflow.providers.standard.sensors.date_time", false], [28, "module-airflow.providers.standard.sensors.external_task", false], [29, "module-airflow.providers.standard.sensors.filesystem", false], [30, "module-airflow.providers.standard.sensors", false], [31, "module-airflow.providers.standard.sensors.python", false], [32, "module-airflow.providers.standard.sensors.time", false], [33, "module-airflow.providers.standard.sensors.time_delta", false], [34, "module-airflow.providers.standard.sensors.weekday", false], [35, "module-airflow.providers.standard.triggers.external_task", false], [36, "module-airflow.providers.standard.triggers.file", false], [37, "module-airflow.providers.standard.triggers", false], [38, "module-airflow.providers.standard.triggers.temporal", false], [39, "module-airflow.providers.standard.utils", false], [40, "module-airflow.providers.standard.utils.python_virtualenv", false], [41, "module-airflow.providers.standard.utils.sensor_helper", false], [42, "module-airflow.providers.standard.utils.skipmixin", false], [43, "module-airflow.providers.standard.utils.weekday", false], [44, "module-airflow.providers.standard.version_compat", false], [45, "module-tests.system.standard.example_bash_decorator", false], [46, "module-tests.system.standard.example_bash_operator", false], [47, "module-tests.system.standard.example_branch_datetime_operator", false], [48, "module-tests.system.standard.example_branch_day_of_week_operator", false], [49, "module-tests.system.standard.example_branch_operator", false], [50, "module-tests.system.standard.example_branch_operator_decorator", false], [51, "module-tests.system.standard.example_external_task_child_deferrable", false], [52, "module-tests.system.standard.example_external_task_marker_dag", false], [53, "module-tests.system.standard.example_external_task_parent_deferrable", false], [54, "module-tests.system.standard.example_latest_only", false], [55, "module-tests.system.standard.example_python_decorator", false], [56, "module-tests.system.standard.example_python_operator", false], [57, "module-tests.system.standard.example_sensor_decorator", false], [58, "module-tests.system.standard.example_sensors", false], [59, "module-tests.system.standard.example_short_circuit_decorator", false], [60, "module-tests.system.standard.example_short_circuit_operator", false], [61, "module-tests.system.standard.example_trigger_controller_dag", false], [62, "module-tests.system.standard", false], [63, "module-tests.system.standard.sql", false]], "moment (airflow.providers.standard.triggers.temporal.datetimetrigger attribute)": [[38, "airflow.providers.standard.triggers.temporal.DateTimeTrigger.moment", false]], "monday (airflow.providers.standard.utils.weekday.weekday attribute)": [[43, "airflow.providers.standard.utils.weekday.WeekDay.MONDAY", false]], "name (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunlink attribute)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunLink.name", false]], "name (airflow.providers.standard.sensors.external_task.externaldaglink attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalDagLink.name", false]], "next_kwargs (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[27, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.next_kwargs", false]], "next_kwargs (airflow.providers.standard.sensors.filesystem.starttriggerargs attribute)": [[29, "airflow.providers.standard.sensors.filesystem.StartTriggerArgs.next_kwargs", false]], "next_kwargs (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[32, "airflow.providers.standard.sensors.time.StartTriggerArgs.next_kwargs", false]], "next_method (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[27, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.next_method", false]], "next_method (airflow.providers.standard.sensors.filesystem.starttriggerargs attribute)": [[29, "airflow.providers.standard.sensors.filesystem.StartTriggerArgs.next_method", false]], "next_method (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[32, "airflow.providers.standard.sensors.time.StartTriggerArgs.next_method", false]], "on_kill() (airflow.providers.standard.operators.bash.bashoperator method)": [[16, "airflow.providers.standard.operators.bash.BashOperator.on_kill", false]], "op_args (airflow.providers.standard.operators.python.pythonoperator attribute)": [[22, "airflow.providers.standard.operators.python.PythonOperator.op_args", false]], "op_args (airflow.providers.standard.sensors.python.pythonsensor attribute)": [[31, "airflow.providers.standard.sensors.python.PythonSensor.op_args", false]], "op_kwargs (airflow.providers.standard.operators.python.pythonoperator attribute)": [[22, "airflow.providers.standard.operators.python.PythonOperator.op_kwargs", false]], "op_kwargs (airflow.providers.standard.sensors.python.pythonsensor attribute)": [[31, "airflow.providers.standard.sensors.python.PythonSensor.op_kwargs", false]], "operator_extra_links (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.operator_extra_links", false]], "operator_extra_links (airflow.providers.standard.sensors.external_task.externaltaskmarker attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskMarker.operator_extra_links", false]], "operator_extra_links (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.operator_extra_links", false]], "output (airflow.providers.standard.hooks.subprocess.subprocessresult attribute)": [[14, "airflow.providers.standard.hooks.subprocess.SubprocessResult.output", false]], "output_encoding (airflow.providers.standard.operators.bash.bashoperator attribute)": [[16, "airflow.providers.standard.operators.bash.BashOperator.output_encoding", false]], "output_encoding (airflow.providers.standard.sensors.bash.bashsensor attribute)": [[26, "airflow.providers.standard.sensors.bash.BashSensor.output_encoding", false]], "output_processor (airflow.providers.standard.operators.bash.bashoperator attribute)": [[16, "airflow.providers.standard.operators.bash.BashOperator.output_processor", false]], "packageindexhook (class in airflow.providers.standard.hooks.package_index)": [[13, "airflow.providers.standard.hooks.package_index.PackageIndexHook", false]], "parent_task (in module tests.system.standard.example_external_task_marker_dag)": [[52, "tests.system.standard.example_external_task_marker_dag.parent_task", false]], "path (airflow.providers.standard.sensors.filesystem.filesensor property)": [[29, "airflow.providers.standard.sensors.filesystem.FileSensor.path", false]], "path_to_python_binary (in module tests.system.standard.example_branch_operator)": [[49, "tests.system.standard.example_branch_operator.PATH_TO_PYTHON_BINARY", false]], "path_to_python_binary (in module tests.system.standard.example_branch_operator_decorator)": [[50, "tests.system.standard.example_branch_operator_decorator.PATH_TO_PYTHON_BINARY", false]], "path_to_python_binary (in module tests.system.standard.example_python_decorator)": [[55, "tests.system.standard.example_python_decorator.PATH_TO_PYTHON_BINARY", false]], "path_to_python_binary (in module tests.system.standard.example_python_operator)": [[56, "tests.system.standard.example_python_operator.PATH_TO_PYTHON_BINARY", false]], "pi_conn_id (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[13, "airflow.providers.standard.hooks.package_index.PackageIndexHook.pi_conn_id", false]], "pip_install_options (airflow.providers.standard.operators.python.pythonvirtualenvoperator attribute)": [[22, "airflow.providers.standard.operators.python.PythonVirtualenvOperator.pip_install_options", false]], "poke() (airflow.providers.standard.sensors.bash.bashsensor method)": [[26, "airflow.providers.standard.sensors.bash.BashSensor.poke", false]], "poke() (airflow.providers.standard.sensors.date_time.datetimesensor method)": [[27, "airflow.providers.standard.sensors.date_time.DateTimeSensor.poke", false]], "poke() (airflow.providers.standard.sensors.external_task.externaltasksensor method)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.poke", false]], "poke() (airflow.providers.standard.sensors.filesystem.filesensor method)": [[29, "airflow.providers.standard.sensors.filesystem.FileSensor.poke", false]], "poke() (airflow.providers.standard.sensors.python.pythonsensor method)": [[31, "airflow.providers.standard.sensors.python.PythonSensor.poke", false]], "poke() (airflow.providers.standard.sensors.time.timesensor method)": [[32, "airflow.providers.standard.sensors.time.TimeSensor.poke", false]], "poke() (airflow.providers.standard.sensors.time_delta.timedeltasensor method)": [[33, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensor.poke", false]], "poke() (airflow.providers.standard.sensors.weekday.dayofweeksensor method)": [[34, "airflow.providers.standard.sensors.weekday.DayOfWeekSensor.poke", false]], "poke_interval (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.poke_interval", false]], "poke_interval (airflow.providers.standard.triggers.external_task.workflowtrigger attribute)": [[35, "airflow.providers.standard.triggers.external_task.WorkflowTrigger.poke_interval", false]], "poke_interval (airflow.providers.standard.triggers.file.filedeletetrigger attribute)": [[36, "airflow.providers.standard.triggers.file.FileDeleteTrigger.poke_interval", false]], "poke_interval (airflow.providers.standard.triggers.file.filetrigger attribute)": [[36, "airflow.providers.standard.triggers.file.FileTrigger.poke_interval", false]], "poll_interval (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.poll_interval", false]], "poll_interval (airflow.providers.standard.triggers.external_task.dagstatetrigger attribute)": [[35, "airflow.providers.standard.triggers.external_task.DagStateTrigger.poll_interval", false]], "prepare_virtualenv() (in module airflow.providers.standard.utils.python_virtualenv)": [[40, "airflow.providers.standard.utils.python_virtualenv.prepare_virtualenv", false]], "print_context() (in module tests.system.standard.example_python_operator)": [[56, "tests.system.standard.example_python_operator.print_context", false]], "python (airflow.providers.standard.operators.python.externalpythonoperator attribute)": [[22, "airflow.providers.standard.operators.python.ExternalPythonOperator.python", false]], "python_callable (airflow.providers.standard.operators.python.pythonoperator attribute)": [[22, "airflow.providers.standard.operators.python.PythonOperator.python_callable", false]], "python_callable (airflow.providers.standard.sensors.python.pythonsensor attribute)": [[31, "airflow.providers.standard.sensors.python.PythonSensor.python_callable", false]], "python_task() (in module airflow.providers.standard.decorators.python)": [[6, "airflow.providers.standard.decorators.python.python_task", false]], "python_version (airflow.providers.standard.operators.python.pythonvirtualenvoperator attribute)": [[22, "airflow.providers.standard.operators.python.PythonVirtualenvOperator.python_version", false]], "pythonoperator (class in airflow.providers.standard.operators.python)": [[22, "airflow.providers.standard.operators.python.PythonOperator", false]], "pythonsensor (class in airflow.providers.standard.sensors.python)": [[31, "airflow.providers.standard.sensors.python.PythonSensor", false]], "pythonvirtualenvoperator (class in airflow.providers.standard.operators.python)": [[22, "airflow.providers.standard.operators.python.PythonVirtualenvOperator", false]], "recursion_depth (airflow.providers.standard.sensors.external_task.externaltaskmarker attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskMarker.recursion_depth", false]], "recursive (airflow.providers.standard.sensors.filesystem.filesensor attribute)": [[29, "airflow.providers.standard.sensors.filesystem.FileSensor.recursive", false]], "recursive (airflow.providers.standard.triggers.file.filetrigger attribute)": [[36, "airflow.providers.standard.triggers.file.FileTrigger.recursive", false]], "reset_dag_run (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.reset_dag_run", false]], "retry_exit_code (airflow.providers.standard.sensors.bash.bashsensor attribute)": [[26, "airflow.providers.standard.sensors.bash.BashSensor.retry_exit_code", false]], "run() (airflow.providers.standard.triggers.external_task.dagstatetrigger method)": [[35, "airflow.providers.standard.triggers.external_task.DagStateTrigger.run", false]], "run() (airflow.providers.standard.triggers.external_task.workflowtrigger method)": [[35, "airflow.providers.standard.triggers.external_task.WorkflowTrigger.run", false]], "run() (airflow.providers.standard.triggers.file.filedeletetrigger method)": [[36, "airflow.providers.standard.triggers.file.FileDeleteTrigger.run", false]], "run() (airflow.providers.standard.triggers.file.filetrigger method)": [[36, "airflow.providers.standard.triggers.file.FileTrigger.run", false]], "run() (airflow.providers.standard.triggers.temporal.datetimetrigger method)": [[38, "airflow.providers.standard.triggers.temporal.DateTimeTrigger.run", false]], "run_command() (airflow.providers.standard.hooks.subprocess.subprocesshook method)": [[14, "airflow.providers.standard.hooks.subprocess.SubprocessHook.run_command", false]], "run_ids (airflow.providers.standard.triggers.external_task.dagstatetrigger attribute)": [[35, "airflow.providers.standard.triggers.external_task.DagStateTrigger.run_ids", false]], "run_ids (airflow.providers.standard.triggers.external_task.workflowtrigger attribute)": [[35, "airflow.providers.standard.triggers.external_task.WorkflowTrigger.run_ids", false]], "run_this_first (in module tests.system.standard.example_branch_operator)": [[49, "tests.system.standard.example_branch_operator.run_this_first", false]], "run_this_first (in module tests.system.standard.example_branch_operator_decorator)": [[50, "tests.system.standard.example_branch_operator_decorator.run_this_first", false]], "run_this_last (in module tests.system.standard.example_bash_operator)": [[46, "tests.system.standard.example_bash_operator.run_this_last", false]], "saturday (airflow.providers.standard.utils.weekday.weekday attribute)": [[43, "airflow.providers.standard.utils.weekday.WeekDay.SATURDAY", false]], "send_sigterm() (airflow.providers.standard.hooks.subprocess.subprocesshook method)": [[14, "airflow.providers.standard.hooks.subprocess.SubprocessHook.send_sigterm", false]], "sensor_task() (in module airflow.providers.standard.decorators.sensor)": [[8, "airflow.providers.standard.decorators.sensor.sensor_task", false]], "serialize() (airflow.providers.standard.triggers.external_task.dagstatetrigger method)": [[35, "airflow.providers.standard.triggers.external_task.DagStateTrigger.serialize", false]], "serialize() (airflow.providers.standard.triggers.external_task.workflowtrigger method)": [[35, "airflow.providers.standard.triggers.external_task.WorkflowTrigger.serialize", false]], "serialize() (airflow.providers.standard.triggers.file.filedeletetrigger method)": [[36, "airflow.providers.standard.triggers.file.FileDeleteTrigger.serialize", false]], "serialize() (airflow.providers.standard.triggers.file.filetrigger method)": [[36, "airflow.providers.standard.triggers.file.FileTrigger.serialize", false]], "serialize() (airflow.providers.standard.triggers.temporal.datetimetrigger method)": [[38, "airflow.providers.standard.triggers.temporal.DateTimeTrigger.serialize", false]], "shallow_copy_attrs (airflow.providers.standard.decorators.sensor.decoratedsensoroperator attribute)": [[8, "airflow.providers.standard.decorators.sensor.DecoratedSensorOperator.shallow_copy_attrs", false]], "shallow_copy_attrs (airflow.providers.standard.operators.python.pythonoperator attribute)": [[22, "airflow.providers.standard.operators.python.PythonOperator.shallow_copy_attrs", false]], "short_circuit_task() (in module airflow.providers.standard.decorators.short_circuit)": [[9, "airflow.providers.standard.decorators.short_circuit.short_circuit_task", false]], "shortcircuitoperator (class in airflow.providers.standard.operators.python)": [[22, "airflow.providers.standard.operators.python.ShortCircuitOperator", false]], "show_return_value_in_logs (airflow.providers.standard.operators.python.pythonoperator attribute)": [[22, "airflow.providers.standard.operators.python.PythonOperator.show_return_value_in_logs", false]], "skip() (airflow.providers.standard.utils.skipmixin.skipmixin method)": [[42, "airflow.providers.standard.utils.skipmixin.SkipMixin.skip", false]], "skip_all_except() (airflow.providers.standard.utils.skipmixin.skipmixin method)": [[42, "airflow.providers.standard.utils.skipmixin.SkipMixin.skip_all_except", false]], "skip_on_exit_code (airflow.providers.standard.operators.bash.bashoperator attribute)": [[16, "airflow.providers.standard.operators.bash.BashOperator.skip_on_exit_code", false]], "skip_when_already_exists (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.skip_when_already_exists", false]], "skipmixin (class in airflow.providers.standard.utils.skipmixin)": [[42, "airflow.providers.standard.utils.skipmixin.SkipMixin", false]], "skipped_states (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.skipped_states", false]], "skipped_states (airflow.providers.standard.triggers.external_task.workflowtrigger attribute)": [[35, "airflow.providers.standard.triggers.external_task.WorkflowTrigger.skipped_states", false]], "smoothoperator (class in airflow.providers.standard.operators.smooth)": [[23, "airflow.providers.standard.operators.smooth.SmoothOperator", false]], "soft_fail (airflow.providers.standard.triggers.external_task.workflowtrigger attribute)": [[35, "airflow.providers.standard.triggers.external_task.WorkflowTrigger.soft_fail", false]], "start (in module tests.system.standard.example_external_task_parent_deferrable)": [[53, "tests.system.standard.example_external_task_parent_deferrable.start", false]], "start_date (in module tests.system.standard.example_external_task_marker_dag)": [[52, "tests.system.standard.example_external_task_marker_dag.start_date", false]], "start_from_trigger (airflow.providers.standard.sensors.date_time.datetimesensorasync attribute)": [[27, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync.start_from_trigger", false]], "start_from_trigger (airflow.providers.standard.sensors.filesystem.filesensor attribute)": [[29, "airflow.providers.standard.sensors.filesystem.FileSensor.start_from_trigger", false]], "start_from_trigger (airflow.providers.standard.sensors.time.timesensorasync attribute)": [[32, "airflow.providers.standard.sensors.time.TimeSensorAsync.start_from_trigger", false]], "start_trigger_args (airflow.providers.standard.sensors.date_time.datetimesensorasync attribute)": [[27, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync.start_trigger_args", false]], "start_trigger_args (airflow.providers.standard.sensors.filesystem.filesensor attribute)": [[29, "airflow.providers.standard.sensors.filesystem.FileSensor.start_trigger_args", false]], "start_trigger_args (airflow.providers.standard.sensors.time.timesensorasync attribute)": [[32, "airflow.providers.standard.sensors.time.TimeSensorAsync.start_trigger_args", false]], "starttriggerargs (class in airflow.providers.standard.sensors.date_time)": [[27, "airflow.providers.standard.sensors.date_time.StartTriggerArgs", false]], "starttriggerargs (class in airflow.providers.standard.sensors.filesystem)": [[29, "airflow.providers.standard.sensors.filesystem.StartTriggerArgs", false]], "starttriggerargs (class in airflow.providers.standard.sensors.time)": [[32, "airflow.providers.standard.sensors.time.StartTriggerArgs", false]], "states (airflow.providers.standard.triggers.external_task.dagstatetrigger attribute)": [[35, "airflow.providers.standard.triggers.external_task.DagStateTrigger.states", false]], "sub_process (airflow.providers.standard.hooks.subprocess.subprocesshook attribute)": [[14, "airflow.providers.standard.hooks.subprocess.SubprocessHook.sub_process", false]], "subprocess_hook (airflow.providers.standard.operators.bash.bashoperator property)": [[16, "airflow.providers.standard.operators.bash.BashOperator.subprocess_hook", false]], "subprocesshook (class in airflow.providers.standard.hooks.subprocess)": [[14, "airflow.providers.standard.hooks.subprocess.SubprocessHook", false]], "subprocessresult (class in airflow.providers.standard.hooks.subprocess)": [[14, "airflow.providers.standard.hooks.subprocess.SubprocessResult", false]], "success_callable() (in module tests.system.standard.example_sensors)": [[58, "tests.system.standard.example_sensors.success_callable", false]], "sunday (airflow.providers.standard.utils.weekday.weekday attribute)": [[43, "airflow.providers.standard.utils.weekday.WeekDay.SUNDAY", false]], "system_site_packages (airflow.providers.standard.operators.python.pythonvirtualenvoperator attribute)": [[22, "airflow.providers.standard.operators.python.PythonVirtualenvOperator.system_site_packages", false]], "t0 (in module tests.system.standard.example_sensors)": [[58, "tests.system.standard.example_sensors.t0", false]], "target_datetime (airflow.providers.standard.sensors.time.timesensorasync attribute)": [[32, "airflow.providers.standard.sensors.time.TimeSensorAsync.target_datetime", false]], "target_lower (airflow.providers.standard.operators.datetime.branchdatetimeoperator attribute)": [[18, "airflow.providers.standard.operators.datetime.BranchDateTimeOperator.target_lower", false]], "target_time (airflow.providers.standard.sensors.time.timesensor attribute)": [[32, "airflow.providers.standard.sensors.time.TimeSensor.target_time", false]], "target_time (airflow.providers.standard.sensors.time.timesensorasync attribute)": [[32, "airflow.providers.standard.sensors.time.TimeSensorAsync.target_time", false]], "target_times_as_dates() (in module airflow.providers.standard.operators.datetime)": [[18, "airflow.providers.standard.operators.datetime.target_times_as_dates", false]], "target_upper (airflow.providers.standard.operators.datetime.branchdatetimeoperator attribute)": [[18, "airflow.providers.standard.operators.datetime.BranchDateTimeOperator.target_upper", false]], "template_ext (airflow.providers.standard.operators.bash.bashoperator attribute)": [[16, "airflow.providers.standard.operators.bash.BashOperator.template_ext", false]], "template_ext (airflow.providers.standard.operators.python.pythonvirtualenvoperator attribute)": [[22, "airflow.providers.standard.operators.python.PythonVirtualenvOperator.template_ext", false]], "template_fields (airflow.providers.standard.decorators.sensor.decoratedsensoroperator attribute)": [[8, "airflow.providers.standard.decorators.sensor.DecoratedSensorOperator.template_fields", false]], "template_fields (airflow.providers.standard.operators.bash.bashoperator attribute)": [[16, "airflow.providers.standard.operators.bash.BashOperator.template_fields", false]], "template_fields (airflow.providers.standard.operators.python.externalpythonoperator attribute)": [[22, "airflow.providers.standard.operators.python.ExternalPythonOperator.template_fields", false]], "template_fields (airflow.providers.standard.operators.python.pythonoperator attribute)": [[22, "airflow.providers.standard.operators.python.PythonOperator.template_fields", false]], "template_fields (airflow.providers.standard.operators.python.pythonvirtualenvoperator attribute)": [[22, "airflow.providers.standard.operators.python.PythonVirtualenvOperator.template_fields", false]], "template_fields (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.template_fields", false]], "template_fields (airflow.providers.standard.sensors.bash.bashsensor attribute)": [[26, "airflow.providers.standard.sensors.bash.BashSensor.template_fields", false]], "template_fields (airflow.providers.standard.sensors.date_time.datetimesensor attribute)": [[27, "airflow.providers.standard.sensors.date_time.DateTimeSensor.template_fields", false]], "template_fields (airflow.providers.standard.sensors.external_task.externaltaskmarker attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskMarker.template_fields", false]], "template_fields (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.template_fields", false]], "template_fields (airflow.providers.standard.sensors.filesystem.filesensor attribute)": [[29, "airflow.providers.standard.sensors.filesystem.FileSensor.template_fields", false]], "template_fields (airflow.providers.standard.sensors.python.pythonsensor attribute)": [[31, "airflow.providers.standard.sensors.python.PythonSensor.template_fields", false]], "template_fields_renderers (airflow.providers.standard.decorators.sensor.decoratedsensoroperator attribute)": [[8, "airflow.providers.standard.decorators.sensor.DecoratedSensorOperator.template_fields_renderers", false]], "template_fields_renderers (airflow.providers.standard.operators.bash.bashoperator attribute)": [[16, "airflow.providers.standard.operators.bash.BashOperator.template_fields_renderers", false]], "template_fields_renderers (airflow.providers.standard.operators.python.pythonoperator attribute)": [[22, "airflow.providers.standard.operators.python.PythonOperator.template_fields_renderers", false]], "template_fields_renderers (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.template_fields_renderers", false]], "templates_dict (airflow.providers.standard.operators.python.pythonoperator attribute)": [[22, "airflow.providers.standard.operators.python.PythonOperator.templates_dict", false]], "templates_dict (airflow.providers.standard.sensors.python.pythonsensor attribute)": [[31, "airflow.providers.standard.sensors.python.PythonSensor.templates_dict", false]], "test_connection() (airflow.providers.standard.hooks.filesystem.fshook method)": [[11, "airflow.providers.standard.hooks.filesystem.FSHook.test_connection", false]], "test_connection() (airflow.providers.standard.hooks.package_index.packageindexhook method)": [[13, "airflow.providers.standard.hooks.package_index.PackageIndexHook.test_connection", false]], "test_run (in module tests.system.standard.example_bash_decorator)": [[45, "tests.system.standard.example_bash_decorator.test_run", false]], "test_run (in module tests.system.standard.example_bash_operator)": [[46, "tests.system.standard.example_bash_operator.test_run", false]], "test_run (in module tests.system.standard.example_branch_datetime_operator)": [[47, "tests.system.standard.example_branch_datetime_operator.test_run", false]], "test_run (in module tests.system.standard.example_branch_day_of_week_operator)": [[48, "tests.system.standard.example_branch_day_of_week_operator.test_run", false]], "test_run (in module tests.system.standard.example_branch_operator)": [[49, "tests.system.standard.example_branch_operator.test_run", false]], "test_run (in module tests.system.standard.example_branch_operator_decorator)": [[50, "tests.system.standard.example_branch_operator_decorator.test_run", false]], "test_run (in module tests.system.standard.example_external_task_child_deferrable)": [[51, "tests.system.standard.example_external_task_child_deferrable.test_run", false]], "test_run (in module tests.system.standard.example_external_task_marker_dag)": [[52, "tests.system.standard.example_external_task_marker_dag.test_run", false]], "test_run (in module tests.system.standard.example_external_task_parent_deferrable)": [[53, "tests.system.standard.example_external_task_parent_deferrable.test_run", false]], "test_run (in module tests.system.standard.example_latest_only)": [[54, "tests.system.standard.example_latest_only.test_run", false]], "test_run (in module tests.system.standard.example_python_decorator)": [[55, "tests.system.standard.example_python_decorator.test_run", false]], "test_run (in module tests.system.standard.example_python_operator)": [[56, "tests.system.standard.example_python_operator.test_run", false]], "test_run (in module tests.system.standard.example_sensor_decorator)": [[57, "tests.system.standard.example_sensor_decorator.test_run", false]], "test_run (in module tests.system.standard.example_sensors)": [[58, "tests.system.standard.example_sensors.test_run", false]], "test_run (in module tests.system.standard.example_short_circuit_decorator)": [[59, "tests.system.standard.example_short_circuit_decorator.test_run", false]], "test_run (in module tests.system.standard.example_short_circuit_operator)": [[60, "tests.system.standard.example_short_circuit_operator.test_run", false]], "test_run (in module tests.system.standard.example_trigger_controller_dag)": [[61, "tests.system.standard.example_trigger_controller_dag.test_run", false]], "test_run2 (in module tests.system.standard.example_branch_datetime_operator)": [[47, "tests.system.standard.example_branch_datetime_operator.test_run2", false]], "test_run3 (in module tests.system.standard.example_branch_datetime_operator)": [[47, "tests.system.standard.example_branch_datetime_operator.test_run3", false]], "tests.system.standard": [[62, "module-tests.system.standard", false]], "tests.system.standard.example_bash_decorator": [[45, "module-tests.system.standard.example_bash_decorator", false]], "tests.system.standard.example_bash_operator": [[46, "module-tests.system.standard.example_bash_operator", false]], "tests.system.standard.example_branch_datetime_operator": [[47, "module-tests.system.standard.example_branch_datetime_operator", false]], "tests.system.standard.example_branch_day_of_week_operator": [[48, "module-tests.system.standard.example_branch_day_of_week_operator", false]], "tests.system.standard.example_branch_operator": [[49, "module-tests.system.standard.example_branch_operator", false]], "tests.system.standard.example_branch_operator_decorator": [[50, "module-tests.system.standard.example_branch_operator_decorator", false]], "tests.system.standard.example_external_task_child_deferrable": [[51, "module-tests.system.standard.example_external_task_child_deferrable", false]], "tests.system.standard.example_external_task_marker_dag": [[52, "module-tests.system.standard.example_external_task_marker_dag", false]], "tests.system.standard.example_external_task_parent_deferrable": [[53, "module-tests.system.standard.example_external_task_parent_deferrable", false]], "tests.system.standard.example_latest_only": [[54, "module-tests.system.standard.example_latest_only", false]], "tests.system.standard.example_python_decorator": [[55, "module-tests.system.standard.example_python_decorator", false]], "tests.system.standard.example_python_operator": [[56, "module-tests.system.standard.example_python_operator", false]], "tests.system.standard.example_sensor_decorator": [[57, "module-tests.system.standard.example_sensor_decorator", false]], "tests.system.standard.example_sensors": [[58, "module-tests.system.standard.example_sensors", false]], "tests.system.standard.example_short_circuit_decorator": [[59, "module-tests.system.standard.example_short_circuit_decorator", false]], "tests.system.standard.example_short_circuit_operator": [[60, "module-tests.system.standard.example_short_circuit_operator", false]], "tests.system.standard.example_trigger_controller_dag": [[61, "module-tests.system.standard.example_trigger_controller_dag", false]], "tests.system.standard.sql": [[63, "module-tests.system.standard.sql", false]], "this_will_skip (in module tests.system.standard.example_bash_operator)": [[46, "tests.system.standard.example_bash_operator.this_will_skip", false]], "thursday (airflow.providers.standard.utils.weekday.weekday attribute)": [[43, "airflow.providers.standard.utils.weekday.WeekDay.THURSDAY", false]], "timedeltasensor (class in airflow.providers.standard.sensors.time_delta)": [[33, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensor", false]], "timedeltasensorasync (class in airflow.providers.standard.sensors.time_delta)": [[33, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensorAsync", false]], "timedeltatrigger (class in airflow.providers.standard.triggers.temporal)": [[38, "airflow.providers.standard.triggers.temporal.TimeDeltaTrigger", false]], "timeout (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[27, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.timeout", false]], "timeout (airflow.providers.standard.sensors.filesystem.starttriggerargs attribute)": [[29, "airflow.providers.standard.sensors.filesystem.StartTriggerArgs.timeout", false]], "timeout (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[32, "airflow.providers.standard.sensors.time.StartTriggerArgs.timeout", false]], "timesensor (class in airflow.providers.standard.sensors.time)": [[32, "airflow.providers.standard.sensors.time.TimeSensor", false]], "timesensorasync (class in airflow.providers.standard.sensors.time)": [[32, "airflow.providers.standard.sensors.time.TimeSensorAsync", false]], "trigger (in module tests.system.standard.example_trigger_controller_dag)": [[61, "tests.system.standard.example_trigger_controller_dag.trigger", false]], "trigger_cls (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[27, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.trigger_cls", false]], "trigger_cls (airflow.providers.standard.sensors.filesystem.starttriggerargs attribute)": [[29, "airflow.providers.standard.sensors.filesystem.StartTriggerArgs.trigger_cls", false]], "trigger_cls (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[32, "airflow.providers.standard.sensors.time.StartTriggerArgs.trigger_cls", false]], "trigger_dag_id (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.trigger_dag_id", false]], "trigger_kwargs (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[27, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.trigger_kwargs", false]], "trigger_kwargs (airflow.providers.standard.sensors.filesystem.starttriggerargs attribute)": [[29, "airflow.providers.standard.sensors.filesystem.StartTriggerArgs.trigger_kwargs", false]], "trigger_kwargs (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[32, "airflow.providers.standard.sensors.time.StartTriggerArgs.trigger_kwargs", false]], "trigger_run_id (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.trigger_run_id", false]], "triggerdagrunlink (class in airflow.providers.standard.operators.trigger_dagrun)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunLink", false]], "triggerdagrunoperator (class in airflow.providers.standard.operators.trigger_dagrun)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator", false]], "tuesday (airflow.providers.standard.utils.weekday.weekday attribute)": [[43, "airflow.providers.standard.utils.weekday.WeekDay.TUESDAY", false]], "tutorial_etl_dag (in module tests.system.standard.example_sensor_decorator)": [[57, "tests.system.standard.example_sensor_decorator.tutorial_etl_dag", false]], "ui_color (airflow.providers.standard.operators.bash.bashoperator attribute)": [[16, "airflow.providers.standard.operators.bash.BashOperator.ui_color", false]], "ui_color (airflow.providers.standard.operators.empty.emptyoperator attribute)": [[19, "airflow.providers.standard.operators.empty.EmptyOperator.ui_color", false]], "ui_color (airflow.providers.standard.operators.latest_only.latestonlyoperator attribute)": [[21, "airflow.providers.standard.operators.latest_only.LatestOnlyOperator.ui_color", false]], "ui_color (airflow.providers.standard.operators.python.pythonoperator attribute)": [[22, "airflow.providers.standard.operators.python.PythonOperator.ui_color", false]], "ui_color (airflow.providers.standard.operators.smooth.smoothoperator attribute)": [[23, "airflow.providers.standard.operators.smooth.SmoothOperator.ui_color", false]], "ui_color (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.ui_color", false]], "ui_color (airflow.providers.standard.sensors.external_task.externaltaskmarker attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskMarker.ui_color", false]], "ui_color (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[28, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.ui_color", false]], "ui_color (airflow.providers.standard.sensors.filesystem.filesensor attribute)": [[29, "airflow.providers.standard.sensors.filesystem.FileSensor.ui_color", false]], "use_task_logical_date (airflow.providers.standard.operators.datetime.branchdatetimeoperator attribute)": [[18, "airflow.providers.standard.operators.datetime.BranchDateTimeOperator.use_task_logical_date", false]], "use_task_logical_date (airflow.providers.standard.operators.weekday.branchdayofweekoperator attribute)": [[25, "airflow.providers.standard.operators.weekday.BranchDayOfWeekOperator.use_task_logical_date", false]], "use_task_logical_date (airflow.providers.standard.sensors.weekday.dayofweeksensor attribute)": [[34, "airflow.providers.standard.sensors.weekday.DayOfWeekSensor.use_task_logical_date", false]], "validate_count_dags_af_3() (airflow.providers.standard.triggers.external_task.dagstatetrigger method)": [[35, "airflow.providers.standard.triggers.external_task.DagStateTrigger.validate_count_dags_af_3", false]], "validate_week_day() (airflow.providers.standard.utils.weekday.weekday class method)": [[43, "airflow.providers.standard.utils.weekday.WeekDay.validate_week_day", false]], "venv_cache_path (airflow.providers.standard.operators.python.pythonvirtualenvoperator attribute)": [[22, "airflow.providers.standard.operators.python.PythonVirtualenvOperator.venv_cache_path", false]], "virtualenv_task() (in module airflow.providers.standard.decorators.python_virtualenv)": [[7, "airflow.providers.standard.decorators.python_virtualenv.virtualenv_task", false]], "wait_for_completion (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[24, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.wait_for_completion", false]], "waitsensor (class in airflow.providers.standard.sensors.time_delta)": [[33, "airflow.providers.standard.sensors.time_delta.WaitSensor", false]], "wednesday (airflow.providers.standard.utils.weekday.weekday attribute)": [[43, "airflow.providers.standard.utils.weekday.WeekDay.WEDNESDAY", false]], "week_day (airflow.providers.standard.operators.weekday.branchdayofweekoperator attribute)": [[25, "airflow.providers.standard.operators.weekday.BranchDayOfWeekOperator.week_day", false]], "week_day (airflow.providers.standard.sensors.weekday.dayofweeksensor attribute)": [[34, "airflow.providers.standard.sensors.weekday.DayOfWeekSensor.week_day", false]], "weekday (class in airflow.providers.standard.utils.weekday)": [[43, "airflow.providers.standard.utils.weekday.WeekDay", false]], "workflowtrigger (class in airflow.providers.standard.triggers.external_task)": [[35, "airflow.providers.standard.triggers.external_task.WorkflowTrigger", false]], "working_directory() (in module airflow.providers.standard.hooks.subprocess)": [[14, "airflow.providers.standard.hooks.subprocess.working_directory", false]], "write_python_script() (in module airflow.providers.standard.utils.python_virtualenv)": [[40, "airflow.providers.standard.utils.python_virtualenv.write_python_script", false]], "xcom_logical_date_iso (in module airflow.providers.standard.operators.trigger_dagrun)": [[24, "airflow.providers.standard.operators.trigger_dagrun.XCOM_LOGICAL_DATE_ISO", false]], "xcom_run_id (in module airflow.providers.standard.operators.trigger_dagrun)": [[24, "airflow.providers.standard.operators.trigger_dagrun.XCOM_RUN_ID", false]], "xcom_skipmixin_followed (in module airflow.providers.standard.utils.skipmixin)": [[42, "airflow.providers.standard.utils.skipmixin.XCOM_SKIPMIXIN_FOLLOWED", false]], "xcom_skipmixin_key (in module airflow.providers.standard.utils.skipmixin)": [[42, "airflow.providers.standard.utils.skipmixin.XCOM_SKIPMIXIN_KEY", false]], "xcom_skipmixin_skipped (in module airflow.providers.standard.utils.skipmixin)": [[42, "airflow.providers.standard.utils.skipmixin.XCOM_SKIPMIXIN_SKIPPED", false]], "yt_link (airflow.providers.standard.operators.smooth.smoothoperator attribute)": [[23, "airflow.providers.standard.operators.smooth.SmoothOperator.yt_link", false]]}, "objects": {"airflow.providers": [[15, 0, 0, "-", "standard"]], "airflow.providers.standard": [[15, 1, 1, "", "__version__"], [5, 0, 0, "-", "decorators"], [10, 0, 0, "-", "get_provider_info"], [12, 0, 0, "-", "hooks"], [20, 0, 0, "-", "operators"], [30, 0, 0, "-", "sensors"], [37, 0, 0, "-", "triggers"], [39, 0, 0, "-", "utils"], [44, 0, 0, "-", "version_compat"]], "airflow.providers.standard.decorators": [[0, 0, 0, "-", "bash"], [1, 0, 0, "-", "branch_external_python"], [2, 0, 0, "-", "branch_python"], [3, 0, 0, "-", "branch_virtualenv"], [4, 0, 0, "-", "external_python"], [6, 0, 0, "-", "python"], [7, 0, 0, "-", "python_virtualenv"], [8, 0, 0, "-", "sensor"], [9, 0, 0, "-", "short_circuit"]], "airflow.providers.standard.decorators.bash": [[0, 2, 1, "", "bash_task"]], "airflow.providers.standard.decorators.branch_external_python": [[1, 2, 1, "", "branch_external_python_task"]], "airflow.providers.standard.decorators.branch_python": [[2, 2, 1, "", "branch_task"]], "airflow.providers.standard.decorators.branch_virtualenv": [[3, 2, 1, "", "branch_virtualenv_task"]], "airflow.providers.standard.decorators.external_python": [[4, 2, 1, "", "external_python_task"]], "airflow.providers.standard.decorators.python": [[6, 2, 1, "", "python_task"]], "airflow.providers.standard.decorators.python_virtualenv": [[7, 2, 1, "", "virtualenv_task"]], "airflow.providers.standard.decorators.sensor": [[8, 3, 1, "", "DecoratedSensorOperator"], [8, 2, 1, "", "sensor_task"]], "airflow.providers.standard.decorators.sensor.DecoratedSensorOperator": [[8, 4, 1, "", "custom_operator_name"], [8, 4, 1, "", "shallow_copy_attrs"], [8, 4, 1, "", "template_fields"], [8, 4, 1, "", "template_fields_renderers"]], "airflow.providers.standard.decorators.short_circuit": [[9, 2, 1, "", "short_circuit_task"]], "airflow.providers.standard.get_provider_info": [[10, 2, 1, "", "get_provider_info"]], "airflow.providers.standard.hooks": [[11, 0, 0, "-", "filesystem"], [13, 0, 0, "-", "package_index"], [14, 0, 0, "-", "subprocess"]], "airflow.providers.standard.hooks.filesystem": [[11, 3, 1, "", "FSHook"]], "airflow.providers.standard.hooks.filesystem.FSHook": [[11, 4, 1, "", "basepath"], [11, 4, 1, "", "conn"], [11, 4, 1, "", "conn_name_attr"], [11, 4, 1, "", "conn_type"], [11, 4, 1, "", "default_conn_name"], [11, 5, 1, "", "get_conn"], [11, 5, 1, "", "get_connection_form_widgets"], [11, 5, 1, "", "get_path"], [11, 5, 1, "", "get_ui_field_behaviour"], [11, 4, 1, "", "hook_name"], [11, 5, 1, "", "test_connection"]], "airflow.providers.standard.hooks.package_index": [[13, 3, 1, "", "PackageIndexHook"]], "airflow.providers.standard.hooks.package_index.PackageIndexHook": [[13, 4, 1, "", "conn"], [13, 4, 1, "", "conn_name_attr"], [13, 4, 1, "", "conn_type"], [13, 4, 1, "", "default_conn_name"], [13, 5, 1, "", "get_conn"], [13, 5, 1, "", "get_connection_url"], [13, 5, 1, "", "get_ui_field_behaviour"], [13, 4, 1, "", "hook_name"], [13, 4, 1, "", "pi_conn_id"], [13, 5, 1, "", "test_connection"]], "airflow.providers.standard.hooks.subprocess": [[14, 3, 1, "", "SubprocessHook"], [14, 3, 1, "", "SubprocessResult"], [14, 2, 1, "", "working_directory"]], "airflow.providers.standard.hooks.subprocess.SubprocessHook": [[14, 5, 1, "", "run_command"], [14, 5, 1, "", "send_sigterm"], [14, 4, 1, "", "sub_process"]], "airflow.providers.standard.hooks.subprocess.SubprocessResult": [[14, 4, 1, "", "exit_code"], [14, 4, 1, "", "output"]], "airflow.providers.standard.operators": [[16, 0, 0, "-", "bash"], [17, 0, 0, "-", "branch"], [18, 0, 0, "-", "datetime"], [19, 0, 0, "-", "empty"], [21, 0, 0, "-", "latest_only"], [22, 0, 0, "-", "python"], [23, 0, 0, "-", "smooth"], [24, 0, 0, "-", "trigger_dagrun"], [25, 0, 0, "-", "weekday"]], "airflow.providers.standard.operators.bash": [[16, 3, 1, "", "BashOperator"]], "airflow.providers.standard.operators.bash.BashOperator": [[16, 4, 1, "", "append_env"], [16, 4, 1, "", "bash_command"], [16, 4, 1, "", "cwd"], [16, 4, 1, "", "env"], [16, 5, 1, "", "execute"], [16, 5, 1, "", "get_env"], [16, 5, 1, "", "on_kill"], [16, 4, 1, "", "output_encoding"], [16, 4, 1, "", "output_processor"], [16, 4, 1, "", "skip_on_exit_code"], [16, 6, 1, "", "subprocess_hook"], [16, 4, 1, "", "template_ext"], [16, 4, 1, "", "template_fields"], [16, 4, 1, "", "template_fields_renderers"], [16, 4, 1, "", "ui_color"]], "airflow.providers.standard.operators.branch": [[17, 3, 1, "", "BaseBranchOperator"], [17, 3, 1, "", "BranchMixIn"]], "airflow.providers.standard.operators.branch.BaseBranchOperator": [[17, 5, 1, "", "choose_branch"], [17, 5, 1, "", "execute"], [17, 4, 1, "", "inherits_from_skipmixin"]], "airflow.providers.standard.operators.branch.BranchMixIn": [[17, 5, 1, "", "do_branch"]], "airflow.providers.standard.operators.datetime": [[18, 3, 1, "", "BranchDateTimeOperator"], [18, 2, 1, "", "target_times_as_dates"]], "airflow.providers.standard.operators.datetime.BranchDateTimeOperator": [[18, 5, 1, "", "choose_branch"], [18, 4, 1, "", "follow_task_ids_if_false"], [18, 4, 1, "", "follow_task_ids_if_true"], [18, 4, 1, "", "target_lower"], [18, 4, 1, "", "target_upper"], [18, 4, 1, "", "use_task_logical_date"]], "airflow.providers.standard.operators.empty": [[19, 3, 1, "", "EmptyOperator"]], "airflow.providers.standard.operators.empty.EmptyOperator": [[19, 5, 1, "", "execute"], [19, 4, 1, "", "inherits_from_empty_operator"], [19, 4, 1, "", "ui_color"]], "airflow.providers.standard.operators.latest_only": [[21, 3, 1, "", "LatestOnlyOperator"]], "airflow.providers.standard.operators.latest_only.LatestOnlyOperator": [[21, 5, 1, "", "choose_branch"], [21, 4, 1, "", "ui_color"]], "airflow.providers.standard.operators.python": [[22, 3, 1, "", "BranchExternalPythonOperator"], [22, 3, 1, "", "BranchPythonOperator"], [22, 3, 1, "", "BranchPythonVirtualenvOperator"], [22, 3, 1, "", "ExternalPythonOperator"], [22, 3, 1, "", "PythonOperator"], [22, 3, 1, "", "PythonVirtualenvOperator"], [22, 3, 1, "", "ShortCircuitOperator"], [22, 2, 1, "", "get_current_context"], [22, 1, 1, "", "log"]], "airflow.providers.standard.operators.python.BranchExternalPythonOperator": [[22, 5, 1, "", "execute"]], "airflow.providers.standard.operators.python.BranchPythonOperator": [[22, 5, 1, "", "execute"], [22, 4, 1, "", "inherits_from_skipmixin"]], "airflow.providers.standard.operators.python.BranchPythonVirtualenvOperator": [[22, 5, 1, "", "execute"], [22, 4, 1, "", "inherits_from_skipmixin"]], "airflow.providers.standard.operators.python.ExternalPythonOperator": [[22, 5, 1, "", "execute_callable"], [22, 4, 1, "", "expect_pendulum"], [22, 4, 1, "", "python"], [22, 4, 1, "", "template_fields"]], "airflow.providers.standard.operators.python.PythonOperator": [[22, 4, 1, "", "BLUE"], [22, 5, 1, "", "determine_kwargs"], [22, 5, 1, "", "execute"], [22, 5, 1, "", "execute_callable"], [22, 4, 1, "", "op_args"], [22, 4, 1, "", "op_kwargs"], [22, 4, 1, "", "python_callable"], [22, 4, 1, "", "shallow_copy_attrs"], [22, 4, 1, "", "show_return_value_in_logs"], [22, 4, 1, "", "template_fields"], [22, 4, 1, "", "template_fields_renderers"], [22, 4, 1, "", "templates_dict"], [22, 4, 1, "", "ui_color"]], "airflow.providers.standard.operators.python.PythonVirtualenvOperator": [[22, 5, 1, "", "execute_callable"], [22, 4, 1, "", "pip_install_options"], [22, 4, 1, "", "python_version"], [22, 4, 1, "", "system_site_packages"], [22, 4, 1, "", "template_ext"], [22, 4, 1, "", "template_fields"], [22, 4, 1, "", "venv_cache_path"]], "airflow.providers.standard.operators.python.ShortCircuitOperator": [[22, 5, 1, "", "execute"], [22, 4, 1, "", "ignore_downstream_trigger_rules"], [22, 4, 1, "", "inherits_from_skipmixin"]], "airflow.providers.standard.operators.smooth": [[23, 3, 1, "", "SmoothOperator"]], "airflow.providers.standard.operators.smooth.SmoothOperator": [[23, 5, 1, "", "execute"], [23, 4, 1, "", "ui_color"], [23, 4, 1, "", "yt_link"]], "airflow.providers.standard.operators.trigger_dagrun": [[24, 7, 1, "", "DagIsPaused"], [24, 3, 1, "", "TriggerDagRunLink"], [24, 3, 1, "", "TriggerDagRunOperator"], [24, 1, 1, "", "XCOM_LOGICAL_DATE_ISO"], [24, 1, 1, "", "XCOM_RUN_ID"]], "airflow.providers.standard.operators.trigger_dagrun.DagIsPaused": [[24, 5, 1, "", "__str__"], [24, 4, 1, "", "dag_id"]], "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunLink": [[24, 5, 1, "", "get_link"], [24, 4, 1, "", "name"]], "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator": [[24, 4, 1, "", "conf"], [24, 5, 1, "", "execute"], [24, 5, 1, "", "execute_complete"], [24, 4, 1, "", "fail_when_dag_is_paused"], [24, 4, 1, "", "logical_date"], [24, 4, 1, "", "operator_extra_links"], [24, 4, 1, "", "poke_interval"], [24, 4, 1, "", "reset_dag_run"], [24, 4, 1, "", "skip_when_already_exists"], [24, 4, 1, "", "template_fields"], [24, 4, 1, "", "template_fields_renderers"], [24, 4, 1, "", "trigger_dag_id"], [24, 4, 1, "", "trigger_run_id"], [24, 4, 1, "", "ui_color"], [24, 4, 1, "", "wait_for_completion"]], "airflow.providers.standard.operators.weekday": [[25, 3, 1, "", "BranchDayOfWeekOperator"]], "airflow.providers.standard.operators.weekday.BranchDayOfWeekOperator": [[25, 5, 1, "", "choose_branch"], [25, 4, 1, "", "follow_task_ids_if_false"], [25, 4, 1, "", "follow_task_ids_if_true"], [25, 4, 1, "", "use_task_logical_date"], [25, 4, 1, "", "week_day"]], "airflow.providers.standard.sensors": [[26, 0, 0, "-", "bash"], [27, 0, 0, "-", "date_time"], [28, 0, 0, "-", "external_task"], [29, 0, 0, "-", "filesystem"], [31, 0, 0, "-", "python"], [32, 0, 0, "-", "time"], [33, 0, 0, "-", "time_delta"], [34, 0, 0, "-", "weekday"]], "airflow.providers.standard.sensors.bash": [[26, 3, 1, "", "BashSensor"]], "airflow.providers.standard.sensors.bash.BashSensor": [[26, 4, 1, "", "bash_command"], [26, 4, 1, "", "env"], [26, 4, 1, "", "output_encoding"], [26, 5, 1, "", "poke"], [26, 4, 1, "", "retry_exit_code"], [26, 4, 1, "", "template_fields"]], "airflow.providers.standard.sensors.date_time": [[27, 3, 1, "", "DateTimeSensor"], [27, 3, 1, "", "DateTimeSensorAsync"], [27, 3, 1, "", "StartTriggerArgs"]], "airflow.providers.standard.sensors.date_time.DateTimeSensor": [[27, 5, 1, "", "poke"], [27, 4, 1, "", "template_fields"]], "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync": [[27, 4, 1, "", "end_from_trigger"], [27, 5, 1, "", "execute"], [27, 5, 1, "", "execute_complete"], [27, 4, 1, "", "start_from_trigger"], [27, 4, 1, "", "start_trigger_args"]], "airflow.providers.standard.sensors.date_time.StartTriggerArgs": [[27, 4, 1, "", "next_kwargs"], [27, 4, 1, "", "next_method"], [27, 4, 1, "", "timeout"], [27, 4, 1, "", "trigger_cls"], [27, 4, 1, "", "trigger_kwargs"]], "airflow.providers.standard.sensors.external_task": [[28, 3, 1, "", "ExternalDagLink"], [28, 3, 1, "", "ExternalTaskMarker"], [28, 3, 1, "", "ExternalTaskSensor"]], "airflow.providers.standard.sensors.external_task.ExternalDagLink": [[28, 5, 1, "", "get_link"], [28, 4, 1, "", "name"]], "airflow.providers.standard.sensors.external_task.ExternalTaskMarker": [[28, 4, 1, "", "external_dag_id"], [28, 4, 1, "", "external_task_id"], [28, 5, 1, "", "get_serialized_fields"], [28, 4, 1, "", "operator_extra_links"], [28, 4, 1, "", "recursion_depth"], [28, 4, 1, "", "template_fields"], [28, 4, 1, "", "ui_color"]], "airflow.providers.standard.sensors.external_task.ExternalTaskSensor": [[28, 4, 1, "", "allowed_states"], [28, 4, 1, "", "check_existence"], [28, 4, 1, "", "deferrable"], [28, 5, 1, "", "execute"], [28, 5, 1, "", "execute_complete"], [28, 4, 1, "", "execution_date_fn"], [28, 4, 1, "", "execution_delta"], [28, 4, 1, "", "external_dag_id"], [28, 4, 1, "", "external_task_group_id"], [28, 4, 1, "", "external_task_id"], [28, 4, 1, "", "external_task_ids"], [28, 4, 1, "", "failed_states"], [28, 5, 1, "", "get_count"], [28, 5, 1, "", "get_external_task_group_task_ids"], [28, 4, 1, "", "operator_extra_links"], [28, 5, 1, "", "poke"], [28, 4, 1, "", "poll_interval"], [28, 4, 1, "", "skipped_states"], [28, 4, 1, "", "template_fields"], [28, 4, 1, "", "ui_color"]], "airflow.providers.standard.sensors.filesystem": [[29, 3, 1, "", "FileSensor"], [29, 3, 1, "", "StartTriggerArgs"]], "airflow.providers.standard.sensors.filesystem.FileSensor": [[29, 4, 1, "", "deferrable"], [29, 5, 1, "", "execute"], [29, 5, 1, "", "execute_complete"], [29, 4, 1, "", "filepath"], [29, 4, 1, "", "fs_conn_id"], [29, 6, 1, "", "path"], [29, 5, 1, "", "poke"], [29, 4, 1, "", "recursive"], [29, 4, 1, "", "start_from_trigger"], [29, 4, 1, "", "start_trigger_args"], [29, 4, 1, "", "template_fields"], [29, 4, 1, "", "ui_color"]], "airflow.providers.standard.sensors.filesystem.StartTriggerArgs": [[29, 4, 1, "", "next_kwargs"], [29, 4, 1, "", "next_method"], [29, 4, 1, "", "timeout"], [29, 4, 1, "", "trigger_cls"], [29, 4, 1, "", "trigger_kwargs"]], "airflow.providers.standard.sensors.python": [[31, 3, 1, "", "PythonSensor"]], "airflow.providers.standard.sensors.python.PythonSensor": [[31, 4, 1, "", "op_args"], [31, 4, 1, "", "op_kwargs"], [31, 5, 1, "", "poke"], [31, 4, 1, "", "python_callable"], [31, 4, 1, "", "template_fields"], [31, 4, 1, "", "templates_dict"]], "airflow.providers.standard.sensors.time": [[32, 3, 1, "", "StartTriggerArgs"], [32, 3, 1, "", "TimeSensor"], [32, 3, 1, "", "TimeSensorAsync"]], "airflow.providers.standard.sensors.time.StartTriggerArgs": [[32, 4, 1, "", "next_kwargs"], [32, 4, 1, "", "next_method"], [32, 4, 1, "", "timeout"], [32, 4, 1, "", "trigger_cls"], [32, 4, 1, "", "trigger_kwargs"]], "airflow.providers.standard.sensors.time.TimeSensor": [[32, 5, 1, "", "poke"], [32, 4, 1, "", "target_time"]], "airflow.providers.standard.sensors.time.TimeSensorAsync": [[32, 4, 1, "", "end_from_trigger"], [32, 5, 1, "", "execute"], [32, 5, 1, "", "execute_complete"], [32, 4, 1, "", "start_from_trigger"], [32, 4, 1, "", "start_trigger_args"], [32, 4, 1, "", "target_datetime"], [32, 4, 1, "", "target_time"]], "airflow.providers.standard.sensors.time_delta": [[33, 3, 1, "", "TimeDeltaSensor"], [33, 3, 1, "", "TimeDeltaSensorAsync"], [33, 3, 1, "", "WaitSensor"]], "airflow.providers.standard.sensors.time_delta.TimeDeltaSensor": [[33, 4, 1, "", "delta"], [33, 5, 1, "", "poke"]], "airflow.providers.standard.sensors.time_delta.TimeDeltaSensorAsync": [[33, 4, 1, "", "end_from_trigger"], [33, 5, 1, "", "execute"], [33, 5, 1, "", "execute_complete"]], "airflow.providers.standard.sensors.time_delta.WaitSensor": [[33, 4, 1, "", "deferrable"], [33, 5, 1, "", "execute"]], "airflow.providers.standard.sensors.weekday": [[34, 3, 1, "", "DayOfWeekSensor"]], "airflow.providers.standard.sensors.weekday.DayOfWeekSensor": [[34, 5, 1, "", "poke"], [34, 4, 1, "", "use_task_logical_date"], [34, 4, 1, "", "week_day"]], "airflow.providers.standard.triggers": [[35, 0, 0, "-", "external_task"], [36, 0, 0, "-", "file"], [38, 0, 0, "-", "temporal"]], "airflow.providers.standard.triggers.external_task": [[35, 3, 1, "", "DagStateTrigger"], [35, 3, 1, "", "WorkflowTrigger"]], "airflow.providers.standard.triggers.external_task.DagStateTrigger": [[35, 5, 1, "", "count_dags"], [35, 4, 1, "", "dag_id"], [35, 4, 1, "", "execution_dates"], [35, 4, 1, "", "poll_interval"], [35, 5, 1, "", "run"], [35, 4, 1, "", "run_ids"], [35, 5, 1, "", "serialize"], [35, 4, 1, "", "states"], [35, 5, 1, "", "validate_count_dags_af_3"]], "airflow.providers.standard.triggers.external_task.WorkflowTrigger": [[35, 4, 1, "", "allowed_states"], [35, 4, 1, "", "execution_dates"], [35, 4, 1, "", "external_dag_id"], [35, 4, 1, "", "external_task_group_id"], [35, 4, 1, "", "external_task_ids"], [35, 4, 1, "", "failed_states"], [35, 4, 1, "", "logical_dates"], [35, 4, 1, "", "poke_interval"], [35, 5, 1, "", "run"], [35, 4, 1, "", "run_ids"], [35, 5, 1, "", "serialize"], [35, 4, 1, "", "skipped_states"], [35, 4, 1, "", "soft_fail"]], "airflow.providers.standard.triggers.file": [[36, 3, 1, "", "FileDeleteTrigger"], [36, 3, 1, "", "FileTrigger"]], "airflow.providers.standard.triggers.file.FileDeleteTrigger": [[36, 4, 1, "", "filepath"], [36, 4, 1, "", "poke_interval"], [36, 5, 1, "", "run"], [36, 5, 1, "", "serialize"]], "airflow.providers.standard.triggers.file.FileTrigger": [[36, 4, 1, "", "filepath"], [36, 4, 1, "", "poke_interval"], [36, 4, 1, "", "recursive"], [36, 5, 1, "", "run"], [36, 5, 1, "", "serialize"]], "airflow.providers.standard.triggers.temporal": [[38, 3, 1, "", "DateTimeTrigger"], [38, 3, 1, "", "TimeDeltaTrigger"]], "airflow.providers.standard.triggers.temporal.DateTimeTrigger": [[38, 4, 1, "", "end_from_trigger"], [38, 4, 1, "", "moment"], [38, 5, 1, "", "run"], [38, 5, 1, "", "serialize"]], "airflow.providers.standard.utils": [[40, 0, 0, "-", "python_virtualenv"], [41, 0, 0, "-", "sensor_helper"], [42, 0, 0, "-", "skipmixin"], [43, 0, 0, "-", "weekday"]], "airflow.providers.standard.utils.python_virtualenv": [[40, 2, 1, "", "prepare_virtualenv"], [40, 2, 1, "", "write_python_script"]], "airflow.providers.standard.utils.skipmixin": [[42, 3, 1, "", "SkipMixin"], [42, 1, 1, "", "XCOM_SKIPMIXIN_FOLLOWED"], [42, 1, 1, "", "XCOM_SKIPMIXIN_KEY"], [42, 1, 1, "", "XCOM_SKIPMIXIN_SKIPPED"]], "airflow.providers.standard.utils.skipmixin.SkipMixin": [[42, 5, 1, "", "skip"], [42, 5, 1, "", "skip_all_except"]], "airflow.providers.standard.utils.weekday": [[43, 3, 1, "", "WeekDay"]], "airflow.providers.standard.utils.weekday.WeekDay": [[43, 4, 1, "", "FRIDAY"], [43, 4, 1, "", "MONDAY"], [43, 4, 1, "", "SATURDAY"], [43, 4, 1, "", "SUNDAY"], [43, 4, 1, "", "THURSDAY"], [43, 4, 1, "", "TUESDAY"], [43, 4, 1, "", "WEDNESDAY"], [43, 5, 1, "", "convert"], [43, 5, 1, "", "get_weekday_number"], [43, 5, 1, "", "validate_week_day"]], "airflow.providers.standard.version_compat": [[44, 1, 1, "", "AIRFLOW_V_2_10_PLUS"], [44, 1, 1, "", "AIRFLOW_V_3_0_PLUS"], [44, 2, 1, "", "get_base_airflow_version_tuple"]], "tests.system": [[62, 0, 0, "-", "standard"]], "tests.system.standard": [[45, 0, 0, "-", "example_bash_decorator"], [46, 0, 0, "-", "example_bash_operator"], [47, 0, 0, "-", "example_branch_datetime_operator"], [48, 0, 0, "-", "example_branch_day_of_week_operator"], [49, 0, 0, "-", "example_branch_operator"], [50, 0, 0, "-", "example_branch_operator_decorator"], [51, 0, 0, "-", "example_external_task_child_deferrable"], [52, 0, 0, "-", "example_external_task_marker_dag"], [53, 0, 0, "-", "example_external_task_parent_deferrable"], [54, 0, 0, "-", "example_latest_only"], [55, 0, 0, "-", "example_python_decorator"], [56, 0, 0, "-", "example_python_operator"], [57, 0, 0, "-", "example_sensor_decorator"], [58, 0, 0, "-", "example_sensors"], [59, 0, 0, "-", "example_short_circuit_decorator"], [60, 0, 0, "-", "example_short_circuit_operator"], [61, 0, 0, "-", "example_trigger_controller_dag"], [63, 0, 0, "-", "sql"]], "tests.system.standard.example_bash_decorator": [[45, 2, 1, "", "example_bash_decorator"], [45, 1, 1, "", "test_run"]], "tests.system.standard.example_bash_operator": [[46, 1, 1, "", "run_this_last"], [46, 1, 1, "", "test_run"], [46, 1, 1, "", "this_will_skip"]], "tests.system.standard.example_branch_datetime_operator": [[47, 1, 1, "", "cond1"], [47, 1, 1, "", "cond2"], [47, 1, 1, "", "cond3"], [47, 1, 1, "", "dag1"], [47, 1, 1, "", "dag2"], [47, 1, 1, "", "dag3"], [47, 1, 1, "", "empty_task_11"], [47, 1, 1, "", "empty_task_12"], [47, 1, 1, "", "empty_task_13"], [47, 1, 1, "", "empty_task_21"], [47, 1, 1, "", "empty_task_22"], [47, 1, 1, "", "empty_task_23"], [47, 1, 1, "", "test_run"], [47, 1, 1, "", "test_run2"], [47, 1, 1, "", "test_run3"]], "tests.system.standard.example_branch_day_of_week_operator": [[48, 1, 1, "", "empty_task_1"], [48, 1, 1, "", "test_run"]], "tests.system.standard.example_branch_operator": [[49, 1, 1, "", "PATH_TO_PYTHON_BINARY"], [49, 1, 1, "", "run_this_first"], [49, 1, 1, "", "test_run"]], "tests.system.standard.example_branch_operator_decorator": [[50, 1, 1, "", "PATH_TO_PYTHON_BINARY"], [50, 1, 1, "", "run_this_first"], [50, 1, 1, "", "test_run"]], "tests.system.standard.example_external_task_child_deferrable": [[51, 1, 1, "", "test_run"]], "tests.system.standard.example_external_task_marker_dag": [[52, 1, 1, "", "child_task1"], [52, 1, 1, "", "parent_task"], [52, 1, 1, "", "start_date"], [52, 1, 1, "", "test_run"]], "tests.system.standard.example_external_task_parent_deferrable": [[53, 1, 1, "", "start"], [53, 1, 1, "", "test_run"]], "tests.system.standard.example_latest_only": [[54, 1, 1, "", "latest_only"], [54, 1, 1, "", "test_run"]], "tests.system.standard.example_python_decorator": [[55, 1, 1, "", "PATH_TO_PYTHON_BINARY"], [55, 1, 1, "", "example_dag"], [55, 2, 1, "", "example_python_decorator"], [55, 1, 1, "", "log"], [55, 1, 1, "", "test_run"]], "tests.system.standard.example_python_operator": [[56, 1, 1, "", "PATH_TO_PYTHON_BINARY"], [56, 1, 1, "", "log"], [56, 2, 1, "", "print_context"], [56, 1, 1, "", "test_run"]], "tests.system.standard.example_sensor_decorator": [[57, 2, 1, "", "example_sensor_decorator"], [57, 1, 1, "", "test_run"], [57, 1, 1, "", "tutorial_etl_dag"]], "tests.system.standard.example_sensors": [[58, 2, 1, "", "failure_callable"], [58, 2, 1, "", "success_callable"], [58, 1, 1, "", "t0"], [58, 1, 1, "", "test_run"]], "tests.system.standard.example_short_circuit_decorator": [[59, 1, 1, "", "example_dag"], [59, 2, 1, "", "example_short_circuit_decorator"], [59, 1, 1, "", "test_run"]], "tests.system.standard.example_short_circuit_operator": [[60, 1, 1, "", "cond_true"], [60, 1, 1, "", "test_run"]], "tests.system.standard.example_trigger_controller_dag": [[61, 1, 1, "", "test_run"], [61, 1, 1, "", "trigger"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "function", "Python function"], "3": ["py", "class", "Python class"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "method", "Python method"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:function", "3": "py:class", "4": "py:attribute", "5": "py:method", "6": "py:property", "7": "py:exception"}, "terms": {"": [4, 6, 7, 9, 16, 17, 18, 22, 25, 28, 31, 34, 38, 64, 65, 68, 69, 70, 73], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "00": [27, 70], "0047a6886a": 65, "01": [27, 65], "01t11": 27, "02": 65, "03": 65, "035060d7f3": 65, "04": 65, "04806231e4": 65, "04dabf45a6": 65, "05": 65, "06": 65, "06088a3abc": 65, "07": 65, "074294d5d7": 65, "08": 65, "084e29e9e2": 65, "09": 65, "0b4": 65, "0c30c4d9af": 65, "0c883c5be7": 65, "0c9e159dc4": 65, "0e112bf0e4": 65, "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "10": [16, 27, 28, 65, 70, 73], "11": [64, 65, 68], "11am": 27, "12": [34, 65, 68], "123dadda0": 65, "1275fec92f": 65, "13": 65, "139673d3ce": 65, "14": [65, 70], "1447705482": 65, "15": [65, 70], "16": 65, "17": 65, "18": 65, "19": 65, "1970": [27, 31], "1a5eb7a29c": 65, "1addb55154": 65, "1am": 27, "1st": [61, 65], "2": [16, 22, 27, 28, 35, 43, 61, 66, 67, 73, 77], "20": 65, "2018": 34, "2020": 70, "2021": 68, "2024": 65, "2025": 65, "20ea6b7598": 65, "21": 65, "2193be2a5": 65, "22": [34, 65], "23": [27, 65], "23260e4121": 65, "24": 65, "243fe86d4b": 65, "25": 65, "26": [65, 73], "27": 65, "2723508345": 65, "28": 65, "286075f059": 65, "29": 65, "294594c06c": 65, "29b9e8ea10": 65, "2a33da0246": 65, "2e3e714f6d": 65, "2ed06d1e9f": 65, "2ef8438eec": 65, "2fa9230d2a": 65, "2nd": [61, 65], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "30": 65, "31": 65, "310f5cdfde": 65, "33718": [64, 65], "347c98cd8c": 65, "3600": 81, "36803b8bd9": 65, "3873230a11": 65, "3ad8787a3": 65, "3ff4f2dc24": 65, "3rd": 65, "4": [43, 73], "406f": 68, "40795": [64, 65], "4111a4c209": 65, "41564": [64, 65], "41916": 65, "42": 65, "42081": 65, "420b24aa79": 65, "42252": 65, "42392": 65, "42505": 65, "42506": 65, "42659": 65, "42783": 65, "42794": 65, "42810": [64, 65], "42891": 65, "43053": 65, "43383": [64, 65], "43550": 65, "43553": 65, "43556": 65, "43568": 65, "43608": [64, 65], "43612": 65, "43674": 65, "43716": 65, "43889": 65, "43890": [64, 65], "43902": [64, 65], "44": [64, 65], "44011": 65, "44018": 65, "4404e64247": 65, "44053": [64, 65], "44110": 65, "44288": [64, 65], "44298": 65, "44309": [64, 65], "44321": 65, "44454": [64, 65], "44458": [64, 65], "44540": [64, 65], "44541": [64, 65], "44546": [64, 65], "44552": [64, 65], "44581": 65, "44659": 65, "44686": [64, 65], "44809": [64, 65], "44956": [64, 65], "44987": [64, 65], "45042": 65, "45201": [64, 65], "45294": [64, 65], "45345": [64, 65], "45444": [64, 65], "45486": [64, 65], "45515": [64, 65], "45583": [64, 65], "45585": [64, 65], "45627": [64, 65], "45732": [64, 65], "45917": [64, 65], "45961": [64, 65], "45964": 65, "46032": [64, 65], "46231": [64, 65], "46274": [64, 65], "46306": [64, 65], "46391": [64, 65], "46546": [64, 65], "46584": [64, 65], "46601": [64, 65], "46608": 65, "46616": [64, 65], "46633": [64, 65], "46800": 65, "46893": 65, "46938": [64, 65], "46942": [64, 65], "46961": [64, 65], "46975": 65, "47002feacd": 65, "47008": [64, 65], "47064": 65, "47203": 65, "47259": 65, "47281": [64, 65], "47339": [64, 65], "47530": [64, 65], "47545": 65, "47558": 65, "47644": 65, "47652": [64, 65], "47677": [64, 65], "47798": 65, "47801": 65, "47823": 65, "47825": [64, 65], "47856": [64, 65], "47882": [64, 65], "47892": [64, 65], "48013": 65, "48035": [64, 65], "48060": 65, "48214": [64, 65], "48223": 65, "48230": [64, 65], "48244": [64, 65], "48362": 65, "48383": 65, "48457": 65, "48486": [64, 65], "48553": 65, "48592": [64, 65], "48651": [64, 65], "48683": [64, 65], "48747": [64, 65], "48749": [64, 65], "48760": 65, "48763": 65, "48819": [64, 65], "48828": 65, "48849": 65, "48896": [64, 65], "48945": [64, 65], "48969": [64, 65], "48e39b927a": 65, "49": 68, "49013": 65, "49027": [64, 65], "49051": 65, "490b5e816b": 65, "49148": [64, 65], "49199": [64, 65], "49218": [64, 65], "492ecfe5c0": 65, "49338": 65, "49395": [64, 65], "49396": 65, "49401": [64, 65], "49415": [64, 65], "49422": 65, "49447": 65, "49500": [64, 65], "49554": [64, 65], "49660": 65, "4a8567b20b": 65, "4b38bed76c": 65, "4b83391b75": 65, "4c2c4079d6": 65, "4d3a": 68, "4d54cda411": 65, "4d5846f58f": 65, "4db7db": 28, "4tyv2phg89a": 23, "5": [35, 36, 43, 73], "512": 68, "51415547d6": 65, "518287ce7f": 65, "521410f03c": 65, "54": 68, "545bf451d4": 65, "5479d0b387": 65, "5597bb2961": 65, "566bea2db3": 65, "57cda9ec70": 65, "57d109c8a6": 65, "5c6e": 68, "5d87bddf0a": 65, "5f9fdf016d": 65, "6": [43, 73], "60": [24, 69, 81], "600": 78, "60f6a9f1a1": 65, "61d1dbbc7f": 65, "62bac46822": 65, "636224df61": 65, "6674": 68, "6775bf7bae": 65, "67858fd7e7": 65, "6adb2dbae4": 65, "6b69eb7b9a": 65, "6d73ae8ab6": 65, "7": [22, 43, 66, 73], "72": [64, 65], "74ff524a6d": 65, "779b76b891": 65, "78615a35f0": 65, "7b2ec33c7a": 65, "7f7c7a7b45": 65, "8": [14, 16, 26, 65], "811fa2b016": 65, "82": [64, 65], "83": [64, 65], "8480c78602": 65, "857ca4c06c": 65, "8592188ac7": 65, "863702f020": 65, "86d5b27f92": 65, "880b067668": 65, "8af1bbdf25": 65, "8ca061ddf5": 65, "8ec4": 68, "8f1a53801a": 65, "9": [64, 65, 67], "91818a": 29, "91b0f610ab": 65, "9201b36af3": 65, "935d2831fe": 65, "9689cf5bb9": 65, "96c6daa97c": 65, "99": [16, 69], "9bbf6f16f7": 65, "A": [8, 17, 22, 27, 31, 33, 35, 36, 38, 42, 69, 78], "And": 16, "As": [28, 73], "But": 73, "By": [28, 68, 69], "For": [1, 2, 3, 8, 16, 18, 22, 25, 26, 28, 29, 31, 32, 33, 34, 65, 66, 67, 68, 69, 73, 78], "If": [4, 6, 7, 9, 14, 16, 18, 21, 22, 24, 25, 26, 27, 28, 29, 34, 35, 40, 42, 68, 69, 70, 73, 78], "In": [16, 22, 52, 64, 69, 70, 73, 78], "It": [19, 22, 24, 27, 28, 49, 50, 64, 68, 69, 70, 73, 77], "No": 69, "Or": 69, "The": [16, 17, 19, 22, 24, 26, 27, 28, 29, 32, 33, 35, 36, 38, 40, 64, 66, 67, 68, 69, 70, 73, 75, 76, 81], "There": [68, 69], "To": [16, 25, 28, 34, 68, 69, 73], "Will": 33, "With": 22, "_": 73, "__init__": [22, 31], "__str__": 24, "__version__": 15, "_basepythonvirtualenvoper": 22, "_get_count": [64, 65], "_get_files_in_cwd": 69, "_intern": [42, 64, 65], "_serializertypedef": 22, "_skip_": 28, "a53d9f6d25": 65, "a5ffbbda17": 65, "a6f6733b35": 65, "aa07160892": 65, "aaaea355d3": 65, "ab2bd2d4a9": 65, "abc": [8, 16, 18, 22, 24, 25, 26, 27, 28, 29, 31, 34, 42], "abl": 69, "about": [68, 73, 75], "abov": [18, 28, 68, 70], "absolut": [4, 22], "absorb": 8, "abstract": [17, 18, 21, 25], "accept": [0, 1, 2, 3, 4, 6, 7, 8, 9, 22], "access": [16, 24, 28, 31, 69, 73], "accord": 26, "across": [64, 65, 78], "action": 78, "activ": 73, "actual": 70, "ad": [16, 42, 65, 69, 70, 73], "adbb062b50": 65, "add": [11, 16, 22, 25, 64, 65, 69, 73], "addit": [13, 22, 40, 69, 73, 78], "addition": 73, "address": 16, "adf19b77ad": 65, "adjust": 73, "administr": 14, "advantag": [27, 69, 73], "affect": 70, "after": [16, 22, 27, 31, 32, 33, 36, 38, 69, 70, 73, 77], "afterward": 14, "again": 73, "against": [28, 33, 77, 78], "aip": [64, 65], "airflow": [52, 56, 64, 66, 68, 69, 73, 75, 78], "airflow__standard__venv_install_method": 66, "airflow_hom": 69, "airflow_v_2_10_plu": 44, "airflow_v_2_9_plu": [64, 65], "airflow_v_3_0_plu": 44, "airflowcontextdeprecationwarn": [64, 65], "airflowexcept": [16, 24, 52, 69], "airflowsensortimeout": 52, "airflowskipexcept": [16, 52, 69], "aka": 68, "alia": [64, 65], "alibaba": 65, "all": [16, 17, 21, 22, 24, 27, 42, 64, 65, 66, 67, 69, 73, 75, 78], "all_don": 73, "allow": [11, 22, 24, 28, 35, 65, 69, 70, 73], "allowed_st": [24, 28, 35, 52, 78], "alreadi": [24, 27, 68], "also": [14, 16, 25, 28, 34, 38, 65, 68, 69, 70, 73, 78, 79], "also_run_thi": 69, "also_run_this_again": 69, "also_thi": 69, "also_this_again": 69, "alter": [22, 28], "alwai": 75, "amend": [64, 65], "amount": 22, "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "analysi": 73, "ani": [16, 22, 25, 26, 27, 28, 29, 31, 32, 38, 68, 69, 70, 73, 76], "anoth": [16, 69, 74, 78], "anotherpackag": 73, "anyth": 34, "anywai": 38, "apach": [14, 35, 64, 66, 68, 69, 73], "apache_airflow_providers_standard": 68, "api": [50, 55, 64, 65], "appear": 79, "append": 16, "append_env": 16, "appli": [16, 22, 31, 69], "approach": [69, 70], "apr": 65, "ar": [16, 18, 21, 22, 24, 26, 27, 28, 31, 36, 42, 66, 67, 68, 69, 70, 73, 75, 78], "arang": 73, "arbitrari": [76, 81], "archiv": 73, "arg": [8, 22], "argnotset": [16, 24], "argument": [8, 16, 22, 27, 28, 29, 31, 32, 35, 36, 38, 64, 65, 69, 70], "aris": 16, "asc": 68, "asset": [64, 65], "associ": [24, 28], "assum": [21, 22, 73], "async": [35, 36, 38, 77], "asynchron": 35, "attempt": [22, 73], "augment": 69, "auto": [0, 4, 7, 9, 66], "autom": 73, "automat": [22, 24, 66, 73], "avail": [14, 22, 28, 31, 40, 64, 66, 68, 73], "avoid": [27, 33], "b28c336e8b": 65, "b2a244bb13": 65, "b4b6de3c46": 65, "b58f027cbf": 65, "b6c75d2cd6": 65, "b703d53b77": 65, "ba4b": 68, "back": [70, 73], "backend": [64, 65], "backfil": [18, 24, 25, 27, 34], "background": 73, "backward": 64, "bafa787a05": 65, "band": 75, "base": [8, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 42, 43, 64, 65, 70, 73], "base_d": 18, "basebranchoper": [17, 18, 21, 25], "baseeventtrigg": [36, 64, 65], "basehook": [11, 13, 14], "baseoper": [16, 17, 19, 22, 23, 24, 28], "baseoperatorlink": [24, 28, 64, 65], "basepath": 11, "basesensoroper": [26, 27, 28, 29, 31, 32, 33, 34, 64, 65], "basesqloper": 65, "basetrigg": [35, 36, 38], "bash": [5, 20, 30, 65, 68], "bash_command": [16, 26, 69, 76], "bash_exampl": 69, "bash_task": [0, 16, 69], "bashoper": [0, 16, 46, 65, 71], "bashsensor": [26, 80], "basic": [49, 64, 65], "batcher": 69, "becaus": [16, 27, 33, 69, 70], "been": [22, 31, 64], "befor": [33, 69, 70, 73], "behavior": [16, 22, 26, 28, 29, 36, 69], "behaviour": [11, 13, 28], "behind": 16, "being": 22, "belong": 68, "below": [16, 18, 22, 66, 67, 68, 69, 73], "better": [64, 65, 78], "between": [22, 31, 36, 70], "bfc567f4e6": 65, "bin": [4, 22, 49, 50, 55, 56, 68, 73], "binari": [4, 22, 40, 68, 73], "black": 65, "blank": 16, "block": [64, 65], "blue": 22, "bodi": 73, "bool": [1, 2, 3, 4, 6, 7, 9, 16, 18, 22, 24, 25, 27, 28, 29, 32, 33, 34, 35, 36, 38, 40], "both": [22, 28, 69, 70, 73], "bound": 18, "branch": [1, 2, 3, 18, 20, 21, 22, 25, 42, 49, 50, 64, 65, 70, 73, 75], "branch_": 73, "branch_external_python": [5, 50, 73], "branch_external_python_task": 1, "branch_fals": 70, "branch_mid_week": 70, "branch_python": 5, "branch_task": 2, "branch_task_id": 42, "branch_tru": 70, "branch_virtualenv": [5, 50, 73], "branch_virtualenv_task": 3, "branch_weekend": 70, "branch_with_external_python": 73, "branch_with_venv": 73, "branchdatetimeoper": [18, 64, 65, 71], "branchdayofweekoper": [25, 48, 64, 65, 71], "branches_to_execut": 17, "branchexternalpythonoper": [1, 22, 49, 71], "branching_ext_pi": 73, "branching_ext_python": 73, "branching_venv": 73, "branching_virtualenv": 73, "branchmixin": [17, 22, 64, 65], "branchpythonoper": [2, 17, 22, 49, 73], "branchpythonvirtualenvoper": [3, 22, 49, 71], "break": [65, 75], "broken": 73, "bst": 68, "bug": 75, "bugfix": 75, "build": [16, 50, 65, 68, 69], "built": 64, "bump": [64, 65], "busi": 17, "button": [24, 28], "byte": 14, "c": 69, "c31cb5f19e": 65, "c44690c1c8": 65, "c6c4f95ed9": 65, "c762e17820": 65, "ca3e4e75c6": 65, "cach": 22, "cache_kei": 73, "calcul": 73, "call": [8, 22, 31, 50, 69, 73], "callabl": [0, 1, 2, 3, 4, 6, 7, 8, 9, 16, 22, 28, 31, 69, 73, 81], "callable_external_python": 73, "callable_virtualenv": 73, "can": [0, 1, 2, 3, 4, 6, 7, 8, 9, 16, 19, 22, 25, 27, 28, 29, 34, 36, 64, 65, 66, 67, 68, 69, 70, 73, 75, 78, 79], "cannot": 22, "captur": 8, "care": [16, 69], "case": [14, 27, 38, 52, 69, 73, 75], "caus": [26, 28], "caveat": 22, "cb295c351a": 65, "cbc287052e": 65, "cde1": 68, "cde15c6e4d3a8ec4ecf4ba4b6674e08ad7de406f": 68, "ce3da2f46d": 65, "ceas": 28, "certain": [8, 22, 70], "certif": 68, "certifi": 68, "cfg": 66, "chain": 73, "chang": [28, 38, 65, 69, 70, 75], "changelog": 65, "chapter": 68, "cheap": 38, "check": [0, 4, 7, 9, 24, 25, 26, 28, 34, 35, 64, 65, 68, 69, 78, 81], "check_condit": 73, "check_exist": 28, "checksum": [22, 68], "cherri": 75, "child_dag": 78, "child_task": 78, "child_task1": [52, 78], "child_task2": 78, "choic": 73, "choos": [17, 18, 21, 25, 68], "choose_branch": [17, 18, 21, 25], "chore": 65, "circuit": [22, 64, 65, 73], "class": [64, 65, 67], "classic": [49, 56, 69, 73, 81], "classmethod": [11, 28, 43], "classpath": [35, 36], "classvar": 8, "clean": [14, 16, 22, 64, 65, 73], "cleanup": [70, 73], "clear": [24, 28, 42, 52, 78], "clock": [38, 70], "cloudpickl": [22, 73], "cmd": 69, "code": [16, 22, 26, 52, 64, 65, 68, 69, 73], "codebas": [64, 65], "codespel": 65, "collect": [8, 16, 18, 22, 24, 25, 26, 27, 28, 29, 31, 34, 35, 42], "colorama": 73, "column": [64, 65], "com": [23, 65, 68, 73], "combin": [17, 18, 69, 70, 78], "command": [14, 16, 26, 73, 76], "comment": 65, "commit": 65, "common": [64, 65, 73], "compar": [18, 25, 34, 43], "comparison": 70, "compat": [64, 65, 73], "complet": [0, 4, 7, 9, 16, 24, 26, 28, 29, 33, 35, 65, 73], "complex": 22, "compos": 69, "cond1": [47, 70], "cond2": [47, 70], "cond3": [47, 70], "cond_fals": 73, "cond_tru": [60, 73], "condit": [38, 64, 65, 69, 73, 81], "condition": [64, 65], "condition_is_fals": 73, "condition_is_tru": 73, "conf": [16, 22, 24, 28, 29, 33, 40, 69, 74], "config": [65, 73], "configur": [14, 22, 24, 64, 65, 73], "conn": [11, 13, 65], "conn_name_attr": [11, 13], "conn_typ": [11, 13], "connect": [11, 13, 29, 36, 73, 79], "consid": [22, 28, 35, 69, 73, 78], "consist": [64, 65], "constraint": 73, "constructor": 69, "contain": [14, 16, 17, 21, 22, 28, 35, 43, 66, 68, 69, 73], "content": [69, 73], "context": [14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 40, 42, 56, 64, 65, 69], "continu": [17, 22, 28, 73], "contrari": 73, "contriv": 28, "control": 73, "convert": [40, 43], "core": [64, 65, 66, 69], "correct": [64, 65, 68], "correspond": [22, 43], "could": 31, "count": [28, 35], "count_dag": 35, "creat": [14, 16, 17, 19, 22, 23, 24, 27, 29, 32, 33, 38, 40, 43, 64, 68, 69, 73], "create_dagrun": [64, 65], "credenti": 13, "criteria": [25, 35], "critic": 75, "cross": 80, "cst": [64, 65], "curl": 68, "current": [16, 18, 22, 25, 26, 28, 73], "custom": [11, 13, 64, 65], "custom_operator_nam": 8, "cut": 73, "cwd": [14, 16, 69], "cycl": 38, "cyclic": 28, "d": [27, 56, 68, 73], "d0bcc028af": 65, "d0f433b024": 65, "d112830cd9": 65, "d1b2a44653": 65, "d4473555c0": 65, "d7de": 68, "dag": [0, 1, 2, 3, 4, 6, 7, 8, 9, 16, 19, 22, 24, 27, 28, 33, 34, 35, 42, 46, 47, 48, 49, 50, 52, 55, 56, 57, 59, 60, 61, 64, 65, 69, 70, 73, 74, 77, 80], "dag1": [47, 70], "dag2": [47, 70], "dag3": [47, 70], "dag_id": [24, 28, 35, 74, 78], "dag_run": [16, 21, 69], "dag_vers": [64, 65], "dagispaus": [24, 64, 65], "dagnod": 42, "dagrun": [21, 64, 65, 70, 73], "dagrunalreadyexist": 24, "dagrunst": [24, 28, 35], "dagruntyp": [21, 64, 65], "dagstat": [64, 65], "dagstatetrigg": 35, "dai": [25, 27, 28, 32, 34, 43, 69, 70, 77], "daili": [27, 78], "data": [21, 22, 33, 64, 65, 69, 70, 73, 78, 81], "data_interval_end": [16, 27, 33, 77], "data_interval_start": [69, 73], "databas": [24, 35], "date": [18, 24, 25, 28, 34, 35, 64, 65], "date_in_rang": 70, "date_outside_rang": 70, "date_tim": 30, "datetim": [20, 24, 27, 28, 29, 32, 33, 35, 38, 47, 64, 65, 70, 73, 77], "datetime_branch": 70, "datetimebranchoper": 47, "datetimesensor": 27, "datetimesensorasync": 27, "datetimetrigg": 38, "dayofweeksensor": [34, 64, 65, 80], "dbapihook": 65, "dbf8bb4092": 65, "dd7f669e6c": 65, "ddf371aa9c": 65, "dec": 65, "decid": 75, "decis": 70, "decod": 14, "decor": [15, 50, 57, 59, 64, 65, 69, 73, 81], "decoratedoper": 8, "decoratedsensoroper": 8, "def": [22, 69, 73, 81], "default": [1, 2, 3, 4, 6, 7, 9, 14, 16, 22, 24, 26, 28, 29, 35, 36, 64, 65, 66, 69, 73, 75, 79], "default_conn_nam": [11, 13], "default_deferr": [24, 28, 29, 33], "defer": [24, 27, 28, 29, 33, 64, 65], "deferr": [24, 28, 29, 33, 64, 65, 78, 79], "defin": [16, 22, 26, 69, 73, 79], "definit": [17, 18, 21, 25, 42, 64, 65], "delai": [38, 70], "delet": [22, 36, 73], "delta": [33, 38, 77], "deltatriggertimet": 21, "demonstr": [46, 47, 48, 49, 50, 52, 55, 56, 57, 59, 60], "dep": 68, "depend": [4, 18, 22, 25, 28, 52, 65, 70, 73, 75, 80], "deploy": 14, "deprec": [64, 65], "deriv": [16, 17, 19, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 64], "describ": [66, 68, 73], "desir": [28, 69, 78], "dest": 68, "destroi": 22, "detail": [14, 65, 68], "detect": [65, 79], "determin": [17, 19, 22, 69], "determine_kwarg": 22, "determinist": 70, "devel": [64, 65], "develop": 75, "di": 28, "dict": [1, 2, 3, 4, 6, 7, 8, 9, 14, 16, 22, 24, 27, 29, 31, 32, 38, 40, 64, 65], "dictionari": [8, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 73], "diff": 68, "differ": [22, 28, 33, 36, 68, 69, 70, 73, 78], "dill": [22, 64, 73], "dim": 73, "dir": 73, "dir_cont": 69, "direct": [22, 73], "directli": [17, 21, 22, 27, 29, 32, 33, 69], "directori": [14, 16, 26, 29, 36, 40, 68, 69, 73], "disabl": 69, "disallow": 24, "disk": [69, 73], "distinct": 38, "distribut": [65, 67, 68], "do": [16, 25, 27, 38, 68, 69], "do_branch": 17, "do_xcom_push": 16, "doc": [14, 65], "document": [22, 40, 65, 66], "doe": [16, 19, 21, 27, 28, 70, 73], "doesn": 69, "don": [34, 38], "done": [24, 29, 70, 73, 75], "doubl": [16, 69], "down": 68, "download": [68, 73], "downstream": [17, 21, 22, 25, 28, 42, 52, 69, 73], "driven": [64, 65], "drop": [27, 33, 68, 73], "ds_fals": 73, "ds_true": 73, "dst": 38, "dttm": 28, "dttm_filter": 28, "due": 73, "dump": 40, "dure": [0, 4, 7, 9, 21, 27, 29, 32, 73], "dynam": [27, 29, 32, 64, 65], "e": [16, 17, 21, 22, 27, 28, 31, 73, 78], "e027457a24": 65, "e03265bb56": 65, "e08a": 68, "e4002c3305": 65, "e6ea6709bb": 65, "e7194dff6a": 65, "e7daa6794c": 65, "e8f7e4": [19, 23], "e9f544cc3f": 65, "e9ffdb": 21, "each": [21, 27, 36, 43, 73], "earlier": 78, "eas": 43, "easiest": 16, "ecf4": 68, "echo": [16, 68, 69], "ef80791fba": 65, "effect": 73, "either": [16, 22, 28, 29, 73], "elem": 69, "els": [16, 64, 65, 69], "embed": [13, 66], "empti": [11, 20, 25, 28, 69, 73], "empty_task_1": [48, 70], "empty_task_11": [47, 70], "empty_task_12": [47, 70], "empty_task_13": [47, 70], "empty_task_2": 70, "empty_task_21": [47, 70], "empty_task_22": [47, 70], "empty_task_23": [47, 70], "empty_task_3": 70, "empty_task_4": 70, "emptyoper": [19, 25, 28, 64, 65, 70, 73], "enabl": [24, 29, 36, 69], "encod": [14, 16, 26], "encount": 69, "encourag": 69, "end": [16, 27, 32, 33, 69, 77], "end_from_trigg": [27, 32, 33, 38], "endgroup": 73, "engin": [22, 31], "ensur": [18, 64, 65, 69, 73, 74], "enter": 28, "entir": 35, "entri": 65, "enum": [25, 34, 43], "env": [14, 16, 26, 69, 73], "env_var": 22, "environ": [4, 7, 14, 16, 22, 26, 40, 50, 55, 56, 65, 66], "equal": 74, "error": [14, 26, 28, 64, 65, 69], "escap": [16, 69], "especi": 73, "essenti": 68, "establish": 78, "etc": 69, "evalu": [16, 19, 22, 33, 73, 77], "even": [69, 70, 73], "event": [24, 27, 28, 29, 32, 33, 38, 64, 65, 70], "everi": [22, 73], "exact": 38, "exactli": [22, 28, 36, 38], "examin": 28, "exampl": [8, 11, 16, 22, 25, 27, 28, 34, 43, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 59, 60, 61, 66, 68, 69, 70, 73, 78], "example_bash_dag": 69, "example_bash_decor": [62, 69], "example_bash_oper": [62, 69], "example_branch_datetime_oper": [62, 70], "example_branch_day_of_week_oper": [62, 70], "example_branch_oper": [62, 73], "example_branch_operator_decor": [62, 73], "example_dag": [55, 59, 69], "example_external_task_child_deferr": 62, "example_external_task_marker_child": [52, 78], "example_external_task_marker_dag": [62, 78], "example_external_task_marker_par": 52, "example_external_task_parent_deferr": [62, 78], "example_latest_onli": [62, 72], "example_python_decor": [62, 73], "example_python_oper": [62, 73], "example_sensor": [62, 76, 77, 79, 81], "example_sensor_decor": [62, 81], "example_short_circuit_decor": [62, 73], "example_short_circuit_oper": [62, 73], "example_trigger_controller_dag": [62, 74], "example_trigger_target_dag": [61, 74], "except": [16, 26, 52, 64, 65, 69, 70, 75], "exchang": 73, "execut": [8, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 40, 55, 56, 64, 65, 70, 73, 81], "execute_cal": 22, "execute_complet": [24, 27, 28, 29, 32, 33], "execution_d": [35, 64, 65, 78], "execution_date_fn": 28, "execution_delta": [28, 78], "executor": 19, "exist": [14, 16, 24, 28, 29, 35, 67], "exit": [16, 22, 26, 52, 69, 76], "exit_cod": 14, "expect": 22, "expect_airflow": 22, "expect_pendulum": 22, "experiment": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "explain": 64, "explicit": 22, "explicitli": 73, "expos": 16, "ext_py_": 73, "extend": 22, "extens": [22, 69], "extern": [21, 22, 24, 28, 35, 50, 64, 65, 73], "external_dag_id": [28, 35, 78], "external_python": [5, 73], "external_python_task": [4, 73], "external_task": [30, 37], "external_task_group_id": [28, 35, 78], "external_task_id": [28, 35, 78], "external_task_sensor": 78, "external_trigg": [64, 65], "externaldag": [64, 65], "externaldaglink": 28, "externalpythonoper": [22, 71], "externaltaskmark": [28, 52], "externaltasksensor": [28, 52, 64, 65], "extra": [11, 65, 73], "extra_link": [64, 65], "f": [11, 69, 73], "f01e5e2f64": 65, "f05ce08362": 65, "f0da8eeab3": 65, "f0ede4": 16, "f616c62209": 65, "f73f895c28": 65, "f757b87581": 65, "fab": 65, "face": [64, 65], "fail": [22, 24, 26, 28, 35, 69, 78], "fail_when_dag_is_paus": [24, 64, 65], "failed_st": [24, 28, 35, 52, 78], "failur": [16, 22, 35, 64, 65, 69], "failure_cal": [58, 81], "failure_timeout_sensor_python": 81, "fall": [18, 70], "fallback": [24, 28, 29, 33], "fals": [1, 2, 3, 4, 6, 7, 9, 16, 18, 22, 24, 25, 27, 28, 29, 32, 33, 34, 35, 36, 38, 40, 73], "false_": 73, "falsi": [22, 73], "faster": 73, "fdbd68f02e": 65, "fe0dd9b8b3": 65, "feat": [64, 65], "featur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "feb": 65, "few": 38, "ffefeb": [22, 24], "field": [11, 13, 22, 28], "file": [4, 11, 16, 22, 29, 37, 40, 65, 66, 68, 73, 79], "filedeletetrigg": 36, "filenam": 40, "filepath": [29, 36, 79], "filesensor": [29, 80], "filesystem": [4, 12, 22, 30, 64, 65, 79], "filetrigg": 36, "fill": [22, 70], "filter": 28, "filter_today_chang": 69, "find": [36, 73], "fine": 28, "fingerprint": 68, "finish": 73, "fire": [27, 28, 32, 33, 36, 38], "fire_immedi": 77, "fire_immediately_async": 77, "first": [28, 34, 70], "fit": 69, "fix": [65, 75], "flexibl": 69, "flip": 28, "flit": [64, 65], "float": [28, 35, 36], "flush": 73, "focu": 73, "folder": [4, 16, 22, 29, 36, 65, 68, 69, 73], "follow": [17, 18, 22, 25, 28, 42, 52, 64, 66, 68, 70, 73, 75], "follow_task_ids_if_fals": [18, 25, 70], "follow_task_ids_if_tru": [18, 25, 70], "forc": 73, "fore": 73, "form": [11, 22], "format": [69, 73], "forward": 22, "found": [36, 75], "foundat": 68, "free": 32, "fridai": [34, 43], "friendli": 70, "from": [14, 16, 17, 19, 22, 25, 27, 29, 32, 33, 34, 40, 42, 43, 56, 64, 65, 73, 74, 75], "fs_conn_id": [11, 29, 79], "fs_default": [11, 29, 79], "fs_test": 11, "fshook": [11, 65], "full": [4, 22, 25, 34, 43], "function": [16, 17, 28, 31, 69, 73], "further": [16, 73], "g": [17, 21, 22, 27, 28, 31, 78], "gener": [16, 24, 64, 65, 69, 73], "generictransf": [64, 65], "get": [8, 11, 16, 22, 28, 31, 43, 64, 65, 68, 73, 75], "get_base_airflow_version_tupl": 44, "get_conn": [11, 13], "get_connection_form_widget": 11, "get_connection_url": 13, "get_count": 28, "get_current_context": [22, 64, 65, 73], "get_env": 16, "get_external_task_group_task_id": 28, "get_file_stat": 69, "get_link": [24, 28], "get_path": 11, "get_provider_info": [15, 65], "get_serialized_field": 28, "get_template_context": [16, 17, 19, 22, 23, 24, 27, 29, 32, 33], "get_ui_field_behaviour": [11, 13], "get_weekday_numb": 43, "getboolean": [24, 28, 29, 33], "gettempdir": 73, "ghost": 16, "give": [8, 28, 38], "given": [14, 21, 22, 29, 38, 42, 43, 70], "glob": [29, 36, 69], "global": [22, 73], "gmail": 68, "go": [27, 29, 32, 33], "goe": 28, "good": [68, 75], "govern": 75, "gpg": 68, "green": [28, 73], "group": [19, 22, 28, 35, 73], "guid": [1, 2, 3, 16, 18, 22, 25, 26, 29, 31, 32, 33, 34, 65, 68], "gz": 68, "h": [22, 40], "ha": [22, 27, 31, 35, 42, 64, 69, 70, 73], "handl": [14, 17, 27, 32, 33, 38, 52, 64, 65, 73], "happen": [22, 28, 52, 70, 73, 78], "hash": [22, 73], "have": [11, 14, 16, 22, 27, 28, 38, 64, 65, 69, 73, 75, 78, 79], "header": [22, 65], "hello": [69, 74], "help": [69, 73], "helper": [17, 64, 65], "here": [16, 38, 69], "high": 65, "highlight": 69, "hint": [64, 65, 73], "hit": 35, "hoc": 65, "hold": 61, "home": 69, "hook": [15, 16, 64, 65, 73], "hook_nam": [11, 13], "host": 11, "hour": [27, 77, 78], "how": [1, 2, 3, 16, 18, 22, 25, 26, 29, 31, 32, 33, 34, 35, 38, 50, 65, 68, 69], "howev": [22, 28, 69, 78], "hql": 22, "html": 14, "http": [14, 23, 68, 69, 73], "huge": 22, "hybrid": 73, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "id": [8, 11, 24, 28, 29, 35, 42, 64, 65, 68, 79], "idempot": [27, 70], "ignor": [22, 73], "ignore_downstream_trigger_rul": [22, 73], "immedi": [27, 28, 32, 33, 42], "immut": 24, "implement": [17, 18, 21, 25, 42, 64, 65], "implicitli": 73, "import": [22, 25, 34, 64, 65, 68, 69, 73], "improv": 65, "includ": [17, 22, 40, 65, 67, 75], "incompat": 73, "increas": 28, "independ": 75, "index": [13, 22, 40, 65, 73], "index_url": [22, 40, 73], "indic": [28, 68], "individu": 73, "infer": 22, "influenc": 73, "info": 73, "inform": [1, 2, 3, 16, 18, 22, 25, 26, 29, 31, 32, 33, 34, 38, 40, 65, 66, 73, 75], "inherit": [16, 17, 19, 22, 26], "inherit_env": 22, "inherits_from_empty_oper": 19, "inherits_from_skipmixin": [17, 22], "initi": 64, "initialis": [64, 65], "input": [16, 31, 69], "insid": [4, 16, 22, 29, 65, 69, 73], "instal": [22, 40, 66, 73, 75], "instanc": [16, 42, 64, 65], "instanti": 38, "instead": [16, 26, 27, 64, 69], "instruct": [68, 75], "int": [16, 22, 24, 26, 28, 33], "intenum": 43, "inter": 52, "interact": 11, "interest": 75, "interfac": [64, 65], "interpret": 50, "interv": [21, 24, 33, 35, 52, 64, 65, 78], "introduc": [64, 65], "is_don": 81, "is_fil": 69, "is_todai": 25, "is_venv_instal": 64, "iso": 43, "isoformat": 28, "isol": 24, "issu": [16, 65], "issuer": 68, "item": 43, "iter": [18, 22, 25, 28, 34, 35, 42, 43, 65], "its": [4, 6, 7, 9, 17, 22, 28, 38, 40, 49, 52, 70, 73, 81], "itself": [27, 33, 75], "jinja": [16, 17, 19, 22, 23, 24, 27, 29, 32, 33, 40, 64, 65, 73], "jinja_context": 40, "job": [27, 32, 36, 79], "join": 69, "jq": 69, "json": 69, "just": 38, "ka": 68, "kaxil": 68, "kaxilnaik": 68, "keep": [52, 73], "kei": [1, 2, 3, 4, 6, 7, 9, 64, 65, 68, 73], "keyword": [8, 22, 27, 28, 29, 31, 32, 38, 73], "kill": 16, "know": [42, 68], "kubernet": 73, "kwarg": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 56, 69, 73], "kwargs_to_upstream": 8, "l": 68, "la": 68, "lambda": [16, 69, 73], "land": 29, "languag": 69, "larg": 22, "last": [14, 16], "lastmodifi": 69, "later": [26, 73], "latest": [21, 65, 75], "latest_onli": [20, 54, 72], "latestonlyoper": [21, 54, 64, 65, 71], "lazy_object_proxi": 73, "leav": [16, 22], "left": 68, "legaci": 65, "length": [21, 33], "less": [64, 65], "level": [28, 65, 73], "librari": [22, 73], "like": [17, 22, 28, 65, 69, 73, 78], "line": [14, 16], "liner": 17, "link": [23, 24, 28, 64, 65, 68, 73], "list": [8, 14, 17, 18, 21, 22, 24, 25, 28, 31, 35, 40, 42, 52, 65, 66, 69, 73], "listen": [64, 65], "liter": [19, 64, 65], "load": [16, 22, 40, 69], "local": [49, 50, 55, 56, 68, 69, 73, 79], "locat": [11, 69], "log": [14, 17, 22, 23, 42, 55, 56, 73], "log_sql": 73, "log_sql_queri": 73, "log_the_sql": 73, "logging_mixin": 42, "loggingmixin": 42, "logic": [17, 18, 21, 24, 25, 28, 34, 35, 42, 64, 65, 69], "logical_d": [24, 27, 28, 35, 64, 65, 69, 70], "login": 11, "long": 38, "look": [1, 2, 3, 16, 18, 22, 25, 26, 28, 29, 31, 32, 33, 34, 66], "loop": [36, 38], "loos": 38, "lower": [18, 69], "machin": 70, "macro": 22, "made": [14, 22, 31, 68, 73], "mai": [22, 64, 69, 78], "main": [27, 29, 32, 33, 64, 65, 68, 73, 75], "maintain": 73, "mainten": 70, "major": [22, 27, 75], "make": [28, 64, 65, 70, 73, 78], "make_choic": 70, "make_weekend_choic": 70, "manag": [14, 68], "mani": [28, 35, 69], "manipul": 69, "manual": 21, "map": [22, 26, 27, 29, 31, 32, 64, 65], "mar": 65, "mark": [21, 22, 24, 28, 38, 65], "match": [29, 35, 36, 68], "maximum": 28, "mean": [70, 73], "meant": [22, 73], "measur": 33, "mention": 52, "mere": 73, "messag": [16, 69, 74], "met": [25, 38], "method": [16, 17, 18, 21, 22, 25, 27, 29, 32, 33, 64], "might": [8, 16, 70, 73, 75], "migrat": [64, 65], "min": 65, "minimum": [64, 67], "minor": 75, "mirror": 68, "miss": 65, "mix": 75, "mixin": 42, "mktemp": 68, "mode": [22, 24, 28, 33, 64, 65, 70, 73, 78, 79, 81], "model": [16, 17, 19, 22, 23, 24, 28, 64, 65, 75], "modif": 73, "modul": 73, "moment": [38, 70], "mondai": [25, 34, 43, 70, 77], "monday_check": 25, "monitor": [14, 28, 35], "more": [1, 2, 3, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 40, 66, 70, 73], "most": [16, 21, 68, 69, 73], "mostli": [16, 28, 69], "move": [22, 64, 65, 69, 70], "much": 70, "multipl": [1, 2, 3, 4, 6, 7, 9, 28, 34, 52, 73], "multiple_output": [1, 2, 3, 4, 6, 7, 9], "multiprocess": 16, "must": [16, 22, 24, 26, 38, 66, 69], "my": 73, "my_python_cal": 22, "my_script": 16, "my_sleeping_funct": 73, "my_task": 22, "mysql": [64, 65], "naik": 68, "name": [11, 16, 22, 24, 25, 28, 29, 34, 36, 40, 43, 69], "namedtupl": 14, "namespac": 65, "nativ": [40, 55, 56], "necessari": [17, 18, 21, 25, 28], "need": [8, 16, 17, 22, 27, 28, 38, 52, 69, 73, 79], "never": [19, 21, 26], "new": [16, 22, 26, 65, 73, 75], "new_sess": 35, "newli": 42, "newlin": 22, "next": [27, 34, 75], "next_kwarg": [27, 29, 32], "next_method": [27, 29, 32], "nice": 69, "node": 42, "non": [16, 22, 26, 64, 65, 69, 70], "none": [0, 1, 2, 3, 4, 6, 7, 8, 9, 13, 14, 16, 17, 18, 22, 24, 26, 27, 28, 29, 31, 32, 33, 35, 38, 40, 42, 55, 56, 57, 59, 64, 65, 68, 70, 73], "normal": [22, 73], "note": [14, 21, 22, 24, 28, 73, 78], "noth": 19, "notic": 73, "notpreviouslyskippeddep": 42, "notset": 24, "nov": 65, "now": [18, 64, 65, 77], "np": 73, "null": [64, 65], "number": [28, 38, 43], "numer": 69, "numpi": 73, "o": [4, 14, 22, 68, 73], "object": [8, 22, 24, 28, 31, 40, 47, 64, 65, 69, 70, 73], "obtain": 73, "occur": [27, 70], "offer": [73, 78], "offici": 68, "old": [22, 64, 65], "older": 75, "omit": 14, "on_kil": 16, "onc": [36, 38, 68, 73], "one": [14, 17, 18, 22, 25, 27, 28, 35, 52, 68, 70, 73], "onli": [0, 4, 7, 9, 21, 22, 24, 26, 29, 36, 70, 73, 75, 78], "op_arg": [8, 22, 31, 73], "op_kwarg": [8, 22, 31, 73], "openlineag": [64, 65], "oper": [0, 1, 2, 3, 4, 6, 7, 8, 9, 15, 27, 28, 29, 32, 33, 42, 49, 56, 64, 65, 66, 69, 70, 73, 77, 81], "operation": 38, "operator_extra_link": [24, 28], "opt": 69, "option": [8, 14, 22, 24, 25, 28, 34, 40, 66, 78], "order": 70, "org": [14, 68, 69], "origin": [14, 68], "other": [17, 22, 26, 28, 42, 69, 73, 76, 78], "other_dai": 25, "otherwis": [8, 14, 16, 33, 66, 70, 73, 76, 77], "our": 35, "out": [26, 28, 52, 65, 73, 75], "output": [14, 16, 22, 26, 73], "output_encod": [14, 16, 26], "output_processor": [16, 69], "outsid": [21, 22], "over": [69, 70, 73, 81], "overal": 69, "overhead": 22, "overrid": [16, 27, 28, 29, 31, 32, 33, 34, 73], "own": 38, "owner": 68, "packag": [13, 22, 40, 64, 66, 73], "package_index": 12, "package_index_default": 13, "package_nam": 68, "package_vers": 68, "packageindexhook": [13, 65], "page": [66, 68], "pagin": [64, 65], "paradigm": 69, "param": [8, 16, 35, 64, 65], "paramet": [0, 1, 2, 3, 4, 6, 7, 8, 9, 14, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 64, 65, 69, 70, 73, 78], "parameter": 69, "parent": 22, "parent_dag": 78, "parent_dag_task_group_id": 78, "parent_task": [52, 78], "parent_task_sensor": 78, "part": [22, 73], "parti": 75, "particularli": 69, "pass": [14, 16, 17, 18, 21, 22, 25, 27, 28, 29, 32, 34, 65, 69, 79], "password": 11, "patchlevel": 75, "path": [4, 11, 22, 29, 35, 36, 38, 40, 66, 69, 70, 73], "path_to_python_binari": [49, 50, 55, 56, 73], "pathlib": 69, "pathlik": 22, "paus": 24, "pendulum": [38, 64, 65, 70, 73], "per": [64, 65, 73], "perform": [16, 69, 70, 73], "perhap": [22, 73], "period": [28, 33, 35, 70], "persist": 73, "pgp": 68, "pgpk": 68, "pgpv": 68, "phase": 38, "pi_conn_id": 13, "pick": 75, "pickl": [22, 73], "pip": [22, 40, 66, 67, 68, 73], "pip_install_opt": [22, 40, 73], "pipelin": [22, 69, 73], "place": [22, 31, 69], "placehold": 40, "pleas": [64, 68, 73], "plugin": [22, 64, 65], "pod": 73, "point": [4, 21, 22, 28, 69, 73], "poke": [24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 52], "poke_interv": [24, 35, 36, 81], "pokereturnvalu": 81, "polici": [64, 75], "poll": 28, "poll_interv": [28, 35], "pollut": 73, "poorli": 38, "popen": 14, "popul": 22, "port": [11, 64, 65], "posit": [8, 22, 28, 31], "possibl": [28, 69], "post": [64, 65, 73], "potenti": 70, "power": 69, "pprint": 73, "practic": 78, "pre": [64, 65, 69, 73], "prefix": [14, 16], "preinstal": [65, 73], "prepar": [65, 75], "prepare_virtualenv": 40, "presenc": 52, "present": [22, 33, 77], "prestohook": 65, "pretti": 38, "prevent": [22, 28, 73], "previou": [28, 68], "previous": 66, "primari": 68, "print": [56, 73], "print_context": [56, 73], "print_the_context": 73, "prioriti": 28, "privat": 73, "problem": 73, "proce": 22, "process": [14, 16, 19, 22, 26, 69], "produc": [21, 69], "product": 64, "project": [64, 65], "propag": 22, "proper": 69, "properli": 70, "properti": [16, 29], "protocol": 73, "provid": [64, 66, 68, 75, 78], "provider_download_dir": 68, "provider_test": 65, "publish": 75, "purpos": [22, 73], "push": [16, 22, 69, 73], "put": [16, 31, 78], "py": [16, 64, 65, 69, 70, 72, 73, 74, 76, 77, 78, 79, 81], "py3": 68, "pydanitc": [64, 65], "pypi": 75, "pytest": 65, "python": [1, 2, 3, 4, 5, 7, 8, 13, 20, 30, 40, 43, 49, 50, 55, 56, 64, 65, 66, 67, 68, 73, 81], "python3": 16, "python_bin": 40, "python_cal": [0, 1, 2, 3, 4, 6, 7, 8, 9, 22, 31, 73, 81], "python_task": 6, "python_vers": 22, "python_virtualenv": [5, 39], "pythonbranchoper": 71, "pythonoper": [8, 22, 64, 65, 71], "pythonsensor": [8, 31, 80], "pythonvirtualenvoper": [22, 64, 65, 71], "queri": [28, 73], "quot": [16, 69], "rais": [16, 22, 24, 26, 52, 69, 70], "random": 73, "random_bas": 73, "rang": [70, 73], "rather": [28, 38, 73], "re": [22, 38, 64, 65, 70, 73], "reach": [28, 38, 52], "react": 28, "readi": [65, 81], "readm": 65, "realli": 70, "reason": [69, 75], "receiv": [28, 69, 70, 75], "recent": 21, "recogn": 16, "recommend": [68, 69, 73, 81], "reconstruct": 38, "record": 28, "recreat": 24, "recurs": [28, 29, 36, 52, 78], "recursion_depth": 28, "red": [28, 73], "ref": [64, 65], "refactor": [64, 65], "refer": [8, 16, 17, 19, 22, 23, 24, 26, 27, 29, 31, 32, 33, 64, 65], "referenc": 22, "regardless": 73, "registr": [64, 65], "regular": [52, 73], "rel": [29, 36, 69], "relat": [64, 65, 73, 78], "relationship": 78, "releas": [64, 65, 67], "relev": [36, 38, 68], "reli": 73, "reloc": [64, 65], "remot": [52, 73, 78], "remov": [64, 65, 68], "renam": [64, 65], "render": [16, 17, 19, 22, 23, 24, 27, 29, 32, 33, 40, 64, 65, 69], "render_template_as_native_obj": 40, "renderedtifield": [64, 65], "repeat": 73, "replac": [22, 27, 33, 40, 64, 65, 73], "repositori": 73, "represent": 78, "request": 36, "requir": [22, 27, 29, 32, 40, 65, 73, 75, 77], "requirements_file_path": 40, "rerun": 24, "reschedul": [78, 81], "reset": 24, "reset_al": 73, "reset_dag_run": 24, "resolv": 22, "respect": [22, 28, 73], "respons": 78, "restart": 73, "result": [16, 22, 28, 70], "result_processor": 69, "resum": 38, "retri": [26, 28], "retriev": 22, "retry_exit_cod": 26, "return": [1, 2, 3, 4, 6, 7, 9, 11, 13, 14, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 38, 40, 43, 69, 73, 76, 81], "return_valu": 22, "reus": [0, 1, 2, 3, 4, 6, 7, 8, 9, 22], "revert": 65, "rewrit": [64, 65], "risk": [16, 69], "rsa": 68, "rst": [64, 65], "ruff": 65, "rule": [65, 73, 75], "run": [4, 7, 14, 16, 17, 18, 21, 22, 24, 25, 27, 28, 33, 34, 35, 36, 38, 42, 68, 70, 73, 77, 78], "run_aft": [33, 64, 65, 77], "run_after_loop": 69, "run_command": 14, "run_command_from_script": 69, "run_id": [35, 64, 65], "run_script": 69, "run_thi": [69, 73], "run_this_first": [49, 50], "run_this_last": 46, "run_typ": 21, "runs_ids_or_dates_len": 35, "runtim": [22, 64, 65, 73], "runtimetaskinstanceprotocol": 42, "sade": 23, "same": [16, 17, 19, 22, 23, 24, 27, 28, 29, 32, 33, 38, 42, 73, 78], "sampl": 73, "sanit": [16, 69], "sat": 68, "satisfi": 73, "saturdai": [25, 34, 43, 69, 70], "save": 38, "scenario": 69, "schedul": [19, 21, 27, 64, 65, 70, 73, 78], "schema": [11, 65], "scope": [22, 75], "script": [16, 26, 40, 64, 65, 68, 69], "sdist": 68, "sdk": [17, 18, 21, 24, 25, 28, 42, 64, 65], "sec": 35, "second": [28, 35, 38, 70, 73, 77], "secret": 73, "section": [65, 69], "see": [14, 22, 28, 40, 65, 66, 67, 73], "select": [28, 52, 66, 68, 69, 73, 78], "self": [14, 17, 22, 24, 68], "semicolon": 65, "semver": [64, 75], "send": [14, 64, 65], "send_sigterm": 14, "sens": [76, 77], "sensor": [5, 15, 57, 64, 65, 78, 79, 81], "sensor_fails_after_3_second": 76, "sensor_help": [39, 64, 65], "sensor_succe": 76, "sensor_task": 8, "sentri": 14, "sep": 68, "separ": [22, 69, 75], "sequenc": [8, 16, 22, 24, 26, 27, 29, 31], "serial": [22, 28, 35, 36, 38, 64, 73], "serialis": 38, "server": [11, 68], "session": [28, 35, 64, 65], "set": [1, 2, 3, 4, 6, 7, 9, 16, 22, 24, 25, 26, 27, 28, 29, 32, 34, 36, 42, 43, 52, 64, 65, 66, 70, 73, 78], "sh": [16, 26, 69], "sha": 68, "sha512": 68, "shallow_copy_attr": [8, 22], "share": 73, "shasum": 68, "shell": [14, 16, 69], "shlex": 69, "short": [22, 64, 65, 73], "short_circuit": [5, 59, 73], "short_circuit_task": 9, "shortcircuitoper": [9, 22, 60, 71], "should": [4, 11, 16, 17, 18, 21, 22, 25, 36, 38, 42, 64, 65, 66, 68, 69, 73, 75, 76, 78], "shouldn": [64, 65], "show": [22, 50], "show_return_value_in_log": 22, "showcas": 49, "shown": 69, "sign": 68, "signal": 14, "signatur": [22, 68], "sigterm": 14, "similarli": 22, "simpler": 78, "simplest": 22, "simpli": [16, 28], "simplifi": [65, 69], "sinc": [38, 70, 73], "singl": [0, 1, 2, 3, 4, 6, 7, 8, 9, 17, 22, 25, 34, 42, 78], "sister": 49, "situat": 70, "skip": [16, 17, 21, 22, 24, 28, 35, 42, 73, 78], "skip_all_except": 42, "skip_on_exit_cod": [16, 22, 69], "skip_when_already_exist": 24, "skipmixin": [17, 22, 39], "skipmixin_kei": 42, "skipped_st": [28, 35], "sleep": [38, 69, 73], "sleep_for_": 73, "sleep_in": 69, "sleeping_task": 73, "slightli": 70, "slot": [27, 32, 33, 73], "slower": 28, "smooth": 20, "smoother": 73, "smoothoper": [23, 64, 65], "so": [4, 22, 38, 42, 66, 69, 70, 73, 75], "soft_fail": [28, 35, 76, 77, 81], "softwar": 68, "some": [27, 38, 70, 73, 78], "somepackag": 73, "someth": 24, "sometim": [22, 31, 78], "song": 23, "sourc": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 69, 70, 72, 73, 74, 76, 77, 78, 79, 81], "space": [16, 69, 73], "span": 70, "special": 73, "specif": [4, 22, 28, 35, 36, 73, 77, 78], "specifi": [11, 13, 16, 22, 24, 27, 32, 33, 34, 69, 73, 77], "split": [22, 65], "sql": [22, 62, 65, 73], "src": 69, "ssh": 64, "stabl": [14, 64], "stakehold": 75, "standard": [64, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 81], "start": [4, 22, 27, 29, 32, 33, 53, 64, 65, 66, 73, 78], "start_d": 31, "start_dat": [52, 64, 65], "start_from_trigg": [27, 29, 32], "start_trigger_arg": [27, 29, 32], "starttriggerarg": [27, 29, 32, 64], "stat": 69, "state": [16, 22, 24, 28, 35, 52, 69], "static": [13, 64, 65, 73], "statu": [24, 28, 35, 52, 73], "stderr": 14, "stdout": [14, 16], "step": 68, "still": [28, 64, 73], "store": [42, 69], "str": [4, 8, 11, 14, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 38, 40, 43, 69, 73], "strftime": 69, "strict": 75, "string": [4, 22, 43, 66, 69], "string_arg": 22, "strip": 65, "strong": 73, "structur": [65, 69], "stuff": [22, 73], "style": [22, 73], "sub": [16, 22], "sub_process": 14, "subclass": [17, 18, 21, 22, 25, 38], "subdirectori": [29, 73], "subfold": 73, "subject": 65, "submit": [16, 69], "subprocess": [12, 16], "subprocess_": 14, "subprocess_hook": 16, "subprocesshook": [14, 65], "subprocessresult": 14, "subsequ": [22, 73], "succe": [27, 28, 32, 76], "succeed": [33, 78], "success": [16, 24, 28, 35, 38, 52, 78], "success_cal": [58, 81], "success_sensor_python": 81, "suffici": 73, "suit": 27, "suitabl": 70, "sum": 68, "sundai": [25, 34, 43, 69, 70], "superflu": [64, 65], "suppli": 14, "support": [24, 64, 65, 67, 73], "suppos": 70, "sure": 73, "surround": 73, "switch": 65, "sy": 73, "system": [4, 18, 22, 24, 25, 28, 34, 38, 40, 69, 70, 72, 73, 74, 76, 77, 78, 79, 81], "system_site_packag": [22, 40, 73], "t": [22, 28, 34, 38, 64, 65, 69, 73], "t0": [58, 77], "t0a": 77, "t1": 77, "t10": 81, "t11": 77, "t1a": 77, "t2": [69, 77], "t2a": 77, "t3": 76, "t4": 76, "t6": 79, "t7": 79, "t9": 81, "take": [1, 2, 3, 16, 18, 22, 25, 26, 27, 28, 29, 31, 32, 33, 34, 38, 69, 70, 73], "taken": [16, 69], "tar": 68, "target": [18, 22, 28, 47, 65, 70], "target_datetim": 32, "target_low": [18, 70], "target_tim": [27, 32, 77], "target_times_as_d": 18, "target_upp": [18, 70], "tash": 69, "task": [8, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 38, 42, 50, 52, 59, 64, 65, 69, 73, 78, 81], "task_": 73, "task_1": 73, "task_2": 73, "task_3": 73, "task_4": 73, "task_5": 73, "task_6": 73, "task_7": 73, "task_group_id": [17, 18, 22, 25, 28, 64, 65], "task_id": [8, 16, 17, 18, 21, 22, 25, 27, 28, 34, 42, 69, 70, 72, 73, 74, 76, 77, 78, 79, 81], "task_inst": 73, "task_instance_key_str": 69, "taskapi": 22, "taskflow": [50, 55, 59, 64, 65, 69], "taskinst": [24, 28, 64, 65, 73], "taskinstancekei": [24, 28], "taskinstancest": 28, "tasksdk": [64, 65], "team": 78, "tell": 52, "temp": [22, 73], "tempfil": 73, "templat": [8, 16, 17, 19, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 40, 64, 65], "template_ext": [16, 22], "template_field": [8, 16, 22, 24, 26, 27, 28, 29, 31], "template_fields_render": [8, 16, 22, 24], "template_searchpath": [16, 69], "templated_field": 28, "templates_dict": [22, 31, 73], "templates_ext": [22, 73], "tempor": 37, "temporari": [14, 16, 26, 50, 68, 69, 73], "temporary_file_for_test": 79, "test": [11, 13, 64, 65, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81], "test_connect": [11, 13], "test_dag": 69, "test_run": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "test_run2": 47, "test_run3": 47, "test_sensor_help": 65, "test_trigger_dagrun": 74, "tests_common": [64, 65], "text": 73, "than": [22, 28, 38, 70, 73], "thei": [38, 42], "them": [18, 73, 78], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "this_skip": 69, "this_will_skip": [46, 69], "those": [68, 70], "though": 22, "thread": 16, "through": [22, 73], "throw": 16, "thu": [28, 69], "thursdai": 43, "ti": [22, 42, 64, 65, 73], "ti_kei": [24, 28, 69], "till": 52, "time": [18, 21, 26, 28, 30, 33, 35, 36, 38, 47, 52, 64, 65, 73, 77, 78], "time_delta": 30, "time_to_wait": 33, "timedelta": [27, 28, 29, 32, 33, 38, 77, 78], "timedeltasensor": [27, 33, 80], "timedeltasensorasync": [33, 64, 65, 80], "timedeltatrigg": 38, "timeout": [26, 27, 28, 29, 32, 64, 65, 76, 77, 78, 81], "timeout_after_second_date_in_the_futur": 77, "timeout_after_second_date_in_the_future_async": 77, "timesensor": [27, 32, 80], "timesensorasync": [32, 80], "timet": 21, "timezon": 77, "tmp": [11, 69, 73, 79], "todai": 69, "togeth": [28, 78], "tomorrow": 27, "too": 28, "tool": [65, 66], "top": [67, 68], "transfer": [64, 65], "transform": 69, "transit": 28, "transmiss": 22, "treat": [16, 22, 26], "tree": 65, "tri": [16, 24, 69], "trigger": [15, 21, 24, 27, 28, 29, 32, 33, 61, 64, 65, 73, 74, 77], "trigger_cl": [27, 29, 32], "trigger_dag_id": [24, 64, 65, 74], "trigger_dagrun": 20, "trigger_kwarg": [27, 29, 32], "trigger_logical_date_iso": 24, "trigger_rul": [22, 73], "trigger_run_id": 24, "triggerdagrun": [64, 65], "triggerdagrunlink": 24, "triggerdagrunoper": [24, 61, 64, 65, 71], "triggerrul": 73, "trinohook": 65, "true": [4, 6, 7, 9, 16, 17, 18, 19, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 40, 70, 73, 76, 77, 78, 79, 81], "true_": 73, "trust": 68, "truthi": [22, 73], "try": [36, 64, 65, 69], "ts_zulu": 69, "tuesdai": [25, 34, 43], "tupl": [14, 38], "tuple_in_condit": [64, 65], "tutorial_etl_dag": 57, "twitter": 65, "two": [18, 25, 38, 70, 78], "txt": [22, 40, 73], "type": [0, 4, 7, 9, 11, 14, 16, 22, 24, 28, 38, 40, 42, 64, 65, 66, 69, 73], "type_check": [64, 65], "typo": 65, "tz": 77, "ui": [16, 24, 28, 64, 65, 69], "ui_color": [16, 19, 21, 22, 23, 24, 28, 29], "under": [11, 69], "underli": 73, "understand": 78, "unexpectedli": 38, "unfortun": 73, "unilater": 70, "uniqu": [64, 65, 73], "unit": 65, "unknown": 68, "unless": 16, "unnecessari": [27, 64, 65], "unpack": [8, 22, 31, 40], "unrol": [1, 2, 3, 4, 6, 7, 9], "until": [24, 27, 28, 29, 32, 34, 36, 38, 64], "unus": 65, "up": [16, 22, 27, 32, 33, 52, 73], "updat": [16, 64, 65], "upgrad": [64, 65, 75], "upper": 18, "upstream": [8, 73, 81], "url": [13, 22, 40, 73], "us": [0, 1, 2, 3, 4, 7, 9, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 40, 50, 52, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81], "usag": [27, 29, 32, 46, 47, 48, 49, 50, 55, 56, 57, 59, 60, 61], "use_airflow_context": [64, 65], "use_dil": 64, "use_task_execution_d": 64, "use_task_logical_d": [18, 25, 34, 64, 65, 70], "user": [8, 16, 17, 22, 24, 28, 31, 52, 64, 65, 68, 69, 78], "usr": [49, 50, 55, 56, 69], "usual": [4, 22, 26, 73, 78], "utc": [38, 77], "utf": [14, 16, 26], "util": [15, 16, 17, 22, 24, 25, 34, 35, 64, 65], "uv": [65, 66], "v": 23, "valid": [24, 43, 64, 65, 68], "validate_count_dags_af_3": 35, "validate_week_dai": 43, "valu": [1, 2, 3, 4, 6, 7, 9, 22, 25, 28, 31, 34, 35, 43, 65, 69, 70, 73, 76, 81], "var": [22, 73], "variabl": [14, 16, 22, 26, 40, 56, 65, 66, 69, 73], "variat": 73, "variou": 65, "vector": 73, "venv": [4, 22, 64, 65], "venv_": 73, "venv_cache_path": [22, 73], "venv_directori": 40, "version": [16, 22, 50, 64, 65, 67, 68, 73, 75, 77], "version_compat": 15, "via": [4, 7, 16, 67, 68, 69, 73, 78, 79], "virtual": [4, 7, 22, 40, 50, 55, 56, 66], "virtualenv": [4, 22, 40, 64, 65, 73], "virtualenv_python": 73, "virtualenv_string_arg": 22, "virtualenv_task": [7, 73], "visual": 78, "volum": 73, "vulner": 75, "w": 73, "wa": [22, 64, 66, 70], "wai": [16, 64, 65, 73], "wait": [24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 73, 78, 81], "wait_for_0100": 27, "wait_for_complet": 24, "wait_for_fil": 79, "wait_for_file_async": 79, "wait_for_upstream": 81, "wait_some_second": 77, "wait_some_seconds_async": 77, "waitsensor": 33, "want": [28, 34, 35, 68, 69, 73, 75], "warn": [22, 64, 65, 68], "watch": 23, "wave": 65, "we": [8, 27, 38, 64, 75, 78], "web": [16, 28, 69], "webserv": [64, 65], "wednesdai": 43, "week": [25, 34, 43, 70, 77], "week_dai": [25, 34, 43, 70, 77], "week_day_sensor_failing_on_timeout": 77, "week_day_str": 43, "weekdai": [20, 30, 39, 64, 65, 69, 70, 77], "weekend": [25, 70], "weekend_check": [25, 34], "weekli": 78, "well": [47, 50, 68], "were": [22, 64, 66, 73], "what": 22, "whatev": [17, 18, 21, 25, 73], "when": [8, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 36, 38, 40, 42, 52, 64, 65, 69, 70, 73, 75, 76, 78], "whenev": 78, "where": [22, 31, 40, 69, 73, 75], "wherea": 22, "whether": [22, 24, 29, 38, 40, 70, 73], "which": [14, 16, 17, 18, 21, 22, 25, 26, 27, 28, 32, 42, 50, 61, 66, 69, 73, 75, 78], "whichev": 28, "while": [22, 27, 32, 33, 38, 73], "whitespac": 65, "whl": 68, "whole": 16, "why": 68, "wider": 73, "widget": 11, "wip": 64, "within": [16, 29, 36, 55, 56, 69, 73], "without": [16, 22, 27, 28, 29, 32, 33, 64, 73], "won": 73, "work": [14, 16, 22, 64, 65, 69], "workdai": 25, "worker": [27, 28, 29, 32, 33, 73], "workflow": [22, 69, 70], "workflowtrigg": [35, 64, 65], "working_directori": 14, "workspac": 65, "world": [69, 74], "worri": 68, "worth": 78, "would": [8, 22, 25, 28, 40, 73], "wrap": [0, 1, 2, 3, 4, 6, 7, 8, 9], "write": [16, 69], "write_python_script": 40, "written": 16, "wrong": 65, "www": 23, "x": [4, 22, 65], "xcom": [1, 2, 3, 4, 6, 7, 9, 16, 22, 42, 64, 65, 69, 73], "xcom_logical_date_iso": 24, "xcom_run_id": 24, "xcom_skipmixin_follow": 42, "xcom_skipmixin_kei": 42, "xcom_skipmixin_skip": 42, "xcom_valu": 81, "yaml": 65, "yesterdai": 28, "yet": [26, 35], "yield": 38, "you": [14, 16, 22, 25, 28, 34, 35, 66, 67, 68, 69, 73, 75, 78, 79], "your": [8, 16, 22, 31, 40, 69, 70, 73, 79], "youtub": 23, "yt_link": 23, "zero": [16, 21, 22, 26, 69]}, "titles": ["airflow.providers.standard.decorators.bash", "airflow.providers.standard.decorators.branch_external_python", "airflow.providers.standard.decorators.branch_python", "airflow.providers.standard.decorators.branch_virtualenv", "airflow.providers.standard.decorators.external_python", "airflow.providers.standard.decorators", "airflow.providers.standard.decorators.python", "airflow.providers.standard.decorators.python_virtualenv", "airflow.providers.standard.decorators.sensor", "airflow.providers.standard.decorators.short_circuit", "airflow.providers.standard.get_provider_info", "airflow.providers.standard.hooks.filesystem", "airflow.providers.standard.hooks", "airflow.providers.standard.hooks.package_index", "airflow.providers.standard.hooks.subprocess", "airflow.providers.standard", "airflow.providers.standard.operators.bash", "airflow.providers.standard.operators.branch", "airflow.providers.standard.operators.datetime", "airflow.providers.standard.operators.empty", "airflow.providers.standard.operators", "airflow.providers.standard.operators.latest_only", "airflow.providers.standard.operators.python", "airflow.providers.standard.operators.smooth", "airflow.providers.standard.operators.trigger_dagrun", "airflow.providers.standard.operators.weekday", "airflow.providers.standard.sensors.bash", "airflow.providers.standard.sensors.date_time", "airflow.providers.standard.sensors.external_task", "airflow.providers.standard.sensors.filesystem", "airflow.providers.standard.sensors", "airflow.providers.standard.sensors.python", "airflow.providers.standard.sensors.time", "airflow.providers.standard.sensors.time_delta", "airflow.providers.standard.sensors.weekday", "airflow.providers.standard.triggers.external_task", "airflow.providers.standard.triggers.file", "airflow.providers.standard.triggers", "airflow.providers.standard.triggers.temporal", "airflow.providers.standard.utils", "airflow.providers.standard.utils.python_virtualenv", "airflow.providers.standard.utils.sensor_helper", "airflow.providers.standard.utils.skipmixin", "airflow.providers.standard.utils.weekday", "airflow.providers.standard.version_compat", "tests.system.standard.example_bash_decorator", "tests.system.standard.example_bash_operator", "tests.system.standard.example_branch_datetime_operator", "tests.system.standard.example_branch_day_of_week_operator", "tests.system.standard.example_branch_operator", "tests.system.standard.example_branch_operator_decorator", "tests.system.standard.example_external_task_child_deferrable", "tests.system.standard.example_external_task_marker_dag", "tests.system.standard.example_external_task_parent_deferrable", "tests.system.standard.example_latest_only", "tests.system.standard.example_python_decorator", "tests.system.standard.example_python_operator", "tests.system.standard.example_sensor_decorator", "tests.system.standard.example_sensors", "tests.system.standard.example_short_circuit_decorator", "tests.system.standard.example_short_circuit_operator", "tests.system.standard.example_trigger_controller_dag", "tests.system.standard", "tests.system.standard.sql", "Changelog", "Package apache-airflow-providers-standard", "Configuration Reference", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apache-airflow-providers-standard</span></code>", "Installing from sources", "BashOperator", "BranchDateTimeOperator", "Standard Operators", "LatestOnlyOperator", "PythonOperator", "TriggerDagRunOperator", "Releasing security patches", "BashSensor", "TimeDeltaSensor", "Cross-DAG Dependencies", "FileSensor", "Standard Sensors", "PythonSensor"], "titleterms": {"0": [64, 65], "1": [64, 65], "2": [64, 65], "3": [64, 65], "4": [64, 65], "With": 69, "airflow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 65, 67], "apach": [65, 67], "argument": 73, "attribut": [15, 22, 24, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "bash": [0, 16, 26, 69], "bashoper": 69, "bashsensor": 76, "branch": 17, "branch_external_python": 1, "branch_python": 2, "branch_virtualenv": 3, "branchdatetimeoper": 70, "branchdayofweekoper": 70, "branchexternalpythonoper": 73, "branchpythonvirtualenvoper": 73, "break": 64, "bug": 64, "cach": 73, "chang": 64, "changelog": 64, "class": [8, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 42, 43], "command": 69, "configur": 66, "content": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "context": 73, "cross": 78, "current": 70, "dag": 78, "date": 70, "date_tim": 27, "datetim": 18, "dayofweeksensor": 77, "decor": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "depend": 78, "doc": 64, "empti": 19, "enrich": 69, "environ": 73, "example_bash_decor": 45, "example_bash_oper": 46, "example_branch_datetime_oper": 47, "example_branch_day_of_week_oper": 48, "example_branch_oper": 49, "example_branch_operator_decor": 50, "example_external_task_child_deferr": 51, "example_external_task_marker_dag": 52, "example_external_task_parent_deferr": 53, "example_latest_onli": 54, "example_python_decor": 55, "example_python_oper": 56, "example_sensor": 58, "example_sensor_decor": 57, "example_short_circuit_decor": 59, "example_short_circuit_oper": 60, "example_trigger_controller_dag": 61, "except": 24, "execut": 69, "external_python": 4, "external_task": [28, 35], "externalpythonoper": 73, "externaltaskmark": 78, "externaltasksensor": 78, "featur": 64, "file": [36, 69], "filesensor": 79, "filesystem": [11, 29], "fix": 64, "found": 69, "from": [68, 69], "function": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 14, 18, 22, 40, 44, 45, 55, 56, 57, 58, 59], "get_provider_info": 10, "hook": [11, 12, 13, 14], "instal": [67, 68], "integr": 68, "jinja": 69, "latest_onli": 21, "latestonlyoper": 72, "logic": 70, "misc": 64, "modul": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "onli": 64, "oper": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 71], "option": 73, "output": 69, "packag": [15, 65, 67, 68], "package_index": 13, "pass": 73, "patch": 75, "processor": 69, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 65, 67], "pypi": 68, "python": [6, 22, 31, 69], "python_virtualenv": [7, 40], "pythonbranchoper": 73, "pythonoper": 73, "pythonsensor": 81, "pythonvirtualenvoper": 73, "refer": 66, "releas": [68, 75], "requir": 67, "reus": 73, "section": 66, "secur": 75, "sensor": [8, 26, 27, 28, 29, 30, 31, 32, 33, 34, 80], "sensor_help": 41, "setup": 73, "short_circuit": 9, "shortcircuitoper": 73, "skip": 69, "skipmixin": 42, "smooth": 23, "sourc": 68, "sql": 63, "standard": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 80], "submodul": [5, 12, 15, 20, 30, 37, 39, 62], "subprocess": 14, "system": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "task_group": 78, "templat": [69, 73], "tempor": 38, "test": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "time": [32, 70], "time_delta": 33, "timedeltasensor": 77, "timedeltasensorasync": 77, "timesensor": 77, "timesensorasync": 77, "trigger": [35, 36, 37, 38], "trigger_dagrun": 24, "triggerdagrunoper": 74, "usag": 70, "util": [39, 40, 41, 42, 43], "venv_install_method": 66, "verifi": 68, "version_compat": 44, "virtual": 73, "weekdai": [25, 34, 43], "without": 69}})