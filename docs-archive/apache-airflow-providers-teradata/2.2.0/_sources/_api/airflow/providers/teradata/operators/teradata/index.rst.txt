:py:mod:`airflow.providers.teradata.operators.teradata`
=======================================================

.. py:module:: airflow.providers.teradata.operators.teradata


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.teradata.operators.teradata.TeradataOperator
   airflow.providers.teradata.operators.teradata.TeradataStoredProcedureOperator




.. py:class:: TeradataOperator(teradata_conn_id = TeradataHook.default_conn_name, schema = None, **kwargs)


   Bases: :py:obj:`airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator`

   General Teradata Operator to execute queries on Teradata Database.

   Executes sql statements in the Teradata SQL Database using teradatasql jdbc driver

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:TeradataOperator`

   :param sql: the SQL query to be executed as a single string, or a list of str (sql statements)
   :param teradata_conn_id: reference to a predefined database
   :param autocommit: if True, each command is automatically committed.(default value: False)
   :param parameters: (optional) the parameters to render the SQL query with.
   :param schema: The Teradata database to connect to.

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('sql', 'parameters')

      

   .. py:attribute:: template_ext
      :type: Sequence[str]
      :value: ('.sql',)

      

   .. py:attribute:: template_fields_renderers

      

   .. py:attribute:: ui_color
      :value: '#e07c24'

      


.. py:class:: TeradataStoredProcedureOperator(*, procedure, teradata_conn_id = TeradataHook.default_conn_name, parameters = None, **kwargs)


   Bases: :py:obj:`airflow.models.BaseOperator`

   Executes stored procedure in a specific Teradata database.

   :param procedure: name of stored procedure to call (templated)
   :param teradata_conn_id: The :ref:`Teradata connection id <howto/connection:teradata>`
       reference to a specific Teradata database.
   :param parameters: (optional, templated) the parameters provided in the call


   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('procedure', 'parameters')

      

   .. py:attribute:: ui_color
      :value: '#ededed'

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



