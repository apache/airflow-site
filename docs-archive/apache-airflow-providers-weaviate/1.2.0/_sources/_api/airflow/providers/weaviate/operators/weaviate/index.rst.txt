:py:mod:`airflow.providers.weaviate.operators.weaviate`
=======================================================

.. py:module:: airflow.providers.weaviate.operators.weaviate


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.weaviate.operators.weaviate.WeaviateIngestOperator




.. py:class:: WeaviateIngestOperator(conn_id, class_name, input_json = None, input_data = None, vector_col = 'Vector', **kwargs)


   Bases: :py:obj:`airflow.models.BaseOperator`

   Operator that store vector in the Weaviate class.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:WeaviateIngestOperator`

   Operator that accepts input json or pandas dataframe to generate embeddings on or accepting provided
   custom vectors and store them in the Weaviate class.

   :param conn_id: The Weaviate connection.
   :param class_name: The Weaviate class to be used for storing the data objects into.
   :param input_data: The list of dicts or pandas dataframe representing Weaviate data objects to generate
       embeddings on (or provides custom vectors) and store them in the Weaviate class.
   :param input_json: (Deprecated) The JSON representing Weaviate data objects to generate embeddings on (or provides
       custom vectors) and store them in the Weaviate class.
   :param vector_col: key/column name in which the vectors are stored.

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('input_json', 'input_data')

      

   .. py:method:: hook()

      Return an instance of the WeaviateHook.


   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



