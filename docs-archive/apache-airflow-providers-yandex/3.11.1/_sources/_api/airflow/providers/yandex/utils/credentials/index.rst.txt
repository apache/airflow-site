:py:mod:`airflow.providers.yandex.utils.credentials`
====================================================

.. py:module:: airflow.providers.yandex.utils.credentials


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   airflow.providers.yandex.utils.credentials.get_credentials
   airflow.providers.yandex.utils.credentials.get_service_account_key
   airflow.providers.yandex.utils.credentials.get_service_account_id



Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.yandex.utils.credentials.log


.. py:data:: log

   

.. py:function:: get_credentials(oauth_token = None, service_account_json = None, service_account_json_path = None)

   Return credentials JSON for Yandex Cloud SDK based on credentials.

   Credentials will be used with this priority:

   * OAuth Token
   * Service Account JSON file
   * Service Account JSON
   * Metadata Service

   :param oauth_token: OAuth Token
   :param service_account_json: Service Account JSON key or dict
   :param service_account_json_path: Service Account JSON key file path
   :return: Credentials JSON


.. py:function:: get_service_account_key(service_account_json = None, service_account_json_path = None)

   Return Yandex Cloud Service Account key loaded from JSON string or file.

   :param service_account_json: Service Account JSON key or dict
   :param service_account_json_path: Service Account JSON key file path
   :return: Yandex Cloud Service Account key


.. py:function:: get_service_account_id(service_account_json = None, service_account_json_path = None)

   Return Yandex Cloud Service Account ID loaded from JSON string or file.

   :param service_account_json: Service Account JSON key or dict
   :param service_account_json_path: Service Account JSON key file path
   :return: Yandex Cloud Service Account ID


