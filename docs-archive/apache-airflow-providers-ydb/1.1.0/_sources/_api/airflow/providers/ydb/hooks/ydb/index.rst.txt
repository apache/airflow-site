:py:mod:`airflow.providers.ydb.hooks.ydb`
=========================================

.. py:module:: airflow.providers.ydb.hooks.ydb


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.ydb.hooks.ydb.YDBCursor
   airflow.providers.ydb.hooks.ydb.YDBConnection
   airflow.providers.ydb.hooks.ydb.YDBHook




Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.ydb.hooks.ydb.DEFAULT_YDB_GRPCS_PORT


.. py:data:: DEFAULT_YDB_GRPCS_PORT
   :type: int
   :value: 2135

   

.. py:class:: YDBCursor(delegatee, is_ddl)


   YDB cursor wrapper.

   .. py:property:: rowcount


   .. py:property:: description


   .. py:method:: execute(sql, parameters = None)


   .. py:method:: executemany(sql, seq_of_parameters)


   .. py:method:: executescript(script)


   .. py:method:: fetchone()


   .. py:method:: fetchmany(size=None)


   .. py:method:: fetchall()


   .. py:method:: nextset()


   .. py:method:: setinputsizes(sizes)


   .. py:method:: setoutputsize(column=None)


   .. py:method:: __enter__()


   .. py:method:: __exit__(exc_type, exc_val, exc_tb)


   .. py:method:: close()



.. py:class:: YDBConnection(endpoint, database, credentials, is_ddl = False)


   YDB connection wrapper.

   .. py:method:: cursor()


   .. py:method:: begin()


   .. py:method:: commit()


   .. py:method:: rollback()


   .. py:method:: __enter__()


   .. py:method:: __exit__(exc_type, exc_val, exc_tb)


   .. py:method:: close()



.. py:class:: YDBHook(*args, is_ddl = False, **kwargs)


   Bases: :py:obj:`airflow.providers.common.sql.hooks.sql.DbApiHook`

   Interact with YDB.

   .. py:property:: sqlalchemy_url
      :type: sqlalchemy.engine.URL

      Return a Sqlalchemy.engine.URL object from the connection.

      Needs to be implemented in the provider subclass to return the sqlalchemy.engine.URL object.

      :return: the extracted sqlalchemy.engine.URL object.


   .. py:attribute:: conn_name_attr
      :type: str

      

   .. py:attribute:: default_conn_name
      :type: str

      

   .. py:attribute:: conn_type
      :type: str

      

   .. py:attribute:: hook_name
      :type: str
      :value: 'YDB'

      

   .. py:attribute:: supports_autocommit
      :type: bool
      :value: True

      

   .. py:attribute:: supports_executemany
      :type: bool
      :value: True

      

   .. py:method:: get_connection_form_widgets()
      :classmethod:

      Return connection widgets to add to YDB connection form.


   .. py:method:: get_ui_field_behaviour()
      :classmethod:

      Return custom UI field behaviour for YDB connection.


   .. py:method:: get_conn()

      Establish a connection to a YDB database.



