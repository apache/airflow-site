:py:mod:`airflow.providers.ydb.hooks._vendor.dbapi.cursor`
==========================================================

.. py:module:: airflow.providers.ydb.hooks._vendor.dbapi.cursor


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.ydb.hooks._vendor.dbapi.cursor.YdbQuery
   airflow.providers.ydb.hooks._vendor.dbapi.cursor.Cursor
   airflow.providers.ydb.hooks._vendor.dbapi.cursor.AsyncCursor



Functions
~~~~~~~~~

.. autoapisummary::

   airflow.providers.ydb.hooks._vendor.dbapi.cursor.get_column_type



Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.ydb.hooks._vendor.dbapi.cursor.logger


.. py:data:: logger

   

.. py:function:: get_column_type(type_obj)


.. py:class:: YdbQuery


   .. py:attribute:: yql_text
      :type: str

      

   .. py:attribute:: parameters_types
      :type: Dict[str, Union[ydb.PrimitiveType, ydb.AbstractTypeBuilder]]

      

   .. py:attribute:: is_ddl
      :type: bool
      :value: False

      


.. py:class:: Cursor(session_pool, tx_mode, tx_context = None, table_path_prefix = '')


   .. py:property:: rowcount


   .. py:method:: describe_table(abs_table_path)


   .. py:method:: check_exists(abs_table_path)


   .. py:method:: get_table_names(abs_dir_path)


   .. py:method:: execute(operation, parameters = None)


   .. py:method:: executemany(operation, seq_of_parameters)


   .. py:method:: executescript(script)


   .. py:method:: fetchone()


   .. py:method:: fetchmany(size=None)


   .. py:method:: fetchall()


   .. py:method:: nextset()


   .. py:method:: setinputsizes(sizes)


   .. py:method:: setoutputsize(column=None)


   .. py:method:: close()



.. py:class:: AsyncCursor(session_pool, tx_mode, tx_context = None, table_path_prefix = '')


   Bases: :py:obj:`Cursor`


