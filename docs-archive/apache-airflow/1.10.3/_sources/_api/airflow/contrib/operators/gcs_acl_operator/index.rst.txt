

:mod:`airflow.contrib.operators.gcs_acl_operator`
=================================================

.. py:module:: airflow.contrib.operators.gcs_acl_operator







Module Contents
---------------






.. py:class:: GoogleCloudStorageBucketCreateAclEntryOperator(bucket, entity, role, user_project=None, google_cloud_storage_conn_id='google_cloud_default', *args, **kwargs)

   Bases::class:`airflow.models.BaseOperator`

   

   Creates a new ACL entry on the specified bucket.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GoogleCloudStorageBucketCreateAclEntryOperator`

   :param bucket: Name of a bucket.
   :type bucket: str
   :param entity: The entity holding the permission, in one of the following forms:
       user-userId, user-email, group-groupId, group-email, domain-domain,
       project-team-projectId, allUsers, allAuthenticatedUsers
   :type entity: str
   :param role: The access permission for the entity.
       Acceptable values are: "OWNER", "READER", "WRITER".
   :type role: str
   :param user_project: (Optional) The project to be billed for this request.
       Required for Requester Pays buckets.
   :type user_project: str
   :param google_cloud_storage_conn_id: The connection ID to use when
       connecting to Google Cloud Storage.
   :type google_cloud_storage_conn_id: str


   

   

   .. attribute:: template_fields
      :annotation: = ['bucket', 'entity', 'role', 'user_project'] 

      



   

   

   

   .. method:: execute(self, context)

      











.. py:class:: GoogleCloudStorageObjectCreateAclEntryOperator(bucket, object_name, entity, role, generation=None, user_project=None, google_cloud_storage_conn_id='google_cloud_default', *args, **kwargs)

   Bases::class:`airflow.models.BaseOperator`

   

   Creates a new ACL entry on the specified object.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GoogleCloudStorageObjectCreateAclEntryOperator`

   :param bucket: Name of a bucket.
   :type bucket: str
   :param object_name: Name of the object. For information about how to URL encode object
       names to be path safe, see:
       https://cloud.google.com/storage/docs/json_api/#encoding
   :type object_name: str
   :param entity: The entity holding the permission, in one of the following forms:
       user-userId, user-email, group-groupId, group-email, domain-domain,
       project-team-projectId, allUsers, allAuthenticatedUsers
   :type entity: str
   :param role: The access permission for the entity.
       Acceptable values are: "OWNER", "READER".
   :type role: str
   :param generation: (Optional) If present, selects a specific revision of this object
       (as opposed to the latest version, the default).
   :type generation: str
   :param user_project: (Optional) The project to be billed for this request.
       Required for Requester Pays buckets.
   :type user_project: str
   :param google_cloud_storage_conn_id: The connection ID to use when
       connecting to Google Cloud Storage.
   :type google_cloud_storage_conn_id: str


   

   

   .. attribute:: template_fields
      :annotation: = ['bucket', 'object_name', 'entity', 'role', 'generation', 'user_project'] 

      



   

   

   

   .. method:: execute(self, context)

      









