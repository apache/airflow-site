:py:mod:`airflow.example_dags.example_dynamic_task_mapping_with_no_taskflow_operators`
======================================================================================

.. py:module:: airflow.example_dags.example_dynamic_task_mapping_with_no_taskflow_operators

.. autoapi-nested-parse::

   Example DAG demonstrating the usage of dynamic task mapping with non-TaskFlow operators.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.example_dags.example_dynamic_task_mapping_with_no_taskflow_operators.AddOneOperator
   airflow.example_dags.example_dynamic_task_mapping_with_no_taskflow_operators.SumItOperator




Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.example_dags.example_dynamic_task_mapping_with_no_taskflow_operators.add_one_task


.. py:class:: AddOneOperator(value, **kwargs)


   Bases: :py:obj:`airflow.models.baseoperator.BaseOperator`

   A custom operator that adds one to the input.

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: SumItOperator(values, **kwargs)


   Bases: :py:obj:`airflow.models.baseoperator.BaseOperator`

   A custom operator that sums the input.

   .. py:attribute:: template_fields
      :value: ('values',)

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:data:: add_one_task

   

