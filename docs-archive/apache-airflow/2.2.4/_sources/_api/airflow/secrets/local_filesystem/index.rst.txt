:py:mod:`airflow.secrets.local_filesystem`
==========================================

.. py:module:: airflow.secrets.local_filesystem

.. autoapi-nested-parse::

   Objects relating to retrieving connections and variables from local file



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.secrets.local_filesystem.LocalFilesystemBackend



Functions
~~~~~~~~~

.. autoapisummary::

   airflow.secrets.local_filesystem.get_connection_parameter_names
   airflow.secrets.local_filesystem.load_variables
   airflow.secrets.local_filesystem.load_connections
   airflow.secrets.local_filesystem.load_connections_dict



Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.secrets.local_filesystem.log
   airflow.secrets.local_filesystem.FILE_PARSERS


.. py:data:: log
   

   

.. py:function:: get_connection_parameter_names() -> Set[str]

   Returns :class:`airflow.models.connection.Connection` constructor parameters.


.. py:data:: FILE_PARSERS
   

   

.. py:function:: load_variables(file_path: str) -> Dict[str, str]

   Load variables from a text file.

   ``JSON``, `YAML` and ``.env`` files are supported.

   :param file_path: The location of the file that will be processed.
   :type file_path: str
   :rtype: Dict[str, List[str]]


.. py:function:: load_connections(file_path) -> Dict[str, List[Any]]

   This function is deprecated. Please use `airflow.secrets.local_filesystem.load_connections_dict`.",


.. py:function:: load_connections_dict(file_path: str) -> Dict[str, Any]

   Load connection from text file.

   ``JSON``, `YAML` and ``.env`` files are supported.

   :return: A dictionary where the key contains a connection ID and the value contains the connection.
   :rtype: Dict[str, airflow.models.connection.Connection]


.. py:class:: LocalFilesystemBackend(variables_file_path: Optional[str] = None, connections_file_path: Optional[str] = None)

   Bases: :py:obj:`airflow.secrets.base_secrets.BaseSecretsBackend`, :py:obj:`airflow.utils.log.logging_mixin.LoggingMixin`

   Retrieves Connection objects and Variables from local files

   ``JSON``, `YAML` and ``.env`` files are supported.

   :param variables_file_path: File location with variables data.
   :type variables_file_path: str
   :param connections_file_path: File location with connection data.
   :type connections_file_path: str

   .. py:method:: get_connection(self, conn_id: str) -> Optional[airflow.models.connection.Connection]

      Return connection object with a given ``conn_id``.

      :param conn_id: connection id
      :type conn_id: str


   .. py:method:: get_connections(self, conn_id: str) -> List[Any]

      Return connection object with a given ``conn_id``.

      :param conn_id: connection id
      :type conn_id: str


   .. py:method:: get_variable(self, key: str) -> Optional[str]

      Return value for Airflow Variable

      :param key: Variable Key
      :type key: str
      :return: Variable Value



