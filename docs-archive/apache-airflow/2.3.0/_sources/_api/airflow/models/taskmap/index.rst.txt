:py:mod:`airflow.models.taskmap`
================================

.. py:module:: airflow.models.taskmap

.. autoapi-nested-parse::

   Table to store information about mapped task instances (AIP-42).



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.models.taskmap.TaskMapVariant
   airflow.models.taskmap.TaskMap




.. py:class:: TaskMapVariant

   Bases: :py:obj:`enum.Enum`

   Task map variant.

   Possible values are **dict** (for a key-value mapping) and **list** (for an
   ordered value sequence).

   .. py:attribute:: DICT
      :annotation: = dict

      

   .. py:attribute:: LIST
      :annotation: = list

      


.. py:class:: TaskMap(dag_id, task_id, run_id, map_index, length, keys)

   Bases: :py:obj:`airflow.models.base.Base`

   Model to track dynamic task-mapping information.

   This is currently only populated by an upstream TaskInstance pushing an
   XCom that's pulled by a downstream for mapping purposes.

   .. py:attribute:: __tablename__
      :annotation: = task_map

      

   .. py:attribute:: dag_id
      

      

   .. py:attribute:: task_id
      

      

   .. py:attribute:: run_id
      

      

   .. py:attribute:: map_index
      

      

   .. py:attribute:: length
      

      

   .. py:attribute:: keys
      

      

   .. py:attribute:: __table_args__
      

      

   .. py:method:: from_task_instance_xcom(cls, ti, value)
      :classmethod:


   .. py:method:: variant(self)
      :property:



