:py:mod:`airflow.providers.airbyte.hooks.airbyte`
=================================================

.. py:module:: airflow.providers.airbyte.hooks.airbyte


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.airbyte.hooks.airbyte.AirbyteHook




.. py:class:: AirbyteHook(airbyte_conn_id = 'airbyte_default', api_version = 'v1')

   Bases: :py:obj:`airflow.providers.http.hooks.http.HttpHook`

   Hook for Airbyte API

   :param airbyte_conn_id: Required. The name of the Airflow connection to get
       connection information for Airbyte.
   :param api_version: Optional. Airbyte API version.

   .. py:attribute:: conn_name_attr
      :annotation: = airbyte_conn_id

      

   .. py:attribute:: default_conn_name
      :annotation: = airbyte_default

      

   .. py:attribute:: conn_type
      :annotation: = airbyte

      

   .. py:attribute:: hook_name
      :annotation: = Airbyte

      

   .. py:attribute:: RUNNING
      :annotation: = running

      

   .. py:attribute:: SUCCEEDED
      :annotation: = succeeded

      

   .. py:attribute:: CANCELLED
      :annotation: = cancelled

      

   .. py:attribute:: PENDING
      :annotation: = pending

      

   .. py:attribute:: FAILED
      :annotation: = failed

      

   .. py:attribute:: ERROR
      :annotation: = error

      

   .. py:attribute:: INCOMPLETE
      :annotation: = incomplete

      

   .. py:method:: wait_for_job(job_id, wait_seconds = 3, timeout = 3600)

      Helper method which polls a job to check if it finishes.

      :param job_id: Required. Id of the Airbyte job
      :param wait_seconds: Optional. Number of seconds between checks.
      :param timeout: Optional. How many seconds wait for job to be ready.
          Used only if ``asynchronous`` is False.


   .. py:method:: submit_sync_connection(connection_id)

      Submits a job to a Airbyte server.

      :param connection_id: Required. The ConnectionId of the Airbyte Connection.


   .. py:method:: get_job(job_id)

      Gets the resource representation for a job in Airbyte.

      :param job_id: Required. Id of the Airbyte job


   .. py:method:: cancel_job(job_id)

      Cancel the job when task is cancelled

      :param job_id: Required. Id of the Airbyte job


   .. py:method:: test_connection()

      Tests the Airbyte connection by hitting the health API



