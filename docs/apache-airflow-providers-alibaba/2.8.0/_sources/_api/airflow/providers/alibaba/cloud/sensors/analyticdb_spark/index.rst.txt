:py:mod:`airflow.providers.alibaba.cloud.sensors.analyticdb_spark`
==================================================================

.. py:module:: airflow.providers.alibaba.cloud.sensors.analyticdb_spark


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.alibaba.cloud.sensors.analyticdb_spark.AnalyticDBSparkSensor




.. py:class:: AnalyticDBSparkSensor(*, app_id, adb_spark_conn_id = 'adb_spark_default', region = None, **kwargs)


   Bases: :py:obj:`airflow.sensors.base.BaseSensorOperator`

   Monitor a AnalyticDB Spark session for termination.

   :param app_id: identifier of the monitored app depends on the option that's being modified.
   :param adb_spark_conn_id: reference to a pre-defined ADB Spark connection.
   :param region: AnalyticDB MySQL region you want to submit spark application.

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('app_id',)

      

   .. py:method:: hook()

      Get valid hook.


   .. py:method:: get_hook()

      Get valid hook.


   .. py:method:: poke(context)

      Override when deriving this class.



