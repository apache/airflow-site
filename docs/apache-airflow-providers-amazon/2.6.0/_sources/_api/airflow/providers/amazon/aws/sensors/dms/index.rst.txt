:py:mod:`airflow.providers.amazon.aws.sensors.dms`
==================================================

.. py:module:: airflow.providers.amazon.aws.sensors.dms


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.sensors.dms.DmsTaskBaseSensor
   airflow.providers.amazon.aws.sensors.dms.DmsTaskCompletedSensor




.. py:class:: DmsTaskBaseSensor(replication_task_arn: str, aws_conn_id='aws_default', target_statuses: Optional[Iterable[str]] = None, termination_statuses: Optional[Iterable[str]] = None, *args, **kwargs)

   Bases: :py:obj:`airflow.sensors.base.BaseSensorOperator`

   Contains general sensor behavior for DMS task.

   Subclasses should set ``target_statuses`` and ``termination_statuses`` fields.

   :param replication_task_arn: AWS DMS replication task ARN
   :type replication_task_arn: str
   :param aws_conn_id: aws connection to uses
   :type aws_conn_id: str
   :param target_statuses: the target statuses, sensor waits until
       the task reaches any of these states
   :type target_states: list[str]
   :param termination_statuses: the termination statuses, sensor fails when
       the task reaches any of these states
   :type termination_statuses: list[str]

   .. py:attribute:: template_fields
      :annotation: :Sequence[str] = ['replication_task_arn']

      

   .. py:attribute:: template_ext
      :annotation: :Sequence[str] = []

      

   .. py:method:: get_hook(self) -> airflow.providers.amazon.aws.hooks.dms.DmsHook

      Get DmsHook


   .. py:method:: poke(self, context: airflow.utils.context.Context)

      Function that the sensors defined while deriving this class should
      override.



.. py:class:: DmsTaskCompletedSensor(*args, **kwargs)

   Bases: :py:obj:`DmsTaskBaseSensor`

   Pokes DMS task until it is completed.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/sensor:DmsTaskCompletedSensor`

   :param replication_task_arn: AWS DMS replication task ARN
   :type replication_task_arn: str

   .. py:attribute:: template_fields
      :annotation: :Sequence[str] = ['replication_task_arn']

      

   .. py:attribute:: template_ext
      :annotation: :Sequence[str] = []

      


