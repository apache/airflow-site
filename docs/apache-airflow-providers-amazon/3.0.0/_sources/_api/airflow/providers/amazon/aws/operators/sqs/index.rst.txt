:py:mod:`airflow.providers.amazon.aws.operators.sqs`
====================================================

.. py:module:: airflow.providers.amazon.aws.operators.sqs

.. autoapi-nested-parse::

   Publish message to SQS queue



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.operators.sqs.SqsPublishOperator
   airflow.providers.amazon.aws.operators.sqs.SQSPublishOperator




.. py:class:: SqsPublishOperator(*, sqs_queue, message_content, message_attributes = None, delay_seconds = 0, aws_conn_id = 'aws_default', **kwargs)

   Bases: :py:obj:`airflow.models.BaseOperator`

   Publish message to a SQS queue.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:SqsPublishOperator`

   :param sqs_queue: The SQS queue url (templated)
   :param message_content: The message content (templated)
   :param message_attributes: additional attributes for the message (default: None)
       For details of the attributes parameter see :py:meth:`botocore.client.SQS.send_message`
   :param delay_seconds: message delay (templated) (default: 1 second)
   :param aws_conn_id: AWS connection id (default: aws_default)

   .. py:attribute:: template_fields
      :annotation: :Sequence[str] = ['sqs_queue', 'message_content', 'delay_seconds', 'message_attributes']

      

   .. py:attribute:: template_fields_renderers
      

      

   .. py:attribute:: ui_color
      :annotation: = #6ad3fa

      

   .. py:method:: execute(self, context)

      Publish the message to SQS queue

      :param context: the context object
      :return: dict with information about the message sent
          For details of the returned dict see :py:meth:`botocore.client.SQS.send_message`
      :rtype: dict



.. py:class:: SQSPublishOperator(*args, **kwargs)

   Bases: :py:obj:`SqsPublishOperator`

   This operator is deprecated.
   Please use :class:`airflow.providers.amazon.aws.operators.sqs.SqsPublishOperator`.


