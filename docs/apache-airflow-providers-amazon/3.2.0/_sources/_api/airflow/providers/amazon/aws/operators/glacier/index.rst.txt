:py:mod:`airflow.providers.amazon.aws.operators.glacier`
========================================================

.. py:module:: airflow.providers.amazon.aws.operators.glacier


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.operators.glacier.GlacierCreateJobOperator




.. py:class:: GlacierCreateJobOperator(*, aws_conn_id='aws_default', vault_name, **kwargs)

   Bases: :py:obj:`airflow.models.BaseOperator`

   Initiate an Amazon Glacier inventory-retrieval job

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GlacierCreateJobOperator`

   :param aws_conn_id: The reference to the AWS connection details
   :param vault_name: the Glacier vault on which job is executed

   .. py:attribute:: template_fields
      :annotation: :Sequence[str] = ['vault_name']

      

   .. py:method:: execute(self, context)

      This is the main method to derive when creating an operator.
      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



