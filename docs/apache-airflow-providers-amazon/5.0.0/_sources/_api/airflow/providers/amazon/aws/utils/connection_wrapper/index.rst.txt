:py:mod:`airflow.providers.amazon.aws.utils.connection_wrapper`
===============================================================

.. py:module:: airflow.providers.amazon.aws.utils.connection_wrapper


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.utils.connection_wrapper.AwsConnectionWrapper




.. py:class:: AwsConnectionWrapper(context=None)

   Bases: :py:obj:`airflow.utils.log.logging_mixin.LoggingMixin`

   AWS Connection Wrapper class helper.
   Use for validate and resolve AWS Connection parameters.

   ``conn`` reference to Airflow Connection object or AwsConnectionWrapper
       if it set to ``None`` than default values would use.

   The precedence rules for ``region_name``
       1. Explicit set (in Hook) ``region_name``.
       2. Airflow Connection Extra 'region_name'.

   The precedence rules for ``botocore_config``
       1. Explicit set (in Hook) ``botocore_config``.
       2. Construct from Airflow Connection Extra 'botocore_kwargs'.
       3. The wrapper's default value

   .. py:attribute:: conn
      :annotation: :dataclasses.InitVar[Optional[Union[airflow.models.connection.Connection, AwsConnectionWrapper]]]

      

   .. py:attribute:: region_name
      :annotation: :Optional[str]

      

   .. py:attribute:: botocore_config
      :annotation: :Optional[botocore.config.Config]

      

   .. py:attribute:: conn_id
      :annotation: :Optional[str]

      

   .. py:attribute:: conn_type
      :annotation: :Optional[str]

      

   .. py:attribute:: login
      :annotation: :Optional[str]

      

   .. py:attribute:: password
      :annotation: :Optional[str]

      

   .. py:attribute:: extra_config
      :annotation: :Dict[str, Any]

      

   .. py:attribute:: aws_access_key_id
      :annotation: :Optional[str]

      

   .. py:attribute:: aws_secret_access_key
      :annotation: :Optional[str]

      

   .. py:attribute:: aws_session_token
      :annotation: :Optional[str]

      

   .. py:attribute:: session_kwargs
      :annotation: :Dict[str, Any]

      

   .. py:attribute:: endpoint_url
      :annotation: :Optional[str]

      

   .. py:attribute:: role_arn
      :annotation: :Optional[str]

      

   .. py:attribute:: assume_role_method
      :annotation: :Optional[str]

      

   .. py:attribute:: assume_role_kwargs
      :annotation: :Dict[str, Any]

      

   .. py:method:: conn_repr()


   .. py:method:: __post_init__(conn)


   .. py:method:: extra_dejson()
      :property:

      Compatibility with `airflow.models.Connection.extra_dejson` property.


   .. py:method:: __bool__()



