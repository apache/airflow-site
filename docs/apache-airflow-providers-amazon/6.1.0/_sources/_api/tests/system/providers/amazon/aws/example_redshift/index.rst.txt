:py:mod:`tests.system.providers.amazon.aws.example_redshift`
============================================================

.. py:module:: tests.system.providers.amazon.aws.example_redshift


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   tests.system.providers.amazon.aws.example_redshift.create_connection
   tests.system.providers.amazon.aws.example_redshift.setup_security_group
   tests.system.providers.amazon.aws.example_redshift.delete_security_group
   tests.system.providers.amazon.aws.example_redshift.await_cluster_snapshot



Attributes
~~~~~~~~~~

.. autoapisummary::

   tests.system.providers.amazon.aws.example_redshift.DAG_ID
   tests.system.providers.amazon.aws.example_redshift.DB_LOGIN
   tests.system.providers.amazon.aws.example_redshift.DB_PASS
   tests.system.providers.amazon.aws.example_redshift.DB_NAME
   tests.system.providers.amazon.aws.example_redshift.POLL_INTERVAL
   tests.system.providers.amazon.aws.example_redshift.IP_PERMISSION
   tests.system.providers.amazon.aws.example_redshift.sys_test_context_task
   tests.system.providers.amazon.aws.example_redshift.test_context
   tests.system.providers.amazon.aws.example_redshift.test_run


.. py:data:: DAG_ID
   :annotation: = example_redshift

   

.. py:data:: DB_LOGIN
   :annotation: = adminuser

   

.. py:data:: DB_PASS
   :annotation: = MyAmazonPassword1

   

.. py:data:: DB_NAME
   :annotation: = dev

   

.. py:data:: POLL_INTERVAL
   :annotation: = 10

   

.. py:data:: IP_PERMISSION
   

   

.. py:data:: sys_test_context_task
   

   

.. py:function:: create_connection(conn_id_name, cluster_id)


.. py:function:: setup_security_group(sec_group_name, ip_permissions)


.. py:function:: delete_security_group(sec_group_id, sec_group_name)


.. py:function:: await_cluster_snapshot(cluster_identifier)


.. py:data:: test_context
   

   

.. py:data:: test_run
   

   

