:py:mod:`airflow.providers.amazon.aws.fs.s3`
============================================

.. py:module:: airflow.providers.amazon.aws.fs.s3


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.fs.s3.get_fs
   airflow.providers.amazon.aws.fs.s3.s3v4_rest_signer



Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.fs.s3.Properties
   airflow.providers.amazon.aws.fs.s3.S3_PROXY_URI
   airflow.providers.amazon.aws.fs.s3.log
   airflow.providers.amazon.aws.fs.s3.schemes
   airflow.providers.amazon.aws.fs.s3.SIGNERS


.. py:data:: Properties

   

.. py:data:: S3_PROXY_URI
   :value: 'proxy-uri'

   

.. py:data:: log

   

.. py:data:: schemes
   :value: ['s3', 's3a', 's3n']

   

.. py:exception:: SignError


   Bases: :py:obj:`Exception`

   Raises when unable to sign a S3 request.


.. py:function:: get_fs(conn_id)


.. py:function:: s3v4_rest_signer(properties, request, **_)


.. py:data:: SIGNERS
   :type: dict[str, Callable[[Properties, botocore.awsrequest.AWSRequest], botocore.awsrequest.AWSRequest]]

   

