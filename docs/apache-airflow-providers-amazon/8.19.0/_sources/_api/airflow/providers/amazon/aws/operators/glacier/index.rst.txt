:py:mod:`airflow.providers.amazon.aws.operators.glacier`
========================================================

.. py:module:: airflow.providers.amazon.aws.operators.glacier


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.operators.glacier.GlacierCreateJobOperator
   airflow.providers.amazon.aws.operators.glacier.GlacierUploadArchiveOperator




.. py:class:: GlacierCreateJobOperator(*, vault_name, **kwargs)


   Bases: :py:obj:`airflow.providers.amazon.aws.operators.base_aws.AwsBaseOperator`\ [\ :py:obj:`airflow.providers.amazon.aws.hooks.glacier.GlacierHook`\ ]

   Initiate an Amazon Glacier inventory-retrieval job.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GlacierCreateJobOperator`

   :param aws_conn_id: The reference to the AWS connection details
   :param vault_name: the Glacier vault on which job is executed

   .. py:attribute:: aws_hook_class

      

   .. py:attribute:: template_fields
      :type: Sequence[str]

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: GlacierUploadArchiveOperator(*, vault_name, body, checksum = None, archive_description = None, account_id = None, **kwargs)


   Bases: :py:obj:`airflow.providers.amazon.aws.operators.base_aws.AwsBaseOperator`\ [\ :py:obj:`airflow.providers.amazon.aws.hooks.glacier.GlacierHook`\ ]

   This operator add an archive to an Amazon S3 Glacier vault.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GlacierUploadArchiveOperator`

   :param vault_name: The name of the vault
   :param body: A bytes or seekable file-like object. The data to upload.
   :param checksum: The SHA256 tree hash of the data being uploaded.
       This parameter is automatically populated if it is not provided
   :param archive_description: The description of the archive you are uploading
   :param account_id: (Optional) AWS account ID of the account that owns the vault.
       Defaults to the credentials used to sign the request
   :param aws_conn_id: The reference to the AWS connection details

   .. py:attribute:: aws_hook_class

      

   .. py:attribute:: template_fields
      :type: Sequence[str]

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



