:py:mod:`tests.system.providers.amazon.aws.example_s3_to_sql`
=============================================================

.. py:module:: tests.system.providers.amazon.aws.example_s3_to_sql


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   tests.system.providers.amazon.aws.example_s3_to_sql.create_connection



Attributes
~~~~~~~~~~

.. autoapisummary::

   tests.system.providers.amazon.aws.example_s3_to_sql.SECURITY_GROUP_KEY
   tests.system.providers.amazon.aws.example_s3_to_sql.CLUSTER_SUBNET_GROUP_KEY
   tests.system.providers.amazon.aws.example_s3_to_sql.sys_test_context_task
   tests.system.providers.amazon.aws.example_s3_to_sql.DAG_ID
   tests.system.providers.amazon.aws.example_s3_to_sql.DB_LOGIN
   tests.system.providers.amazon.aws.example_s3_to_sql.DB_PASS
   tests.system.providers.amazon.aws.example_s3_to_sql.DB_NAME
   tests.system.providers.amazon.aws.example_s3_to_sql.SQL_TABLE_NAME
   tests.system.providers.amazon.aws.example_s3_to_sql.SQL_COLUMN_LIST
   tests.system.providers.amazon.aws.example_s3_to_sql.SAMPLE_DATA
   tests.system.providers.amazon.aws.example_s3_to_sql.test_context
   tests.system.providers.amazon.aws.example_s3_to_sql.test_run


.. py:data:: SECURITY_GROUP_KEY
   :value: 'SECURITY_GROUP'

   

.. py:data:: CLUSTER_SUBNET_GROUP_KEY
   :value: 'CLUSTER_SUBNET_GROUP'

   

.. py:data:: sys_test_context_task

   

.. py:data:: DAG_ID
   :value: 'example_s3_to_sql'

   

.. py:data:: DB_LOGIN
   :value: 'adminuser'

   

.. py:data:: DB_PASS
   :value: 'MyAmazonPassword1'

   

.. py:data:: DB_NAME
   :value: 'dev'

   

.. py:data:: SQL_TABLE_NAME
   :value: 'cocktails'

   

.. py:data:: SQL_COLUMN_LIST
   :value: ['cocktail_id', 'cocktail_name', 'base_spirit']

   

.. py:data:: SAMPLE_DATA
   :value: Multiline-String

    .. raw:: html

        <details><summary>Show Value</summary>

    .. code-block:: python

        """1,Caipirinha,Cachaca
        2,Bramble,Gin
        3,Daiquiri,Rum
        """

    .. raw:: html

        </details>

   

.. py:function:: create_connection(conn_id_name, cluster_id)


.. py:data:: test_context

   

.. py:data:: test_run

   

