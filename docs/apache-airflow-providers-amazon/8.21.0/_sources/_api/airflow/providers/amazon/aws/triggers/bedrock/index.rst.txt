:py:mod:`airflow.providers.amazon.aws.triggers.bedrock`
=======================================================

.. py:module:: airflow.providers.amazon.aws.triggers.bedrock


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.triggers.bedrock.BedrockCustomizeModelCompletedTrigger
   airflow.providers.amazon.aws.triggers.bedrock.BedrockProvisionModelThroughputCompletedTrigger




.. py:class:: BedrockCustomizeModelCompletedTrigger(*, job_name, waiter_delay = 120, waiter_max_attempts = 75, aws_conn_id = None)


   Bases: :py:obj:`airflow.providers.amazon.aws.triggers.base.AwsBaseWaiterTrigger`

   Trigger when a Bedrock model customization job is complete.

   :param job_name: The name of the Bedrock model customization job.
   :param waiter_delay: The amount of time in seconds to wait between attempts. (default: 120)
   :param waiter_max_attempts: The maximum number of attempts to be made. (default: 75)
   :param aws_conn_id: The Airflow connection used for AWS credentials.

   .. py:method:: hook()

      Override in subclasses to return the right hook.



.. py:class:: BedrockProvisionModelThroughputCompletedTrigger(*, provisioned_model_id, waiter_delay = 120, waiter_max_attempts = 75, aws_conn_id = None)


   Bases: :py:obj:`airflow.providers.amazon.aws.triggers.base.AwsBaseWaiterTrigger`

   Trigger when a provisioned throughput job is complete.

   :param provisioned_model_id: The ARN or name of the provisioned throughput.
   :param waiter_delay: The amount of time in seconds to wait between attempts. (default: 120)
   :param waiter_max_attempts: The maximum number of attempts to be made. (default: 75)
   :param aws_conn_id: The Airflow connection used for AWS credentials.

   .. py:method:: hook()

      Override in subclasses to return the right hook.



