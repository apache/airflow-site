:py:mod:`airflow.providers.amazon.aws.triggers.opensearch_serverless`
=====================================================================

.. py:module:: airflow.providers.amazon.aws.triggers.opensearch_serverless


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.triggers.opensearch_serverless.OpenSearchServerlessCollectionActiveTrigger




.. py:class:: OpenSearchServerlessCollectionActiveTrigger(*, collection_id = None, collection_name = None, waiter_delay = 60, waiter_max_attempts = 20, aws_conn_id = None)


   Bases: :py:obj:`airflow.providers.amazon.aws.triggers.base.AwsBaseWaiterTrigger`

   Trigger when an Amazon OpenSearch Serverless Collection reaches the ACTIVE state.

   :param collection_id: A collection ID. You can't provide a name and an ID in the same request.
   :param collection_name: A collection name. You can't provide a name and an ID in the same request.

   :param waiter_delay: The amount of time in seconds to wait between attempts. (default: 60)
   :param waiter_max_attempts: The maximum number of attempts to be made. (default: 20)
   :param aws_conn_id: The Airflow connection used for AWS credentials.

   .. py:method:: hook()

      Override in subclasses to return the right hook.



