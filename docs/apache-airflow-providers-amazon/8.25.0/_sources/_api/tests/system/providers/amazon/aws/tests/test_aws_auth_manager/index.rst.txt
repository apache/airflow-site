:py:mod:`tests.system.providers.amazon.aws.tests.test_aws_auth_manager`
=======================================================================

.. py:module:: tests.system.providers.amazon.aws.tests.test_aws_auth_manager


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   tests.system.providers.amazon.aws.tests.test_aws_auth_manager.TestAwsAuthManager



Functions
~~~~~~~~~

.. autoapisummary::

   tests.system.providers.amazon.aws.tests.test_aws_auth_manager.create_avp_policy_store
   tests.system.providers.amazon.aws.tests.test_aws_auth_manager.env_id
   tests.system.providers.amazon.aws.tests.test_aws_auth_manager.region_name
   tests.system.providers.amazon.aws.tests.test_aws_auth_manager.avp_policy_store_id
   tests.system.providers.amazon.aws.tests.test_aws_auth_manager.base_app
   tests.system.providers.amazon.aws.tests.test_aws_auth_manager.client_no_permissions
   tests.system.providers.amazon.aws.tests.test_aws_auth_manager.client_admin_permissions



Attributes
~~~~~~~~~~

.. autoapisummary::

   tests.system.providers.amazon.aws.tests.test_aws_auth_manager.SAML_METADATA_URL
   tests.system.providers.amazon.aws.tests.test_aws_auth_manager.SAML_METADATA_PARSED
   tests.system.providers.amazon.aws.tests.test_aws_auth_manager.AVP_POLICY_ADMIN
   tests.system.providers.amazon.aws.tests.test_aws_auth_manager.env_id_cache
   tests.system.providers.amazon.aws.tests.test_aws_auth_manager.policy_store_id_cache


.. py:data:: SAML_METADATA_URL
   :value: '/saml/metadata'

   

.. py:data:: SAML_METADATA_PARSED

   

.. py:data:: AVP_POLICY_ADMIN
   :value: Multiline-String

    .. raw:: html

        <details><summary>Show Value</summary>

    .. code-block:: python

        """
        permit (
            principal in Airflow::Group::"Admin",
            action,
            resource
        );
        """

    .. raw:: html

        </details>

   

.. py:data:: env_id_cache
   :type: str | None

   

.. py:data:: policy_store_id_cache
   :type: str | None

   

.. py:function:: create_avp_policy_store(env_id)


.. py:function:: env_id()


.. py:function:: region_name()


.. py:function:: avp_policy_store_id(env_id)


.. py:function:: base_app(region_name, avp_policy_store_id)


.. py:function:: client_no_permissions(base_app)


.. py:function:: client_admin_permissions(base_app)


.. py:class:: TestAwsAuthManager


   Run tests on Airflow using AWS auth manager with real credentials

   .. py:method:: teardown_class()
      :classmethod:


   .. py:method:: delete_avp_policy_store()
      :classmethod:


   .. py:method:: test_login_no_permissions(client_no_permissions)


   .. py:method:: test_login_admin(client_admin_permissions)



