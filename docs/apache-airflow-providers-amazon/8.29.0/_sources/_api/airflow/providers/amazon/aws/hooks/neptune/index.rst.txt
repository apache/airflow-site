:py:mod:`airflow.providers.amazon.aws.hooks.neptune`
====================================================

.. py:module:: airflow.providers.amazon.aws.hooks.neptune


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.hooks.neptune.NeptuneHook




.. py:class:: NeptuneHook(*args, **kwargs)


   Bases: :py:obj:`airflow.providers.amazon.aws.hooks.base_aws.AwsBaseHook`

   Interact with Amazon Neptune.

   Additional arguments (such as ``aws_conn_id``) may be specified and
   are passed down to the underlying AwsBaseHook.

   .. seealso::
       - :class:`~airflow.providers.amazon.aws.hooks.base_aws.AwsBaseHook`

   .. py:attribute:: AVAILABLE_STATES
      :value: ['available']

      

   .. py:attribute:: STOPPED_STATES
      :value: ['stopped']

      

   .. py:attribute:: ERROR_STATES
      :value: ['cloning-failed', 'inaccessible-encryption-credentials',...

      

   .. py:method:: wait_for_cluster_availability(cluster_id, delay = 30, max_attempts = 60)

      Wait for Neptune cluster to start.

      :param cluster_id: The ID of the cluster to wait for.
      :param delay: Time in seconds to delay between polls.
      :param max_attempts: Maximum number of attempts to poll for completion.
      :return: The status of the cluster.


   .. py:method:: wait_for_cluster_stopped(cluster_id, delay = 30, max_attempts = 60)

      Wait for Neptune cluster to stop.

      :param cluster_id: The ID of the cluster to wait for.
      :param delay: Time in seconds to delay between polls.
      :param max_attempts: Maximum number of attempts to poll for completion.
      :return: The status of the cluster.


   .. py:method:: get_cluster_status(cluster_id)

      Get the status of a Neptune cluster.

      :param cluster_id: The ID of the cluster to get the status of.
      :return: The status of the cluster.


   .. py:method:: get_db_instance_status(instance_id)

      Get the status of a Neptune instance.

      :param instance_id: The ID of the instance to get the status of.
      :return: The status of the instance.


   .. py:method:: wait_for_cluster_instance_availability(cluster_id, delay = 30, max_attempts = 60)

      Wait for Neptune instances in a cluster to be available.

      :param cluster_id: The cluster ID of the instances to wait for.
      :param delay: Time in seconds to delay between polls.
      :param max_attempts: Maximum number of attempts to poll for completion.
      :return: The status of the instances.



