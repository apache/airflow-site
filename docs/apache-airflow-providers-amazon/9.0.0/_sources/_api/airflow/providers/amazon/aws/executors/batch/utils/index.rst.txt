:py:mod:`airflow.providers.amazon.aws.executors.batch.utils`
============================================================

.. py:module:: airflow.providers.amazon.aws.executors.batch.utils


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.executors.batch.utils.BatchQueuedJob
   airflow.providers.amazon.aws.executors.batch.utils.BatchJobInfo
   airflow.providers.amazon.aws.executors.batch.utils.BatchJob
   airflow.providers.amazon.aws.executors.batch.utils.BatchJobCollection
   airflow.providers.amazon.aws.executors.batch.utils.BatchSubmitJobKwargsConfigKeys
   airflow.providers.amazon.aws.executors.batch.utils.AllBatchConfigKeys




Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.amazon.aws.executors.batch.utils.CommandType
   airflow.providers.amazon.aws.executors.batch.utils.ExecutorConfigType
   airflow.providers.amazon.aws.executors.batch.utils.CONFIG_GROUP_NAME
   airflow.providers.amazon.aws.executors.batch.utils.CONFIG_DEFAULTS


.. py:data:: CommandType

   

.. py:data:: ExecutorConfigType

   

.. py:data:: CONFIG_GROUP_NAME
   :value: 'aws_batch_executor'

   

.. py:data:: CONFIG_DEFAULTS

   

.. py:class:: BatchQueuedJob


   Represents a Batch job that is queued. The job will be run in the next heartbeat.

   .. py:attribute:: key
      :type: airflow.models.taskinstance.TaskInstanceKey

      

   .. py:attribute:: command
      :type: CommandType

      

   .. py:attribute:: queue
      :type: str

      

   .. py:attribute:: executor_config
      :type: ExecutorConfigType

      

   .. py:attribute:: attempt_number
      :type: int

      

   .. py:attribute:: next_attempt_time
      :type: datetime.datetime

      


.. py:class:: BatchJobInfo


   Contains information about a currently running Batch job.

   .. py:attribute:: cmd
      :type: CommandType

      

   .. py:attribute:: queue
      :type: str

      

   .. py:attribute:: config
      :type: ExecutorConfigType

      


.. py:class:: BatchJob(job_id, status, status_reason = None)


   Data Transfer Object for an AWS Batch Job.

   .. py:attribute:: STATE_MAPPINGS

      

   .. py:method:: get_job_state()

      Return the state of the job.


   .. py:method:: __repr__()

      Return a visual representation of the Job status.



.. py:class:: BatchJobCollection


   A collection to manage running Batch Jobs.

   .. py:method:: add_job(job_id, airflow_task_key, airflow_cmd, queue, exec_config, attempt_number)

      Add a job to the collection.


   .. py:method:: pop_by_id(job_id)

      Delete job from collection based off of Batch Job ID.


   .. py:method:: failure_count_by_id(job_id)

      Get the number of times a job has failed given a Batch Job Id.


   .. py:method:: increment_failure_count(job_id)

      Increment the failure counter given a Batch Job Id.


   .. py:method:: get_all_jobs()

      Get all AWS ARNs in collection.


   .. py:method:: __len__()

      Return the number of jobs in collection.



.. py:class:: BatchSubmitJobKwargsConfigKeys


   Bases: :py:obj:`airflow.providers.amazon.aws.executors.utils.base_config_keys.BaseConfigKeys`

   Keys loaded into the config which are valid Batch submit_job kwargs.

   .. py:attribute:: JOB_NAME
      :value: 'job_name'

      

   .. py:attribute:: JOB_QUEUE
      :value: 'job_queue'

      

   .. py:attribute:: JOB_DEFINITION
      :value: 'job_definition'

      

   .. py:attribute:: EKS_PROPERTIES_OVERRIDE
      :value: 'eks_properties_override'

      

   .. py:attribute:: NODE_OVERRIDE
      :value: 'node_override'

      


.. py:class:: AllBatchConfigKeys


   Bases: :py:obj:`BatchSubmitJobKwargsConfigKeys`

   All keys loaded into the config which are related to the Batch Executor.

   .. py:attribute:: MAX_SUBMIT_JOB_ATTEMPTS
      :value: 'max_submit_job_attempts'

      

   .. py:attribute:: AWS_CONN_ID
      :value: 'conn_id'

      

   .. py:attribute:: SUBMIT_JOB_KWARGS
      :value: 'submit_job_kwargs'

      

   .. py:attribute:: REGION_NAME
      :value: 'region_name'

      

   .. py:attribute:: CHECK_HEALTH_ON_STARTUP
      :value: 'check_health_on_startup'

      


.. py:exception:: BatchExecutorException


   Bases: :py:obj:`Exception`

   Thrown when something unexpected has occurred within the AWS Batch ecosystem.


