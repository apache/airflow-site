:mod:`airflow.providers.apache.drill.hooks.drill`
=================================================

.. py:module:: airflow.providers.apache.drill.hooks.drill


Module Contents
---------------

.. py:class:: DrillHook

   Bases: :class:`airflow.hooks.dbapi.DbApiHook`

   Interact with Apache Drill via sqlalchemy-drill.

   You can specify the SQLAlchemy dialect and driver that sqlalchemy-drill
   will employ to communicate with Drill in the extras field of your
   connection, e.g. ``{"dialect_driver": "drill+sadrill"}`` for communication
   over Drill's REST API.  See the sqlalchemy-drill documentation for
   descriptions of the supported dialects and drivers.

   You can specify the default storage_plugin for the sqlalchemy-drill
   connection using the extras field e.g. ``{"storage_plugin": "dfs"}``.

   .. attribute:: conn_name_attr
      :annotation: = drill_conn_id

      

   .. attribute:: default_conn_name
      :annotation: = drill_default

      

   .. attribute:: conn_type
      :annotation: = drill

      

   .. attribute:: hook_name
      :annotation: = Drill

      

   .. attribute:: supports_autocommit
      :annotation: = False

      

   
   .. method:: get_conn(self)

      Establish a connection to Drillbit.



   
   .. method:: get_uri(self)

      Returns the connection URI

      e.g: ``drill://localhost:8047/dfs``



   
   .. method:: set_autocommit(self, conn: Connection, autocommit: bool)



   
   .. method:: insert_rows(self, table: str, rows: Iterable[Tuple[str]], target_fields: Optional[Iterable[str]] = None, commit_every: int = 1000, replace: bool = False, **kwargs)




