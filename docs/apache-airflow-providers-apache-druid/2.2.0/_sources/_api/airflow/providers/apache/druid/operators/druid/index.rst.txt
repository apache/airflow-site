:py:mod:`airflow.providers.apache.druid.operators.druid`
========================================================

.. py:module:: airflow.providers.apache.druid.operators.druid


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.apache.druid.operators.druid.DruidOperator




.. py:class:: DruidOperator(*, json_index_file: str, druid_ingest_conn_id: str = 'druid_ingest_default', timeout: int = 1, max_ingestion_time: Optional[int] = None, **kwargs: Any)

   Bases: :py:obj:`airflow.models.BaseOperator`

   Allows to submit a task directly to druid

   :param json_index_file: The filepath to the druid index specification
   :type json_index_file: str
   :param druid_ingest_conn_id: The connection id of the Druid overlord which
       accepts index jobs
   :type druid_ingest_conn_id: str
   :param timeout: The interval (in seconds) between polling the Druid job for the status
       of the ingestion job. Must be greater than or equal to 1
   :type timeout: int
   :param max_ingestion_time: The maximum ingestion time before assuming the job failed
   :type max_ingestion_time: int

   .. py:attribute:: template_fields
      :annotation: :Sequence[str] = ['json_index_file']

      

   .. py:attribute:: template_ext
      :annotation: :Sequence[str] = ['.json']

      

   .. py:attribute:: template_fields_renderers
      

      

   .. py:method:: execute(self, context: airflow.utils.context.Context) -> None

      This is the main method to derive when creating an operator.
      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



