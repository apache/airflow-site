:py:mod:`airflow.providers.apache.iceberg.hooks.iceberg`
========================================================

.. py:module:: airflow.providers.apache.iceberg.hooks.iceberg


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.apache.iceberg.hooks.iceberg.IcebergHook




Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.apache.iceberg.hooks.iceberg.TOKENS_ENDPOINT


.. py:data:: TOKENS_ENDPOINT
   :value: 'oauth/tokens'

   

.. py:class:: IcebergHook(iceberg_conn_id = default_conn_name)


   Bases: :py:obj:`airflow.hooks.base.BaseHook`

   This hook acts as a base hook for iceberg services.

   It offers the ability to generate temporary, short-lived
   session tokens to use within Airflow submitted jobs.

   :param iceberg_conn_id: The :ref:`Iceberg connection id<howto/connection:iceberg>`
       which refers to the information to connect to the Iceberg.

   .. py:attribute:: conn_name_attr
      :value: 'iceberg_conn_id'

      

   .. py:attribute:: default_conn_name
      :value: 'iceberg_default'

      

   .. py:attribute:: conn_type
      :value: 'iceberg'

      

   .. py:attribute:: hook_name
      :value: 'Iceberg'

      

   .. py:method:: get_ui_field_behaviour()
      :classmethod:

      Return custom UI field behaviour for Iceberg connection.


   .. py:method:: test_connection()

      Test the Iceberg connection.


   .. py:method:: get_conn()

      Obtain a short-lived access token via a client_id and client_secret.


   .. py:method:: get_token_macro()



