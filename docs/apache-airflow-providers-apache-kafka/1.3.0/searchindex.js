Search.setIndex({"docnames": ["_api/airflow/providers/apache/kafka/hooks/base/index", "_api/airflow/providers/apache/kafka/hooks/client/index", "_api/airflow/providers/apache/kafka/hooks/consume/index", "_api/airflow/providers/apache/kafka/hooks/index", "_api/airflow/providers/apache/kafka/hooks/produce/index", "_api/airflow/providers/apache/kafka/index", "_api/airflow/providers/apache/kafka/operators/consume/index", "_api/airflow/providers/apache/kafka/operators/index", "_api/airflow/providers/apache/kafka/operators/produce/index", "_api/airflow/providers/apache/kafka/sensors/index", "_api/airflow/providers/apache/kafka/sensors/kafka/index", "_api/airflow/providers/apache/kafka/triggers/await_message/index", "_api/airflow/providers/apache/kafka/triggers/index", "_api/tests/system/providers/apache/kafka/example_dag_event_listener/index", "_api/tests/system/providers/apache/kafka/example_dag_hello_kafka/index", "_api/tests/system/providers/apache/kafka/index", "changelog", "commits", "connections/kafka", "hooks", "index", "installing-providers-from-sources", "operators/index", "security", "sensors", "triggers"], "filenames": ["_api/airflow/providers/apache/kafka/hooks/base/index.rst", "_api/airflow/providers/apache/kafka/hooks/client/index.rst", "_api/airflow/providers/apache/kafka/hooks/consume/index.rst", "_api/airflow/providers/apache/kafka/hooks/index.rst", "_api/airflow/providers/apache/kafka/hooks/produce/index.rst", "_api/airflow/providers/apache/kafka/index.rst", "_api/airflow/providers/apache/kafka/operators/consume/index.rst", "_api/airflow/providers/apache/kafka/operators/index.rst", "_api/airflow/providers/apache/kafka/operators/produce/index.rst", "_api/airflow/providers/apache/kafka/sensors/index.rst", "_api/airflow/providers/apache/kafka/sensors/kafka/index.rst", "_api/airflow/providers/apache/kafka/triggers/await_message/index.rst", "_api/airflow/providers/apache/kafka/triggers/index.rst", "_api/tests/system/providers/apache/kafka/example_dag_event_listener/index.rst", "_api/tests/system/providers/apache/kafka/example_dag_hello_kafka/index.rst", "_api/tests/system/providers/apache/kafka/index.rst", "changelog.rst", "commits.rst", "connections/kafka.rst", "hooks.rst", "index.rst", "installing-providers-from-sources.rst", "operators/index.rst", "security.rst", "sensors.rst", "triggers.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.hooks.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.hooks.client</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.hooks.consume</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.hooks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.hooks.produce</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.operators.consume</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.operators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.operators.produce</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.sensors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.sensors.kafka</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.triggers.await_message</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.apache.kafka.triggers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tests.system.providers.apache.kafka.example_dag_event_listener</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tests.system.providers.apache.kafka.example_dag_hello_kafka</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tests.system.providers.apache.kafka</span></code>", "Changelog", "Package apache-airflow-providers-apache-kafka", "Apache Kafka Connection", "Apache Kafka Hooks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apache-airflow-providers-apache-kafka</span></code>", "Installing from sources", "Apache Kafka Operators", "Releasing security patches", "Apache Kafka Sensors", "Apache Kafka Triggers"], "terms": {"kafkabasehook": [0, 1, 2, 4, 19], "kafka_config_id": [0, 1, 2, 4, 6, 8, 10, 11, 22, 24], "default_conn_nam": [0, 1, 2, 4], "arg": [0, 6], "kwarg": [0, 6, 8, 10], "sourc": [0, 1, 2, 4, 5, 6, 8, 10, 11, 13, 14, 22, 24], "basehook": 0, "A": [0, 1, 2, 4, 6, 11, 18, 19, 24], "interact": [0, 1, 19], "paramet": [0, 1, 2, 4, 6, 8, 10, 11, 18, 19, 22, 24, 25], "The": [0, 1, 2, 4, 6, 8, 10, 11, 18, 20, 21, 22, 23, 24, 25], "connect": [0, 1, 2, 4, 6, 8, 10, 11], "object": [0, 1, 2, 4, 6, 8, 10, 11], "us": [0, 1, 2, 4, 6, 8, 10, 11, 16, 17, 18, 19, 21, 23], "default": [0, 1, 2, 4, 6, 8, 10, 11, 23], "kafka_default": [0, 1, 2, 4, 6, 8, 10, 11, 18], "conn_name_attr": 0, "conn_typ": 0, "hook_nam": 0, "static": 0, "get_ui_field_behaviour": 0, "return": [0, 2, 4, 10, 11, 24, 25], "custom": 0, "field": [0, 18], "behaviour": 0, "get_conn": 0, "get": [0, 21, 23], "configur": 0, "test_connect": 0, "test": [0, 18, 22, 23, 24], "from": [0, 6, 10, 11, 17, 18, 22, 23, 24, 25], "ui": [0, 18], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25], "9": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "dev0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "experiment": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "featur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "kafkaadminclienthook": 1, "base": [1, 2, 3, 4, 5, 6, 8, 10, 11, 19], "cluster": [1, 6, 10, 19, 22], "create_top": 1, "topic": [1, 2, 6, 8, 10, 11, 22, 24, 25], "creat": [1, 2, 4, 6, 8, 10, 19, 21, 22, 24], "sequenc": [1, 2, 6, 8, 10, 11], "ani": [1, 6, 8, 10, 11, 21, 24, 25], "list": [1, 2, 6, 17, 18], "includ": [1, 17, 23], "number": [1, 6, 22], "partit": 1, "replic": 1, "factor": 1, "format": [1, 16, 17], "topic_nam": 1, "kafkaconsumerhook": 2, "str": [2, 6, 8, 10, 11], "subscrib": [2, 6], "get_consum": 2, "ha": [2, 6, 18], "been": 2, "client": [3, 5, 11], "consum": [3, 5, 7, 10, 11, 19, 22, 24, 25], "produc": [3, 5, 7, 19, 22], "kafkaproducerhook": 4, "get_produc": 4, "send": 4, "messag": [4, 6, 8, 10, 11, 13, 14, 16, 17, 22, 24, 25], "hook": [5, 18], "oper": [5, 10, 18], "sensor": 5, "trigger": [5, 10, 17, 24], "await_messag": [5, 12], "__version__": [5, 17], "valid_commit_cad": [6, 10], "consumefromtopicoper": [6, 19], "apply_funct": [6, 10, 11, 22, 24], "none": [6, 8, 10, 11, 14, 21], "apply_function_batch": 6, "apply_function_arg": [6, 10, 11], "apply_function_kwarg": [6, 10, 11, 22], "commit_cad": [6, 22], "end_of_oper": 6, "max_messag": [6, 22], "max_batch_s": [6, 22], "1000": 6, "poll_timeout": [6, 8, 10, 11], "60": 6, "model": [6, 8, 10, 23], "baseoper": [6, 8, 10], "": [6, 16, 17, 21, 22], "process": [6, 10, 11, 22, 25], "read": [6, 10, 22, 24], "batch": [6, 22], "them": [6, 22, 25], "user": [6, 21, 22], "suppli": [6, 22], "callabl": [6, 8, 10, 11, 22, 24, 25], "function": [6, 10, 11], "continu": [6, 10, 11, 22, 24], "until": [6, 10, 22, 24], "reach": [6, 10, 11, 22], "end": [6, 10, 11, 22], "log": [6, 8, 10, 11, 22], "maximum": [6, 22], "regex": [6, 10, 11], "pattern": 6, "should": [6, 8, 10, 11, 18, 21, 23], "ellipsi": [6, 8], "appli": [6, 8, 10, 11], "fetch": 6, "one": [6, 21, 22], "time": 6, "name": [6, 10], "dag": 6, "file": [6, 21], "execut": [6, 8, 10, 16, 17], "delimit": 6, "can": [6, 20, 21, 23], "intend": 6, "transact": 6, "workload": [6, 11], "where": [6, 23], "expens": 6, "task": [6, 11], "might": [6, 23], "call": [6, 8, 11], "befor": [6, 11], "after": [6, 8, 10, 11], "ar": [6, 11, 18, 20, 21, 23], "taken": 6, "addit": [6, 8], "argument": [6, 8, 10, 11], "dict": [6, 8, 10, 11, 18], "kei": [6, 8, 10, 11, 18, 21, 22], "word": [6, 10, 11, 16, 17], "when": [6, 8, 10, 11, 16, 17, 19, 23], "commit": [6, 10, 11, 17], "offset": [6, 10, 11], "never": 6, "end_of_batch": [6, 22], "made": [6, 21], "method": 6, "each": 6, "all": [6, 20, 23], "close": 6, "without": 6, "int": 6, "total": 6, "impli": 6, "poll": [6, 8, 10, 11, 25], "float": [6, 8, 10, 11], "how": [6, 8, 10, 11, 21], "long": [6, 8, 10, 11], "wait": [6, 10, 11], "determin": [6, 10, 11], "more": [6, 8, 10, 18, 22], "avail": [6, 16, 21], "For": [6, 8, 17, 19, 21, 22, 24, 25], "inform": [6, 8, 11, 17, 19, 22, 23, 24], "take": [6, 8, 19, 22, 24, 25], "look": [6, 8, 19, 22, 24, 25], "guid": [6, 8, 21], "blue": [6, 10], "ffefeb": [6, 10], "ui_color": [6, 10], "template_field": [6, 8, 10], "context": [6, 8, 10, 11], "deriv": [6, 8, 10], "same": [6, 8, 10], "dictionari": [6, 8, 10], "render": [6, 8, 10], "jinja": [6, 8, 10], "templat": [6, 8, 10, 17], "refer": [6, 8, 10], "get_template_context": [6, 8, 10], "local_logg": 8, "ack": 8, "err": 8, "msg": 8, "producetotopicoper": [8, 19], "producer_funct": [8, 14, 22], "producer_function_arg": 8, "producer_function_kwarg": 8, "delivery_callback": 8, "synchron": 8, "true": 8, "regist": [8, 10], "publish": [8, 10, 23, 24], "gener": 8, "valu": [8, 18, 22], "pair": [8, 22], "product": 8, "keyword": [8, 11], "callback": 8, "deliveri": 8, "failur": 8, "bool": 8, "If": [8, 11, 18, 21, 24, 25], "write": 8, "fulli": 8, "delai": 8, "rais": [8, 10, 11, 24, 25], "airflowexcept": [8, 16, 17], "_description_": 8, "awaitmessagesensor": 10, "poll_interv": [10, 11], "5": [10, 11, 16], "xcom_push_kei": [10, 24], "defer": [10, 11, 24], "specif": [10, 11, 24], "encount": [10, 24], "posit": [10, 24], "event": [10, 11, 24], "behavior": [10, 11], "follow": [10, 11, 21, 23], "sleep": [10, 11], "data": [10, 11, 24, 25], "triggerev": [10, 11, 24, 25], "els": [10, 11], "next": [10, 11, 23], "xcom": 10, "occur": 10, "As": 10, "dot": [10, 11], "notat": [10, 11], "string": [10, 11, 18], "arriv": [10, 11], "push": 10, "execute_complet": 10, "awaitmessagetriggerfunctionsensor": 10, "event_triggered_funct": [10, 24], "resum": [10, 11], "onc": [10, 21, 24], "awaitmessagetrigg": [11, 16, 17, 19], "basetrigg": 11, "match": [11, 21], "criteria": [11, 24], "search": 11, "locat": 11, "In": 11, "python": [11, 16, 17, 18, 20, 21], "set": [11, 18], "request": 11, "second": 11, "serial": 11, "need": 11, "reconstruct": 11, "tupl": 11, "path": 11, "re": 11, "instanti": 11, "type": [11, 18], "async": 11, "run": [11, 21], "asynchron": 11, "yield": 11, "whenev": 11, "want": [11, 21, 23], "fire": 11, "off": 11, "finish": 11, "singl": 11, "thu": 11, "immedi": 11, "like": 11, "veri": [11, 18], "quickli": 11, "mai": [11, 17], "e": 11, "g": 11, "being": 11, "move": 11, "anoth": 11, "multi": 11, "wa": 11, "either": 11, "case": [11, 23], "assum": [11, 18], "thei": 11, "persist": 11, "reli": 11, "cleanup": 11, "longer": 11, "load_connect": [13, 14], "t0": [13, 14], "await_funct": [13, 14, 24], "test_run": [13, 14], "default_arg": 14, "consumer_logg": 14, "consumer_funct": [14, 22], "prefix": [14, 22], "consumer_function_batch": 14, "hello_kafka": 14, "example_dag_event_listen": [15, 24], "example_dag_hello_kafka": [15, 22, 24], "apach": [16, 21], "airflow": [16, 18, 21, 23], "provid": [16, 18, 21, 22, 23, 24, 25], "kafka": [16, 21], "releas": [16, 20], "onli": [16, 17, 23], "6": [16, 17, 20], "explain": 16, "support": [16, 17, 20], "polici": [16, 23], "bump": [16, 17], "minimum": [16, 17, 18, 20], "version": [16, 17, 20, 21, 23], "36017": [16, 17], "typo": [16, 17], "doubl": [16, 17], "its": [16, 17, 24], "33623": [16, 17], "max": [16, 17], "limit": [16, 17], "error": [16, 17], "32926": [16, 17], "33321": [16, 17], "min": [16, 17], "34728": [16, 17], "except": [16, 17, 23], "34511": [16, 17], "break": [16, 17, 23], "find": [16, 17], "desir": [16, 17], "31803": [16, 17], "drop": [16, 17, 21], "7": [16, 17], "remov": [16, 17, 21], "30963": [16, 17], "4": 16, "30917": [16, 17], "initi": 16, "detail": [17, 21], "chang": [17, 23], "high": 17, "level": 17, "changelog": 17, "see": [17, 20, 22, 24], "latest": [17, 23], "2023": 17, "12": [17, 21], "07": 17, "subject": 17, "d0918d77ee": 17, "0b23d5601c": 17, "11": [17, 21], "24": 17, "prepar": [17, 23], "doc": 17, "2nd": 17, "wave": 17, "novemb": 17, "35836": 17, "99534e47f3": 17, "19": 17, "reproduc": 17, "build": [17, 21], "35693": 17, "99df205f42": 17, "16": 17, "fix": [17, 23], "reappli": 17, "document": [17, 19, 22, 24], "35686": 17, "1b059c57d6": 17, "08": 17, "1st": 17, "35537": 17, "63cc915cd3": 17, "10": [17, 22], "31": 17, "switch": 17, "black": 17, "ruff": 17, "formatt": 17, "35287": 17, "d1c58d86de": 17, "28": 17, "3rd": 17, "octob": 17, "35233": 17, "3592ff4046": 17, "35187": 17, "dd7ba3cae1": 17, "pre": 17, "upgrad": [17, 23], "292": 17, "35053": 17, "b75f9e8806": 17, "18": 17, "35033": 17, "13": 17, "e9987d5059": 17, "34916": 17, "0c8e30e43b": 17, "05": 17, "659d94f0ae": 17, "09": 17, "21": 17, "c077d19060": 17, "26": 17, "aug": 17, "33730": 17, "a54c2424df": 17, "23": 17, "c645d8e40c": 17, "d401": 17, "airbyt": 17, "atlassian": 17, "inclus": 17, "33354": 17, "c9d0fcd967": 17, "06": 17, "225e3041d2": 17, "juli": 17, "rc2": 17, "32381": 17, "3878fe6fab": 17, "spuriou": 17, "header": 17, "32373": 17, "cb4927a018": 17, "32298": 17, "1b599c9fbf": 17, "30": 17, "8c37b74a20": 17, "d205": 17, "common": 17, "32226": 17, "09d4718d3a": 17, "27": 17, "improv": 17, "readm": 17, "structur": 17, "32125": 17, "20": 17, "79bcc2e668": 17, "rc1": 17, "june": 17, "32001": 17, "547f5846bf": 17, "add": 17, "note": 17, "about": [17, 21, 23], "impala": 17, "32017": 17, "dc5bf3fd02": 17, "02": 17, "discover": 17, "yaml": 17, "31576": 17, "a473facf6c": 17, "01": 17, "d400": 17, "pydocstyl": 17, "check": [17, 18, 21], "31424": 17, "9fa75aaf7a": 17, "29": 17, "45548b9451": 17, "31416": 17, "abea189022": 17, "31393": 17, "f5aed58d9f": 17, "circular": 17, "import": [17, 21], "caus": 17, "31379": 17, "d9ff55cf6d": 17, "31252": 17, "eef5bc7f16": 17, "03": 17, "full": [17, 18], "autom": 17, "30994": 17, "a7eb32a5b2": 17, "04": 17, "9409446097": 17, "cli": 17, "cmd": 17, "info": 17, "30822": 17, "c585ad51c5": 17, "22": 17, "262": 17, "30809": 17, "522661b6ad": 17, "30175": 17, "via": [18, 20, 21], "confluent": [18, 20], "packag": 18, "minim": 18, "than": 18, "most": [18, 21], "trivial": 18, "json": 18, "serializ": 18, "extra": 18, "describ": [18, 21], "librari": 18, "you": [18, 20, 21, 23], "defin": [18, 24], "renam": 18, "config": [18, 19], "bootstrap": 18, "server": [18, 21], "exist": [18, 20], "valid": [18, 21], "class": [19, 20], "your": 19, "own": 19, "definit": [19, 22, 24, 25], "further": [19, 22, 24], "admin": 19, "top": [20, 21], "below": [20, 21], "pip": [20, 21], "asgiref": 20, "8": 20, "page": 21, "download": 21, "offici": 21, "also": 21, "choos": 21, "differ": 21, "select": 21, "down": 21, "left": 21, "sdist": 21, "whl": 21, "origin": 21, "checksum": 21, "signatur": 21, "softwar": 21, "foundat": 21, "asc": 21, "sha512": 21, "those": 21, "code": 21, "link": 21, "abov": [21, 24], "contain": 21, "pgp": 21, "It": 21, "essenti": 21, "sha": 21, "gpg": 21, "pleas": 21, "well": 21, "relev": 21, "distribut": 21, "recommend": 21, "main": [21, 23], "directori": 21, "mirror": 21, "pgpk": 21, "ka": 21, "To": 21, "binari": 21, "pgpv": 21, "exampl": 21, "tar": 21, "gz": 21, "sat": 21, "sep": 21, "49": 21, "54": 21, "2021": 21, "bst": 21, "rsa": 21, "cde15c6e4d3a8ec4ecf4ba4b6674e08ad7de406f": 21, "issuer": 21, "kaxilnaik": 21, "org": 21, "good": [21, 23], "kaxil": 21, "naik": 21, "unknown": 21, "aka": 21, "gmail": 21, "com": 21, "warn": 21, "id": 21, "certifi": 21, "trust": 21, "There": 21, "indic": 21, "belong": 21, "owner": 21, "primari": 21, "fingerprint": 21, "cde1": 21, "5c6e": 21, "4d3a": 21, "8ec4": 21, "ecf4": 21, "ba4b": 21, "6674": 21, "e08a": 21, "d7de": 21, "406f": 21, "correct": 21, "do": 21, "worri": 21, "certif": 21, "manag": 21, "self": 21, "sign": 21, "why": 21, "By": 21, "previou": 21, "step": 21, "know": 21, "alreadi": 21, "sum": 21, "shasum": 21, "512": 21, "diff": 21, "local": 21, "script": 21, "bin": 21, "bash": 21, "package_vers": 21, "package_nam": 21, "provider_download_dir": 21, "mktemp": 21, "d": 21, "dep": 21, "dest": 21, "curl": 21, "http": 21, "apache_airflow_providers_apache_kafka": 21, "py3": 21, "l": 21, "o": 21, "echo": 21, "la": 21, "instruct": [21, 23], "chapter": 21, "temporari": 21, "folder": 21, "system": [22, 24], "py": [22, 24], "t2": 22, "task_id": [22, 24], "consume_from_top": 22, "test_1": [22, 24], "t1": 22, "produce_to_top": 22, "independ": 23, "itself": 23, "vulner": 23, "separ": 23, "found": [23, 24], "instal": 23, "pypi": 23, "we": 23, "develop": 23, "alwai": 23, "done": 23, "branch": 23, "strict": 23, "semver": 23, "depend": 23, "scope": 23, "major": 23, "minor": 23, "new": 23, "patchlevel": 23, "bug": 23, "bugfix": 23, "receiv": 23, "so": 23, "rule": 23, "have": 23, "critic": 23, "reason": 23, "out": 23, "band": 23, "which": 23, "stakehold": 23, "decid": 23, "cherri": 23, "pick": 23, "older": 23, "mix": 23, "govern": 23, "requir": 23, "interest": 23, "parti": 23, "fulfil": 24, "complet": 24, "successfulli": 24, "t5": 24, "awaiting_messag": 24, "retrieved_messag": 24, "similar": 24, "afterward": 24, "again": 24, "listen_for_messag": 24, "fizz_buzz_2": 24, "fizz_buzz": 24, "wait_for_ev": 24}, "objects": {"airflow.providers.apache": [[5, 0, 0, "-", "kafka"]], "airflow.providers.apache.kafka": [[5, 1, 1, "", "__version__"], [3, 0, 0, "-", "hooks"], [7, 0, 0, "-", "operators"], [9, 0, 0, "-", "sensors"], [12, 0, 0, "-", "triggers"]], "airflow.providers.apache.kafka.hooks": [[0, 0, 0, "-", "base"], [1, 0, 0, "-", "client"], [2, 0, 0, "-", "consume"], [4, 0, 0, "-", "produce"]], "airflow.providers.apache.kafka.hooks.base": [[0, 2, 1, "", "KafkaBaseHook"]], "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook": [[0, 3, 1, "", "conn_name_attr"], [0, 3, 1, "", "conn_type"], [0, 3, 1, "", "default_conn_name"], [0, 4, 1, "", "get_conn"], [0, 4, 1, "", "get_ui_field_behaviour"], [0, 3, 1, "", "hook_name"], [0, 4, 1, "", "test_connection"]], "airflow.providers.apache.kafka.hooks.client": [[1, 2, 1, "", "KafkaAdminClientHook"]], "airflow.providers.apache.kafka.hooks.client.KafkaAdminClientHook": [[1, 4, 1, "", "create_topic"]], "airflow.providers.apache.kafka.hooks.consume": [[2, 2, 1, "", "KafkaConsumerHook"]], "airflow.providers.apache.kafka.hooks.consume.KafkaConsumerHook": [[2, 4, 1, "", "get_consumer"]], "airflow.providers.apache.kafka.hooks.produce": [[4, 2, 1, "", "KafkaProducerHook"]], "airflow.providers.apache.kafka.hooks.produce.KafkaProducerHook": [[4, 4, 1, "", "get_producer"]], "airflow.providers.apache.kafka.operators": [[6, 0, 0, "-", "consume"], [8, 0, 0, "-", "produce"]], "airflow.providers.apache.kafka.operators.consume": [[6, 2, 1, "", "ConsumeFromTopicOperator"], [6, 1, 1, "", "VALID_COMMIT_CADENCE"]], "airflow.providers.apache.kafka.operators.consume.ConsumeFromTopicOperator": [[6, 3, 1, "", "BLUE"], [6, 4, 1, "", "execute"], [6, 3, 1, "", "template_fields"], [6, 3, 1, "", "ui_color"]], "airflow.providers.apache.kafka.operators.produce": [[8, 2, 1, "", "ProduceToTopicOperator"], [8, 5, 1, "", "acked"], [8, 1, 1, "", "local_logger"]], "airflow.providers.apache.kafka.operators.produce.ProduceToTopicOperator": [[8, 4, 1, "", "execute"], [8, 3, 1, "", "template_fields"]], "airflow.providers.apache.kafka.sensors": [[10, 0, 0, "-", "kafka"]], "airflow.providers.apache.kafka.sensors.kafka": [[10, 2, 1, "", "AwaitMessageSensor"], [10, 2, 1, "", "AwaitMessageTriggerFunctionSensor"], [10, 1, 1, "", "VALID_COMMIT_CADENCE"]], "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageSensor": [[10, 3, 1, "", "BLUE"], [10, 4, 1, "", "execute"], [10, 4, 1, "", "execute_complete"], [10, 3, 1, "", "template_fields"], [10, 3, 1, "", "ui_color"]], "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageTriggerFunctionSensor": [[10, 3, 1, "", "BLUE"], [10, 4, 1, "", "execute"], [10, 4, 1, "", "execute_complete"], [10, 3, 1, "", "template_fields"], [10, 3, 1, "", "ui_color"]], "airflow.providers.apache.kafka.triggers": [[11, 0, 0, "-", "await_message"]], "airflow.providers.apache.kafka.triggers.await_message": [[11, 2, 1, "", "AwaitMessageTrigger"]], "airflow.providers.apache.kafka.triggers.await_message.AwaitMessageTrigger": [[11, 4, 1, "", "run"], [11, 4, 1, "", "serialize"]], "tests.system.providers.apache": [[15, 0, 0, "-", "kafka"]], "tests.system.providers.apache.kafka": [[13, 0, 0, "-", "example_dag_event_listener"], [14, 0, 0, "-", "example_dag_hello_kafka"]], "tests.system.providers.apache.kafka.example_dag_event_listener": [[13, 5, 1, "", "await_function"], [13, 5, 1, "", "load_connections"], [13, 1, 1, "", "t0"], [13, 1, 1, "", "test_run"]], "tests.system.providers.apache.kafka.example_dag_hello_kafka": [[14, 5, 1, "", "await_function"], [14, 5, 1, "", "consumer_function"], [14, 5, 1, "", "consumer_function_batch"], [14, 1, 1, "", "consumer_logger"], [14, 1, 1, "", "default_args"], [14, 5, 1, "", "hello_kafka"], [14, 5, 1, "", "load_connections"], [14, 5, 1, "", "producer_function"], [14, 1, 1, "", "t0"], [14, 1, 1, "", "test_run"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"]}, "titleterms": {"airflow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 20], "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20], "apach": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 24, 25], "kafka": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 24, 25], "hook": [0, 1, 2, 3, 4, 19], "base": 0, "modul": [0, 1, 2, 4, 6, 8, 10, 11, 13, 14], "content": [0, 1, 2, 4, 5, 6, 8, 10, 11, 13, 14], "class": [0, 1, 2, 4, 6, 8, 10, 11], "client": 1, "consum": [2, 6], "submodul": [3, 7, 9, 12, 15], "produc": [4, 8], "subpackag": 5, "packag": [5, 17, 20, 21], "oper": [6, 7, 8, 22], "attribut": [6, 8, 10, 13, 14], "function": [8, 13, 14], "sensor": [9, 10, 24], "trigger": [11, 12, 25], "await_messag": 11, "test": [13, 14, 15], "system": [13, 14, 15], "example_dag_event_listen": 13, "example_dag_hello_kafka": 14, "changelog": 16, "1": [16, 17], "3": [16, 17], "0": [16, 17], "misc": 16, "2": [16, 17], "bug": 16, "fix": 16, "connect": 18, "default": 18, "id": 18, "configur": 18, "kafkahook": 19, "kafkaadminclienthook": 19, "refer": [19, 22, 24], "kafkaconsumerhook": 19, "kafkaproducerhook": 19, "instal": [20, 21], "requir": 20, "from": 21, "sourc": 21, "releas": [21, 23], "integr": 21, "verifi": 21, "pypi": 21, "consumefromtopicoper": 22, "us": [22, 24], "producetotopicoper": 22, "secur": 23, "patch": 23, "awaitmessagesensor": 24, "awaitmessagetriggerfunctionsensor": 24, "awaitmessagetrigg": 25}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"airflow.providers.apache.kafka.hooks.base": [[0, "module-airflow.providers.apache.kafka.hooks.base"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [4, "module-contents"], [6, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [13, "module-contents"], [14, "module-contents"]], "Classes": [[0, "classes"], [1, "classes"], [2, "classes"], [4, "classes"], [6, "classes"], [8, "classes"], [10, "classes"], [11, "classes"]], "airflow.providers.apache.kafka.hooks.client": [[1, "module-airflow.providers.apache.kafka.hooks.client"]], "airflow.providers.apache.kafka.hooks.consume": [[2, "module-airflow.providers.apache.kafka.hooks.consume"]], "airflow.providers.apache.kafka.hooks": [[3, "module-airflow.providers.apache.kafka.hooks"]], "Submodules": [[3, "submodules"], [7, "submodules"], [9, "submodules"], [12, "submodules"], [15, "submodules"]], "airflow.providers.apache.kafka.hooks.produce": [[4, "module-airflow.providers.apache.kafka.hooks.produce"]], "airflow.providers.apache.kafka": [[5, "module-airflow.providers.apache.kafka"]], "Subpackages": [[5, "subpackages"]], "Package Contents": [[5, "package-contents"]], "airflow.providers.apache.kafka.operators.consume": [[6, "module-airflow.providers.apache.kafka.operators.consume"]], "Attributes": [[6, "attributes"], [8, "attributes"], [10, "attributes"], [13, "attributes"], [14, "attributes"]], "airflow.providers.apache.kafka.operators": [[7, "module-airflow.providers.apache.kafka.operators"]], "airflow.providers.apache.kafka.operators.produce": [[8, "module-airflow.providers.apache.kafka.operators.produce"]], "Functions": [[8, "functions"], [13, "functions"], [14, "functions"]], "airflow.providers.apache.kafka.sensors": [[9, "module-airflow.providers.apache.kafka.sensors"]], "airflow.providers.apache.kafka.sensors.kafka": [[10, "module-airflow.providers.apache.kafka.sensors.kafka"]], "airflow.providers.apache.kafka.triggers.await_message": [[11, "module-airflow.providers.apache.kafka.triggers.await_message"]], "airflow.providers.apache.kafka.triggers": [[12, "module-airflow.providers.apache.kafka.triggers"]], "tests.system.providers.apache.kafka.example_dag_event_listener": [[13, "module-tests.system.providers.apache.kafka.example_dag_event_listener"]], "tests.system.providers.apache.kafka.example_dag_hello_kafka": [[14, "module-tests.system.providers.apache.kafka.example_dag_hello_kafka"]], "tests.system.providers.apache.kafka": [[15, "module-tests.system.providers.apache.kafka"]], "Changelog": [[16, "changelog"]], "1.3.0": [[16, "id1"], [17, "id1"]], "Misc": [[16, "misc"], [16, "id4"], [16, "id8"], [16, "id11"]], "1.2.0": [[16, "id2"], [17, "id2"]], "Bug Fixes": [[16, "bug-fixes"], [16, "id6"]], "1.1.2": [[16, "id5"], [17, "id3"]], "1.1.1": [[16, "id7"], [17, "id4"]], "1.1.0": [[16, "id9"], [17, "id5"]], "1.0.0": [[16, "id12"], [17, "id7"]], "Package apache-airflow-providers-apache-kafka": [[17, "package-apache-airflow-providers-apache-kafka"], [20, "package-apache-airflow-providers-apache-kafka"]], "Apache Kafka Connection": [[18, "apache-kafka-connection"]], "Default Connection IDs": [[18, "default-connection-ids"]], "Configuring the Connection": [[18, "configuring-the-connection"]], "Apache Kafka Hooks": [[19, "apache-kafka-hooks"]], "KafkaHook": [[19, "kafkahook"]], "KafkaAdminClientHook": [[19, "kafkaadminclienthook"]], "Reference": [[19, "reference"], [19, "id1"], [19, "id2"], [22, "reference"], [22, "id2"], [24, "reference"], [24, "id2"]], "KafkaConsumerHook": [[19, "kafkaconsumerhook"]], "KafkaProducerHook": [[19, "kafkaproducerhook"]], "apache-airflow-providers-apache-kafka": [[20, "apache-airflow-providers-apache-kafka"]], "Provider package": [[20, "provider-package"]], "Installation": [[20, "installation"]], "Requirements": [[20, "requirements"]], "Installing from sources": [[21, "installing-from-sources"]], "Released packages": [[21, "released-packages"]], "Release integrity": [[21, "release-integrity"]], "Verifying PyPI releases": [[21, "verifying-pypi-releases"]], "Apache Kafka Operators": [[22, "apache-kafka-operators"]], "ConsumeFromTopicOperator": [[22, "consumefromtopicoperator"]], "Using the operator": [[22, "using-the-operator"], [22, "id1"]], "ProduceToTopicOperator": [[22, "producetotopicoperator"]], "Releasing security patches": [[23, "releasing-security-patches"]], "Apache Kafka Sensors": [[24, "apache-kafka-sensors"]], "AwaitMessageSensor": [[24, "awaitmessagesensor"]], "Using the sensor": [[24, "using-the-sensor"], [24, "id1"]], "AwaitMessageTriggerFunctionSensor": [[24, "awaitmessagetriggerfunctionsensor"]], "Apache Kafka Triggers": [[25, "apache-kafka-triggers"]], "AwaitMessageTrigger": [[25, "awaitmessagetrigger"]]}, "indexentries": {"kafkabasehook (class in airflow.providers.apache.kafka.hooks.base)": [[0, "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook"]], "airflow.providers.apache.kafka.hooks.base": [[0, "module-airflow.providers.apache.kafka.hooks.base"]], "conn_name_attr (airflow.providers.apache.kafka.hooks.base.kafkabasehook attribute)": [[0, "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook.conn_name_attr"]], "conn_type (airflow.providers.apache.kafka.hooks.base.kafkabasehook attribute)": [[0, "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook.conn_type"]], "default_conn_name (airflow.providers.apache.kafka.hooks.base.kafkabasehook attribute)": [[0, "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook.default_conn_name"]], "get_conn() (airflow.providers.apache.kafka.hooks.base.kafkabasehook method)": [[0, "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook.get_conn"]], "get_ui_field_behaviour() (airflow.providers.apache.kafka.hooks.base.kafkabasehook static method)": [[0, "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook.get_ui_field_behaviour"]], "hook_name (airflow.providers.apache.kafka.hooks.base.kafkabasehook attribute)": [[0, "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook.hook_name"]], "module": [[0, "module-airflow.providers.apache.kafka.hooks.base"], [1, "module-airflow.providers.apache.kafka.hooks.client"], [2, "module-airflow.providers.apache.kafka.hooks.consume"], [3, "module-airflow.providers.apache.kafka.hooks"], [4, "module-airflow.providers.apache.kafka.hooks.produce"], [5, "module-airflow.providers.apache.kafka"], [6, "module-airflow.providers.apache.kafka.operators.consume"], [7, "module-airflow.providers.apache.kafka.operators"], [8, "module-airflow.providers.apache.kafka.operators.produce"], [9, "module-airflow.providers.apache.kafka.sensors"], [10, "module-airflow.providers.apache.kafka.sensors.kafka"], [11, "module-airflow.providers.apache.kafka.triggers.await_message"], [12, "module-airflow.providers.apache.kafka.triggers"], [13, "module-tests.system.providers.apache.kafka.example_dag_event_listener"], [14, "module-tests.system.providers.apache.kafka.example_dag_hello_kafka"], [15, "module-tests.system.providers.apache.kafka"]], "test_connection() (airflow.providers.apache.kafka.hooks.base.kafkabasehook method)": [[0, "airflow.providers.apache.kafka.hooks.base.KafkaBaseHook.test_connection"]], "kafkaadminclienthook (class in airflow.providers.apache.kafka.hooks.client)": [[1, "airflow.providers.apache.kafka.hooks.client.KafkaAdminClientHook"]], "airflow.providers.apache.kafka.hooks.client": [[1, "module-airflow.providers.apache.kafka.hooks.client"]], "create_topic() (airflow.providers.apache.kafka.hooks.client.kafkaadminclienthook method)": [[1, "airflow.providers.apache.kafka.hooks.client.KafkaAdminClientHook.create_topic"]], "kafkaconsumerhook (class in airflow.providers.apache.kafka.hooks.consume)": [[2, "airflow.providers.apache.kafka.hooks.consume.KafkaConsumerHook"]], "airflow.providers.apache.kafka.hooks.consume": [[2, "module-airflow.providers.apache.kafka.hooks.consume"]], "get_consumer() (airflow.providers.apache.kafka.hooks.consume.kafkaconsumerhook method)": [[2, "airflow.providers.apache.kafka.hooks.consume.KafkaConsumerHook.get_consumer"]], "airflow.providers.apache.kafka.hooks": [[3, "module-airflow.providers.apache.kafka.hooks"]], "kafkaproducerhook (class in airflow.providers.apache.kafka.hooks.produce)": [[4, "airflow.providers.apache.kafka.hooks.produce.KafkaProducerHook"]], "airflow.providers.apache.kafka.hooks.produce": [[4, "module-airflow.providers.apache.kafka.hooks.produce"]], "get_producer() (airflow.providers.apache.kafka.hooks.produce.kafkaproducerhook method)": [[4, "airflow.providers.apache.kafka.hooks.produce.KafkaProducerHook.get_producer"]], "__version__ (in module airflow.providers.apache.kafka)": [[5, "airflow.providers.apache.kafka.__version__"]], "airflow.providers.apache.kafka": [[5, "module-airflow.providers.apache.kafka"]], "blue (airflow.providers.apache.kafka.operators.consume.consumefromtopicoperator attribute)": [[6, "airflow.providers.apache.kafka.operators.consume.ConsumeFromTopicOperator.BLUE"]], "consumefromtopicoperator (class in airflow.providers.apache.kafka.operators.consume)": [[6, "airflow.providers.apache.kafka.operators.consume.ConsumeFromTopicOperator"]], "valid_commit_cadence (in module airflow.providers.apache.kafka.operators.consume)": [[6, "airflow.providers.apache.kafka.operators.consume.VALID_COMMIT_CADENCE"]], "airflow.providers.apache.kafka.operators.consume": [[6, "module-airflow.providers.apache.kafka.operators.consume"]], "execute() (airflow.providers.apache.kafka.operators.consume.consumefromtopicoperator method)": [[6, "airflow.providers.apache.kafka.operators.consume.ConsumeFromTopicOperator.execute"]], "template_fields (airflow.providers.apache.kafka.operators.consume.consumefromtopicoperator attribute)": [[6, "airflow.providers.apache.kafka.operators.consume.ConsumeFromTopicOperator.template_fields"]], "ui_color (airflow.providers.apache.kafka.operators.consume.consumefromtopicoperator attribute)": [[6, "airflow.providers.apache.kafka.operators.consume.ConsumeFromTopicOperator.ui_color"]], "airflow.providers.apache.kafka.operators": [[7, "module-airflow.providers.apache.kafka.operators"]], "producetotopicoperator (class in airflow.providers.apache.kafka.operators.produce)": [[8, "airflow.providers.apache.kafka.operators.produce.ProduceToTopicOperator"]], "acked() (in module airflow.providers.apache.kafka.operators.produce)": [[8, "airflow.providers.apache.kafka.operators.produce.acked"]], "airflow.providers.apache.kafka.operators.produce": [[8, "module-airflow.providers.apache.kafka.operators.produce"]], "execute() (airflow.providers.apache.kafka.operators.produce.producetotopicoperator method)": [[8, "airflow.providers.apache.kafka.operators.produce.ProduceToTopicOperator.execute"]], "local_logger (in module airflow.providers.apache.kafka.operators.produce)": [[8, "airflow.providers.apache.kafka.operators.produce.local_logger"]], "template_fields (airflow.providers.apache.kafka.operators.produce.producetotopicoperator attribute)": [[8, "airflow.providers.apache.kafka.operators.produce.ProduceToTopicOperator.template_fields"]], "airflow.providers.apache.kafka.sensors": [[9, "module-airflow.providers.apache.kafka.sensors"]], "awaitmessagesensor (class in airflow.providers.apache.kafka.sensors.kafka)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageSensor"]], "awaitmessagetriggerfunctionsensor (class in airflow.providers.apache.kafka.sensors.kafka)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageTriggerFunctionSensor"]], "blue (airflow.providers.apache.kafka.sensors.kafka.awaitmessagesensor attribute)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageSensor.BLUE"]], "blue (airflow.providers.apache.kafka.sensors.kafka.awaitmessagetriggerfunctionsensor attribute)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageTriggerFunctionSensor.BLUE"]], "valid_commit_cadence (in module airflow.providers.apache.kafka.sensors.kafka)": [[10, "airflow.providers.apache.kafka.sensors.kafka.VALID_COMMIT_CADENCE"]], "airflow.providers.apache.kafka.sensors.kafka": [[10, "module-airflow.providers.apache.kafka.sensors.kafka"]], "execute() (airflow.providers.apache.kafka.sensors.kafka.awaitmessagesensor method)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageSensor.execute"]], "execute() (airflow.providers.apache.kafka.sensors.kafka.awaitmessagetriggerfunctionsensor method)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageTriggerFunctionSensor.execute"]], "execute_complete() (airflow.providers.apache.kafka.sensors.kafka.awaitmessagesensor method)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageSensor.execute_complete"]], "execute_complete() (airflow.providers.apache.kafka.sensors.kafka.awaitmessagetriggerfunctionsensor method)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageTriggerFunctionSensor.execute_complete"]], "template_fields (airflow.providers.apache.kafka.sensors.kafka.awaitmessagesensor attribute)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageSensor.template_fields"]], "template_fields (airflow.providers.apache.kafka.sensors.kafka.awaitmessagetriggerfunctionsensor attribute)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageTriggerFunctionSensor.template_fields"]], "ui_color (airflow.providers.apache.kafka.sensors.kafka.awaitmessagesensor attribute)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageSensor.ui_color"]], "ui_color (airflow.providers.apache.kafka.sensors.kafka.awaitmessagetriggerfunctionsensor attribute)": [[10, "airflow.providers.apache.kafka.sensors.kafka.AwaitMessageTriggerFunctionSensor.ui_color"]], "awaitmessagetrigger (class in airflow.providers.apache.kafka.triggers.await_message)": [[11, "airflow.providers.apache.kafka.triggers.await_message.AwaitMessageTrigger"]], "airflow.providers.apache.kafka.triggers.await_message": [[11, "module-airflow.providers.apache.kafka.triggers.await_message"]], "run() (airflow.providers.apache.kafka.triggers.await_message.awaitmessagetrigger method)": [[11, "airflow.providers.apache.kafka.triggers.await_message.AwaitMessageTrigger.run"]], "serialize() (airflow.providers.apache.kafka.triggers.await_message.awaitmessagetrigger method)": [[11, "airflow.providers.apache.kafka.triggers.await_message.AwaitMessageTrigger.serialize"]], "airflow.providers.apache.kafka.triggers": [[12, "module-airflow.providers.apache.kafka.triggers"]], "await_function() (in module tests.system.providers.apache.kafka.example_dag_event_listener)": [[13, "tests.system.providers.apache.kafka.example_dag_event_listener.await_function"]], "load_connections() (in module tests.system.providers.apache.kafka.example_dag_event_listener)": [[13, "tests.system.providers.apache.kafka.example_dag_event_listener.load_connections"]], "t0 (in module tests.system.providers.apache.kafka.example_dag_event_listener)": [[13, "tests.system.providers.apache.kafka.example_dag_event_listener.t0"]], "test_run (in module tests.system.providers.apache.kafka.example_dag_event_listener)": [[13, "tests.system.providers.apache.kafka.example_dag_event_listener.test_run"]], "tests.system.providers.apache.kafka.example_dag_event_listener": [[13, "module-tests.system.providers.apache.kafka.example_dag_event_listener"]], "await_function() (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.await_function"]], "consumer_function() (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.consumer_function"]], "consumer_function_batch() (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.consumer_function_batch"]], "consumer_logger (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.consumer_logger"]], "default_args (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.default_args"]], "hello_kafka() (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.hello_kafka"]], "load_connections() (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.load_connections"]], "producer_function() (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.producer_function"]], "t0 (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.t0"]], "test_run (in module tests.system.providers.apache.kafka.example_dag_hello_kafka)": [[14, "tests.system.providers.apache.kafka.example_dag_hello_kafka.test_run"]], "tests.system.providers.apache.kafka.example_dag_hello_kafka": [[14, "module-tests.system.providers.apache.kafka.example_dag_hello_kafka"]], "tests.system.providers.apache.kafka": [[15, "module-tests.system.providers.apache.kafka"]]}})