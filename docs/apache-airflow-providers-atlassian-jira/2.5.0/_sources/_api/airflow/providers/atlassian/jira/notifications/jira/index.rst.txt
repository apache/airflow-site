:py:mod:`airflow.providers.atlassian.jira.notifications.jira`
=============================================================

.. py:module:: airflow.providers.atlassian.jira.notifications.jira


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.atlassian.jira.notifications.jira.JiraNotifier




Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.atlassian.jira.notifications.jira.send_jira_notification


.. py:class:: JiraNotifier(*, jira_conn_id = JiraHook.default_conn_name, proxies = None, description, summary, project_id, issue_type_id, labels = None)


   Bases: :py:obj:`airflow.notifications.basenotifier.BaseNotifier`

   Jira notifier for creating Jira issues upon failures.

   :param jira_conn_id: The HTTP connection ID for the Jira instance.
   :param proxies: Proxies to make the Jira REST API call. Optional
   :param description: The content for the body of the issue
   :param summary: The title of the issue
   :param project_id: The ID of the project under which the issue will be created
   :param issue_type_id: The ID of the issue category
   :param labels: The labels to be applied to the issue

   .. py:attribute:: template_fields
      :value: ('description', 'summary', 'project_id', 'issue_type_id', 'labels')

      

   .. py:method:: hook()


   .. py:method:: notify(context)

      Send a notification.

      :param context: The airflow context



.. py:data:: send_jira_notification

   

