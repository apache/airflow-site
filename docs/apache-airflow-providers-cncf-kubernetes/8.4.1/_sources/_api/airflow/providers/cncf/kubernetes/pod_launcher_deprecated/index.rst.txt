:py:mod:`airflow.providers.cncf.kubernetes.pod_launcher_deprecated`
===================================================================

.. py:module:: airflow.providers.cncf.kubernetes.pod_launcher_deprecated

.. autoapi-nested-parse::

   Launches pods.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.cncf.kubernetes.pod_launcher_deprecated.PodStatus
   airflow.providers.cncf.kubernetes.pod_launcher_deprecated.PodLauncher




.. py:class:: PodStatus


   Status of the pods.

   .. py:attribute:: PENDING
      :value: 'pending'

      

   .. py:attribute:: RUNNING
      :value: 'running'

      

   .. py:attribute:: FAILED
      :value: 'failed'

      

   .. py:attribute:: SUCCEEDED
      :value: 'succeeded'

      


.. py:class:: PodLauncher(kube_client = None, in_cluster = True, cluster_context = None, extract_xcom = False)


   Bases: :py:obj:`airflow.utils.log.logging_mixin.LoggingMixin`

   Deprecated class for launching pods.

   Please use airflow.providers.cncf.kubernetes.utils.pod_manager.PodManager instead.

   .. py:method:: run_pod_async(pod, **kwargs)

      Run pod asynchronously.


   .. py:method:: delete_pod(pod)

      Delete pod.


   .. py:method:: start_pod(pod, startup_timeout = 120)

      Launch the pod synchronously and wait for completion.

      :param pod:
      :param startup_timeout: Timeout for startup of the pod (if pod is pending for too long, fails task)
      :return:


   .. py:method:: monitor_pod(pod, get_logs)

      Monitor a pod and return the final state.

      :param pod: pod spec that will be monitored
      :param get_logs: whether to read the logs locally


   .. py:method:: parse_log_line(line)

      Parse K8s log line and returns the final state.

      :param line: k8s log line
      :return: timestamp and log message


   .. py:method:: pod_not_started(pod)

      Test if pod has not started.


   .. py:method:: pod_is_running(pod)

      Test if pod is running.


   .. py:method:: base_container_is_running(pod)

      Test if base container is running.


   .. py:method:: read_pod_logs(pod, tail_lines = None, timestamps = False, since_seconds = None)

      Read log from the pod.


   .. py:method:: read_pod_events(pod)

      Read events from the pod.


   .. py:method:: read_pod(pod)

      Read pod information.


   .. py:method:: process_status(job_id, status)

      Process status information for the job.



