:py:mod:`airflow.providers.common.io.operators.file_transfer`
=============================================================

.. py:module:: airflow.providers.common.io.operators.file_transfer


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.common.io.operators.file_transfer.FileTransferOperator




.. py:class:: FileTransferOperator(*, src, dst, source_conn_id = None, dest_conn_id = None, overwrite = False, **kwargs)


   Bases: :py:obj:`airflow.models.BaseOperator`

   Copies a file from a source to a destination.

   This streams the file from the source to the destination if required
   , so it does not need to fit into memory.

   :param src: The source file path or ObjectStoragePath object.
   :param dst: The destination file path or ObjectStoragePath object.
   :param source_conn_id: The optional source connection id.
   :param dest_conn_id: The optional destination connection id.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:FileTransferOperator`

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('src', 'dst')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



