Search.setIndex({"docnames": ["_api/airflow/providers/common/sql/hooks/index", "_api/airflow/providers/common/sql/hooks/sql/index", "_api/airflow/providers/common/sql/index", "_api/airflow/providers/common/sql/operators/index", "_api/airflow/providers/common/sql/operators/sql/index", "_api/airflow/providers/common/sql/sensors/index", "_api/airflow/providers/common/sql/sensors/sql/index", "_api/tests/system/providers/common/sql/example_sql_column_table_check/index", "_api/tests/system/providers/common/sql/example_sql_execute_query/index", "_api/tests/system/providers/common/sql/index", "commits", "connections", "index", "installing-providers-from-sources", "operators"], "filenames": ["_api/airflow/providers/common/sql/hooks/index.rst", "_api/airflow/providers/common/sql/hooks/sql/index.rst", "_api/airflow/providers/common/sql/index.rst", "_api/airflow/providers/common/sql/operators/index.rst", "_api/airflow/providers/common/sql/operators/sql/index.rst", "_api/airflow/providers/common/sql/sensors/index.rst", "_api/airflow/providers/common/sql/sensors/sql/index.rst", "_api/tests/system/providers/common/sql/example_sql_column_table_check/index.rst", "_api/tests/system/providers/common/sql/example_sql_execute_query/index.rst", "_api/tests/system/providers/common/sql/index.rst", "commits.rst", "connections.rst", "index.rst", "installing-providers-from-sources.rst", "operators.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.common.sql.hooks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.common.sql.hooks.sql</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.common.sql</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.common.sql.operators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.common.sql.operators.sql</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.common.sql.sensors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.common.sql.sensors.sql</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tests.system.providers.common.sql.example_sql_column_table_check</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tests.system.providers.common.sql.example_sql_execute_query</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tests.system.providers.common.sql</span></code>", "Package apache-airflow-providers-common-sql", "Connecting to a SQL DB", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apache-airflow-providers-common-sql</span></code>", "Installing from sources", "SQL Operators"], "terms": {"1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "dev0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "experiment": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "featur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14], "fetch_all_handl": [1, 4, 10, 12, 14], "cursor": [1, 4, 14], "sourc": [1, 4, 6, 7, 8, 12, 14], "handler": [1, 4, 14], "dbapihook": [1, 4, 10, 12], "run": [1, 4, 6, 10, 12, 13, 14], "return": [1, 4, 6, 14], "result": [1, 4, 14], "fetch_one_handl": 1, "connectorprotocol": [1, 12], "base": [1, 4, 6], "typing_extens": 1, "protocol": 1, "A": [1, 6, 14], "where": [1, 4, 14], "you": [1, 4, 12, 13], "can": [1, 4, 6, 11, 12, 13, 14], "connect": [1, 4, 6, 12, 14], "databas": [1, 4, 11, 12, 14], "host": 1, "port": 1, "usernam": 1, "schema": 1, "paramet": [1, 4, 6, 10, 11, 12, 14], "str": [1, 4, 6], "The": [1, 4, 6, 11, 13, 14], "int": [1, 4, 14], "us": [1, 4, 10, 12, 13, 14], "authent": 1, "author": 1, "object": [1, 4], "type": [1, 4, 10, 12], "ani": [1, 4, 11, 13, 14], "basefordbapihook": 1, "basehook": 1, "arg": [1, 11], "none": [1, 4, 6, 13, 14], "log_sql": 1, "true": [1, 4, 14], "kwarg": [1, 4, 6], "dbapi": [1, 11], "abstract": 1, "option": [1, 4, 6, 14], "db": [1, 4, 10, 12], "overrid": [1, 4, 6, 10, 12], "specifi": [1, 4, 14], "make": [1, 12], "sure": 1, "chang": [1, 10], "valu": [1, 4, 6], "constructor": [1, 6], "deriv": [1, 4, 6], "should": [1, 4, 6, 13], "done": 1, "befor": [1, 4, 6], "call": [1, 6], "__init__": 1, "bool": [1, 4], "whether": [1, 4], "log": [1, 4, 10, 12], "queri": [1, 4, 6], "when": [1, 4, 14], "": [1, 4, 10, 13, 14], "execut": [1, 4, 10, 12], "default": [1, 4, 14], "conn_name_attr": 1, "default_conn_nam": 1, "default_conn_id": [1, 4], "supports_autocommit": 1, "fals": [1, 4, 6, 14], "connector": 1, "placehold": [1, 10, 12], "get_conn": 1, "get_uri": 1, "extract": 1, "uri": 1, "from": [1, 4, 12, 14], "get_sqlalchemy_engin": 1, "engine_kwarg": 1, "get": [1, 4, 13], "sqlalchemy_engin": 1, "create_engin": 1, "creat": [1, 4, 13], "engin": 1, "get_pandas_df": 1, "panda": [1, 10, 12], "datafram": 1, "statement": [1, 4, 6, 10, 12, 14], "list": [1, 4, 10, 12, 14], "render": [1, 4, 6, 14], "pass": [1, 4, 6, 11], "io": 1, "read_sql": 1, "method": [1, 4, 10, 12], "get_pandas_df_by_chunk": 1, "chunksiz": 1, "gener": [1, 4], "number": [1, 4, 14], "row": [1, 4, 6, 14], "includ": [1, 10, 12, 14], "each": [1, 4, 14], "chunk": 1, "get_record": [1, 10, 12], "set": [1, 4, 14], "record": 1, "iter": [1, 4], "map": [1, 4, 14], "get_first": [1, 10, 12], "first": [1, 4, 6, 14], "static": 1, "strip_sql_str": 1, "split_sql_str": 1, "split": [1, 4, 10, 12, 14], "string": [1, 4, 6, 10, 12, 14], "multipl": 1, "express": [1, 4], "potenti": 1, "consist": [1, 10, 12], "individu": 1, "autocommit": [1, 4, 14], "split_stat": [1, 4, 14], "return_last": [1, 4, 14], "command": [1, 4, 14], "them": 1, "sequenti": 1, "what": 1, "callabl": [1, 6], "which": [1, 4, 6, 10, 12, 14], "singl": [1, 4, 14], "separ": [1, 14], "onli": [1, 4, 6, 12, 14], "last": [1, 4, 14], "all": [1, 10, 12, 14], "after": 1, "wa": 1, "set_autocommit": 1, "conn": 1, "flag": 1, "get_autocommit": 1, "doe": 1, "support": [1, 12], "get_cursor": 1, "insert_row": [1, 10, 12], "tabl": [1, 4], "target_field": 1, "commit_everi": 1, "1000": [1, 4, 14], "replac": 1, "wai": 1, "insert": 1, "tupl": 1, "new": 1, "transact": 1, "everi": 1, "name": [1, 4, 14], "target": 1, "column": [1, 4], "fill": 1, "maximum": [1, 4, 14], "one": [1, 4, 6, 13], "instead": 1, "bulk_dump": 1, "tmp_file": 1, "dump": 1, "tab": 1, "delimit": 1, "file": [1, 4, 13, 14], "path": [1, 4], "bulk_load": 1, "load": 1, "test_connect": 1, "test": [1, 10, 12, 14], "specif": [1, 4], "hook": [2, 4, 6, 10, 11, 12], "oper": [2, 10, 11, 12], "sensor": 2, "basesqloper": 4, "conn_id": [4, 6], "hook_param": [4, 6], "retry_on_failur": 4, "model": 4, "baseoper": 4, "get_db_hook": 4, "behavior": 4, "try": [4, 6], "retriev": 4, "custom": 4, "refer": 4, "sqlexecutequeryoper": [4, 10, 12, 14], "code": [4, 13], "param": [4, 6], "point": [4, 14], "templat": [4, 14], "must": [4, 14], "have": [4, 6], "extens": 4, "automat": [4, 14], "commit": [4, 10, 14], "function": [4, 6, 10, 12, 14], "appli": [4, 10, 14], "For": [4, 10, 11, 13], "more": [4, 11], "inform": [4, 10], "how": [4, 13, 14], "take": [4, 6], "look": [4, 14], "guid": [4, 13], "template_field": [4, 6], "sequenc": [4, 6], "template_ext": [4, 6], "json": 4, "template_fields_render": 4, "ui_color": [4, 6], "cdaa": 4, "context": [4, 6], "main": [4, 13], "same": [4, 14], "dictionari": [4, 14], "jinja": 4, "get_template_context": 4, "prepare_templ": 4, "pars": 4, "attribut": 4, "sqlcolumncheckoper": [4, 12, 14], "column_map": [4, 14], "partition_claus": [4, 14], "accept_non": [4, 14], "perform": [4, 14], "check": [4, 13], "column_check": [4, 7, 14], "ar": [4, 6, 12, 13, 14], "per": 4, "basi": 4, "follow": [4, 13], "equal_to": [4, 14], "exact": 4, "equal": 4, "cannot": 4, "other": [4, 11, 14], "comparison": 4, "greater_than": [4, 14], "strictli": 4, "greater": 4, "than": 4, "less_than": [4, 14], "less": [4, 10, 12], "geq_to": [4, 14], "leq_to": [4, 14], "toler": [4, 14], "percentag": [4, 14], "mai": [4, 14], "off": 4, "expect": 4, "extra": [4, 6], "claus": [4, 14], "partit": [4, 14], "data": [4, 14], "dict": 4, "associ": 4, "e": 4, "g": 4, "col_nam": [4, 14], "null_check": [4, 14], "foreign_kei": 4, "NOT": [4, 14], "null": [4, 14], "min": [4, 10, 12, 14], "10": [4, 10, 14], "max": [4, 14], "01": [4, 14], "partial": 4, "ad": 4, "built": 4, "date": 4, "1970": 4, "id": [4, 13, 14], "overwrit": 4, "defin": [4, 6], "accept": 4, "If": [4, 6, 13, 14], "convert": [4, 14], "sql_check_templ": 4, "multilin": 4, "show": [4, 14], "select": [4, 13, 14], "AS": 4, "check_typ": 4, "_": 4, "check_result": 4, "check_stat": [4, 14], "sq": 4, "sqltablecheckoper": [4, 10, 12, 14], "written": 4, "boolean": [4, 6, 14], "contain": [4, 6, 13], "least": [4, 6], "row_count_check": [4, 14], "count": [4, 14], "column_sum_check": [4, 14], "col_a": [4, 14], "col_b": [4, 14], "col_c": [4, 14], "third_check": 4, "col": 4, "check_nam": 4, "case": [4, 6], "THEN": 4, "els": 4, "end": 4, "sqlcheckoper": [4, 10, 12], "against": [4, 6, 14], "evalu": [4, 6, 10], "python": [4, 10, 12, 13], "cast": 4, "fail": [4, 6], "error": [4, 10, 12], "out": [4, 10, 14], "note": 4, "eval": 4, "empti": [4, 6, 14], "given": [4, 14], "like": [4, 11, 14], "foo": 4, "craft": 4, "much": 4, "complex": 4, "could": 4, "instanc": 4, "ha": 4, "upstream": 4, "todai": 4, "yesterdai": 4, "metric": 4, "standard": 4, "deviat": 4, "7": 4, "dai": 4, "averag": 4, "qualiti": [4, 14], "your": 4, "pipelin": 4, "depend": [4, 14], "put": 4, "dag": [4, 12], "choic": 4, "stop": 4, "critic": 4, "prevent": 4, "publish": 4, "dubiou": 4, "side": 4, "receiv": 4, "email": 4, "alert": 4, "without": 4, "progress": 4, "hql": [4, 6, 10, 12], "fff7e6": 4, "sqlvaluecheckoper": 4, "pass_valu": 4, "simpl": 4, "__mapper_args__": 4, "sqlintervalcheckoper": 4, "metrics_threshold": 4, "date_filter_column": 4, "d": [4, 13], "days_back": 4, "ratio_formula": 4, "max_over_min": 4, "ignore_zero": 4, "within": 4, "certain": 4, "ones": 4, "supportsab": 4, "between": [4, 14], "we": 4, "want": [4, 13], "filter": [4, 14], "formula": 4, "comput": 4, "ratio": 4, "two": [4, 14], "assum": 4, "cur": 4, "ref": 4, "relative_diff": 4, "ab": 4, "ignor": 4, "zero": [4, 6], "index": 4, "sql1": 4, "sql2": 4, "sqlthresholdcheckoper": 4, "min_threshold": 4, "max_threshold": 4, "minimum": [4, 12, 14], "threshold": 4, "form": 4, "numer": 4, "OR": 4, "push": 4, "meta_data": 4, "send": 4, "info": 4, "metadata": 4, "extern": 4, "branchsqloper": 4, "follow_task_ids_if_tru": 4, "follow_task_ids_if_fals": 4, "skipmixin": 4, "allow": [4, 10, 11, 12, 14], "branch": 4, "recogn": 4, "integ": [4, 14], "otherwis": 4, "y": 4, "ye": 4, "n": 4, "task": [4, 14], "a22034": 4, "ui_fgcolor": 4, "f7f7f7": 4, "sqlsensor": [6, 10, 12], "success": [6, 14], "failur": 6, "fail_on_empti": 6, "basesensoroper": 6, "repeatedli": 6, "until": 6, "criteria": 6, "met": 6, "It": [6, 13], "keep": 6, "cell": 6, "argument": [6, 14], "retri": 6, "rais": 6, "airflowexcept": 6, "also": [6, 13, 14], "been": 6, "To": [6, 13], "need": 6, "non": [6, 10], "first_cel": 6, "explicitli": 6, "config": 6, "underli": 6, "match": [6, 13], "desir": 6, "7c7287": 6, "poke": 6, "while": 6, "airflow_db_metadata_t": [7, 8, 14], "ab_rol": [7, 8], "connection_arg": [7, 8], "test_run": [7, 8], "execute_queri": [8, 14], "example_sql_column_table_check": [9, 14], "example_sql_execute_queri": [9, 14], "detail": [10, 12, 13], "version": [10, 12, 13], "high": 10, "level": [10, 14], "changelog": 10, "see": [10, 12], "latest": 10, "2022": 10, "11": [10, 13], "14": 10, "subject": 10, "3ae98b824d": 10, "unus": [10, 12], "27599": [10, 12], "5c37b503f1": 10, "31": 10, "26944": [10, 12], "9ab1a6a3e7": 10, "27": 10, "updat": [10, 12], "old": [10, 12], "style": [10, 12], "26872": 10, "87eb46bbc6": 10, "26": 10, "bugfix": [10, 12], "improv": [10, 12], "26761": [10, 12], "78b8ea2f22": 10, "24": 10, "move": [10, 12], "27196": [10, 12], "2a34dc9e84": 10, "23": 10, "enabl": 10, "normal": 10, "format": 10, "27205": 10, "ecd4d6654f": 10, "18": 10, "add": [10, 12], "25717": [10, 12], "76014609c0": 10, "09": 10, "26758": [10, 12], "f8db64c35c": 10, "28": 10, "doc": 10, "septemb": 10, "releas": [10, 12], "26731": 10, "06acf40a43": 10, "13": 10, "pep": 10, "563": 10, "postpon": 10, "annot": 10, "core": 10, "26289": 10, "05": 10, "25d0baa4e": 10, "prepar": 10, "bug": 10, "fix": 10, "band": 10, "26109": 10, "27e2101f6": 10, "08": 10, "30": 10, "better": [10, 12], "messsag": 10, "pre": [10, 12], "26051": [10, 12], "a74d934991": 10, "trinohook": 10, "prestohook": 10, "sqlitehook": 10, "25939": [10, 12], "874a95cc17": 10, "22": 10, "discard": [10, 12], "semicolon": [10, 12], "strip": [10, 12], "25855": [10, 12], "dd72e67524": 10, "19": 10, "postgresql": [10, 12], "25821": [10, 12], "5b3d579a42": 10, "don": [10, 12], "t": [10, 12, 14], "25822": [10, 12], "15": 10, "7d0525a55b": 10, "document": 10, "rc4": 10, "25720": 10, "7a19651369": 10, "25713": [10, 12], "5923788143": 10, "amazon": 10, "25636": 10, "d82436b382": 10, "api": [10, 12], "25430": [10, 12], "348a28957a": 10, "04": 10, "align": [10, 12], "logo": [10, 12], "locat": [10, 12], "25538": [10, 12], "acab8f52dd": 10, "07": 10, "29": 10, "25350": [10, 12], "b0fd105f4a": 10, "legaci": [10, 12], "25293": [10, 12], "5d4abbd58c": 10, "deprec": [10, 12], "synchron": [10, 12], "25299": [10, 12], "df00436569": 10, "unifi": [10, 12], "23971": [10, 12], "be7cb1e837": 10, "variou": [10, 11, 12, 14], "25164": [10, 12], "46bbfdade0": 10, "class": [10, 12], "24836": 10, "provid": [11, 13, 14], "packag": 11, "access": 11, "directli": 11, "simpli": 11, "suffici": 11, "complic": 11, "addit": 11, "kei": [11, 13, 14], "word": 11, "under": [11, 14], "do": [11, 13], "exampl": [12, 13, 14], "pypi": 12, "repositori": 12, "top": [12, 13], "exist": 12, "below": [12, 13, 14], "via": [12, 13], "pip": [12, 13], "sqlpars": 12, "4": 12, "avail": [12, 13], "explain": 12, "polici": 12, "configur": 12, "messag": 12, "taskflow": 12, "hint": 12, "paramspec": 12, "25173": 12, "initi": 12, "page": 13, "describ": [13, 14], "download": 13, "apach": 13, "airflow": [13, 14], "common": [13, 14], "sql": 13, "offici": 13, "most": 13, "choos": 13, "differ": [13, 14], "drop": 13, "down": 13, "left": 13, "sdist": 13, "whl": 13, "origin": 13, "checksum": 13, "signatur": 13, "softwar": 13, "foundat": 13, "asc": 13, "sha512": 13, "those": 13, "link": 13, "abov": 13, "build": [13, 14], "pgp": 13, "essenti": 13, "sha": 13, "gpg": 13, "pleas": 13, "well": [13, 14], "relev": 13, "distribut": 13, "recommend": 13, "directori": 13, "mirror": 13, "pgpk": 13, "ka": 13, "binari": 13, "pgpv": 13, "tar": 13, "gz": 13, "made": 13, "sat": 13, "sep": 13, "12": 13, "49": 13, "54": 13, "2021": 13, "bst": 13, "rsa": 13, "cde15c6e4d3a8ec4ecf4ba4b6674e08ad7de406f": 13, "issuer": 13, "kaxilnaik": 13, "org": 13, "good": 13, "kaxil": 13, "naik": 13, "unknown": 13, "aka": 13, "gmail": 13, "com": 13, "warn": 13, "user": 13, "certifi": 13, "trust": 13, "There": 13, "indic": 13, "belong": 13, "owner": 13, "primari": 13, "fingerprint": 13, "cde1": 13, "5c6e": 13, "4d3a": 13, "8ec4": 13, "ecf4": 13, "ba4b": 13, "6674": 13, "e08a": 13, "d7de": 13, "406f": 13, "correct": 13, "worri": 13, "about": 13, "certif": 13, "manag": 13, "self": 13, "sign": 13, "why": 13, "By": 13, "import": 13, "server": 13, "previou": 13, "step": 13, "know": 13, "valid": [13, 14], "alreadi": 13, "sum": 13, "shasum": 13, "512": 13, "diff": 13, "local": 13, "script": 13, "bin": 13, "bash": 13, "package_vers": 13, "package_nam": 13, "provider_download_dir": 13, "mktemp": 13, "dep": 13, "dest": 13, "curl": 13, "http": 13, "apache_airflow_providers_common_sql": 13, "py3": 13, "l": 13, "o": 13, "echo": 13, "la": 13, "onc": 13, "instruct": 13, "chapter": 13, "remov": 13, "temporari": 13, "folder": 13, "These": 14, "won": 14, "instanti": 14, "system": 14, "py": 14, "task_id": 14, "f": 14, "limit": 14, "As": 14, "relationship": 14, "suppli": 14, "three": 14, "nest": 14, "other_col": 14, "entri": 14, "its": 14, "distinct_check": 14, "distinct": 14, "unique_check": 14, "either": 14, "condit": 14, "compat": 14, "both": 14, "lower": 14, "upper": 14, "bound": 14, "still": 14, "consid": 14, "just": 14, "demonstr": 14, "referenc": 14, "resolv": 14, "parse_boolean": 14, "possibl": 14, "latter": 14, "across": 14}, "objects": {"airflow.providers.common": [[2, 0, 0, "-", "sql"]], "airflow.providers.common.sql": [[0, 0, 0, "-", "hooks"], [3, 0, 0, "-", "operators"], [5, 0, 0, "-", "sensors"]], "airflow.providers.common.sql.hooks": [[1, 0, 0, "-", "sql"]], "airflow.providers.common.sql.hooks.sql": [[1, 1, 1, "", "BaseForDbApiHook"], [1, 2, 1, "", "ConnectorProtocol"], [1, 2, 1, "", "DbApiHook"], [1, 5, 1, "", "fetch_all_handler"], [1, 5, 1, "", "fetch_one_handler"]], "airflow.providers.common.sql.hooks.sql.ConnectorProtocol": [[1, 3, 1, "", "connect"]], "airflow.providers.common.sql.hooks.sql.DbApiHook": [[1, 3, 1, "", "bulk_dump"], [1, 3, 1, "", "bulk_load"], [1, 4, 1, "", "conn_name_attr"], [1, 4, 1, "", "connector"], [1, 4, 1, "", "default_conn_name"], [1, 3, 1, "", "get_autocommit"], [1, 3, 1, "", "get_conn"], [1, 3, 1, "", "get_cursor"], [1, 3, 1, "", "get_first"], [1, 3, 1, "", "get_pandas_df"], [1, 3, 1, "", "get_pandas_df_by_chunks"], [1, 3, 1, "", "get_records"], [1, 3, 1, "", "get_sqlalchemy_engine"], [1, 3, 1, "", "get_uri"], [1, 3, 1, "", "insert_rows"], [1, 4, 1, "", "placeholder"], [1, 3, 1, "", "run"], [1, 3, 1, "", "set_autocommit"], [1, 3, 1, "", "split_sql_string"], [1, 3, 1, "", "strip_sql_string"], [1, 4, 1, "", "supports_autocommit"], [1, 3, 1, "", "test_connection"]], "airflow.providers.common.sql.operators": [[4, 0, 0, "-", "sql"]], "airflow.providers.common.sql.operators.sql": [[4, 2, 1, "", "BaseSQLOperator"], [4, 2, 1, "", "BranchSQLOperator"], [4, 2, 1, "", "SQLCheckOperator"], [4, 2, 1, "", "SQLColumnCheckOperator"], [4, 2, 1, "", "SQLExecuteQueryOperator"], [4, 2, 1, "", "SQLIntervalCheckOperator"], [4, 2, 1, "", "SQLTableCheckOperator"], [4, 2, 1, "", "SQLThresholdCheckOperator"], [4, 2, 1, "", "SQLValueCheckOperator"]], "airflow.providers.common.sql.operators.sql.BaseSQLOperator": [[4, 3, 1, "", "get_db_hook"]], "airflow.providers.common.sql.operators.sql.BranchSQLOperator": [[4, 3, 1, "", "execute"], [4, 4, 1, "", "template_ext"], [4, 4, 1, "", "template_fields"], [4, 4, 1, "", "template_fields_renderers"], [4, 4, 1, "", "ui_color"], [4, 4, 1, "", "ui_fgcolor"]], "airflow.providers.common.sql.operators.sql.SQLCheckOperator": [[4, 3, 1, "", "execute"], [4, 4, 1, "", "template_ext"], [4, 4, 1, "", "template_fields"], [4, 4, 1, "", "template_fields_renderers"], [4, 4, 1, "", "ui_color"]], "airflow.providers.common.sql.operators.sql.SQLColumnCheckOperator": [[4, 4, 1, "", "column_checks"], [4, 3, 1, "", "execute"], [4, 4, 1, "", "sql_check_template"], [4, 4, 1, "", "template_fields"]], "airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator": [[4, 3, 1, "", "execute"], [4, 3, 1, "", "prepare_template"], [4, 4, 1, "", "template_ext"], [4, 4, 1, "", "template_fields"], [4, 4, 1, "", "template_fields_renderers"], [4, 4, 1, "", "ui_color"]], "airflow.providers.common.sql.operators.sql.SQLIntervalCheckOperator": [[4, 4, 1, "", "__mapper_args__"], [4, 3, 1, "", "execute"], [4, 4, 1, "", "ratio_formulas"], [4, 4, 1, "", "template_ext"], [4, 4, 1, "", "template_fields"], [4, 4, 1, "", "template_fields_renderers"], [4, 4, 1, "", "ui_color"]], "airflow.providers.common.sql.operators.sql.SQLTableCheckOperator": [[4, 3, 1, "", "execute"], [4, 4, 1, "", "sql_check_template"], [4, 4, 1, "", "template_fields"]], "airflow.providers.common.sql.operators.sql.SQLThresholdCheckOperator": [[4, 3, 1, "", "execute"], [4, 3, 1, "", "push"], [4, 4, 1, "", "template_ext"], [4, 4, 1, "", "template_fields"], [4, 4, 1, "", "template_fields_renderers"]], "airflow.providers.common.sql.operators.sql.SQLValueCheckOperator": [[4, 4, 1, "", "__mapper_args__"], [4, 3, 1, "", "execute"], [4, 4, 1, "", "template_ext"], [4, 4, 1, "", "template_fields"], [4, 4, 1, "", "template_fields_renderers"], [4, 4, 1, "", "ui_color"]], "airflow.providers.common.sql.sensors": [[6, 0, 0, "-", "sql"]], "airflow.providers.common.sql.sensors.sql": [[6, 2, 1, "", "SqlSensor"]], "airflow.providers.common.sql.sensors.sql.SqlSensor": [[6, 3, 1, "", "poke"], [6, 4, 1, "", "template_ext"], [6, 4, 1, "", "template_fields"], [6, 4, 1, "", "ui_color"]], "tests.system.providers.common": [[9, 0, 0, "-", "sql"]], "tests.system.providers.common.sql": [[7, 0, 0, "-", "example_sql_column_table_check"], [8, 0, 0, "-", "example_sql_execute_query"]], "tests.system.providers.common.sql.example_sql_column_table_check": [[7, 1, 1, "", "AIRFLOW_DB_METADATA_TABLE"], [7, 1, 1, "", "column_check"], [7, 1, 1, "", "connection_args"], [7, 1, 1, "", "test_run"]], "tests.system.providers.common.sql.example_sql_execute_query": [[8, 1, 1, "", "AIRFLOW_DB_METADATA_TABLE"], [8, 1, 1, "", "connection_args"], [8, 1, 1, "", "execute_query"], [8, 1, 1, "", "test_run"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"airflow": [0, 1, 2, 3, 4, 5, 6, 10, 12], "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "common": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "sql": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "hook": [0, 1], "submodul": [0, 3, 5, 9], "modul": [1, 4, 6, 7, 8], "content": [1, 4, 6, 7, 8, 12], "class": [1, 4, 6], "function": 1, "attribut": 1, "subpackag": 2, "oper": [3, 4, 14], "sensor": [5, 6], "test": [7, 8, 9], "system": [7, 8, 9], "example_sql_column_table_check": 7, "example_sql_execute_queri": 8, "packag": [10, 12, 13], "apach": [10, 12], "1": [10, 12], "3": [10, 12], "0": [10, 12], "2": [10, 12], "connect": 11, "db": 11, "default": 11, "id": 11, "guid": 12, "refer": 12, "resourc": 12, "commit": 12, "instal": [12, 13], "requir": 12, "changelog": 12, "misc": 12, "featur": 12, "bug": 12, "fix": 12, "from": 13, "sourc": 13, "releas": 13, "integr": 13, "verifi": 13, "pypi": 13, "execut": 14, "queri": 14, "check": 14, "tabl": 14, "column": 14, "valu": 14}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"airflow.providers.common.sql.hooks": [[0, "module-airflow.providers.common.sql.hooks"]], "Submodules": [[0, "submodules"], [3, "submodules"], [5, "submodules"], [9, "submodules"]], "airflow.providers.common.sql.hooks.sql": [[1, "module-airflow.providers.common.sql.hooks.sql"]], "Module Contents": [[1, "module-contents"], [4, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"]], "Classes": [[1, "classes"], [4, "classes"], [6, "classes"]], "Functions": [[1, "functions"]], "Attributes": [[1, "attributes"]], "airflow.providers.common.sql": [[2, "module-airflow.providers.common.sql"]], "Subpackages": [[2, "subpackages"]], "airflow.providers.common.sql.operators": [[3, "module-airflow.providers.common.sql.operators"]], "airflow.providers.common.sql.operators.sql": [[4, "module-airflow.providers.common.sql.operators.sql"]], "airflow.providers.common.sql.sensors": [[5, "module-airflow.providers.common.sql.sensors"]], "airflow.providers.common.sql.sensors.sql": [[6, "module-airflow.providers.common.sql.sensors.sql"]], "tests.system.providers.common.sql.example_sql_column_table_check": [[7, "module-tests.system.providers.common.sql.example_sql_column_table_check"]], "tests.system.providers.common.sql.example_sql_execute_query": [[8, "module-tests.system.providers.common.sql.example_sql_execute_query"]], "tests.system.providers.common.sql": [[9, "module-tests.system.providers.common.sql"]], "Package apache-airflow-providers-common-sql": [[10, "package-apache-airflow-providers-common-sql"], [12, "package-apache-airflow-providers-common-sql"]], "1.3.0": [[10, "id1"], [12, "id1"]], "1.2.0": [[10, "id2"], [12, "id2"]], "1.1.0": [[10, "id3"], [12, "id5"]], "1.0.0": [[10, "id5"], [12, "id8"]], "Connecting to a SQL DB": [[11, "connecting-to-a-sql-db"]], "Default Connection ID": [[11, "default-connection-id"]], "apache-airflow-providers-common-sql": [[12, "apache-airflow-providers-common-sql"]], "Content": [[12, "content"]], "Guides": [[12, null]], "References": [[12, null]], "Resources": [[12, null]], "Commits": [[12, null]], "Provider package": [[12, "provider-package"]], "Installation": [[12, "installation"]], "Requirements": [[12, "requirements"]], "Changelog": [[12, "changelog"]], "Misc": [[12, "misc"]], "Features": [[12, "features"], [12, "id3"], [12, "id6"]], "Bug Fixes": [[12, "bug-fixes"], [12, "id4"], [12, "id7"]], "Installing from sources": [[13, "installing-from-sources"]], "Released packages": [[13, "released-packages"]], "Release integrity": [[13, "release-integrity"]], "Verifying PyPI releases": [[13, "verifying-pypi-releases"]], "SQL Operators": [[14, "sql-operators"]], "Execute SQL query": [[14, "execute-sql-query"]], "Check SQL Table Columns": [[14, "check-sql-table-columns"]], "Check SQL Table Values": [[14, "check-sql-table-values"]]}, "indexentries": {"airflow.providers.common.sql.hooks": [[0, "module-airflow.providers.common.sql.hooks"]], "module": [[0, "module-airflow.providers.common.sql.hooks"], [1, "module-airflow.providers.common.sql.hooks.sql"], [2, "module-airflow.providers.common.sql"], [3, "module-airflow.providers.common.sql.operators"], [4, "module-airflow.providers.common.sql.operators.sql"], [5, "module-airflow.providers.common.sql.sensors"], [6, "module-airflow.providers.common.sql.sensors.sql"], [7, "module-tests.system.providers.common.sql.example_sql_column_table_check"], [8, "module-tests.system.providers.common.sql.example_sql_execute_query"], [9, "module-tests.system.providers.common.sql"]], "basefordbapihook (in module airflow.providers.common.sql.hooks.sql)": [[1, "airflow.providers.common.sql.hooks.sql.BaseForDbApiHook"]], "connectorprotocol (class in airflow.providers.common.sql.hooks.sql)": [[1, "airflow.providers.common.sql.hooks.sql.ConnectorProtocol"]], "dbapihook (class in airflow.providers.common.sql.hooks.sql)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook"]], "airflow.providers.common.sql.hooks.sql": [[1, "module-airflow.providers.common.sql.hooks.sql"]], "bulk_dump() (airflow.providers.common.sql.hooks.sql.dbapihook method)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.bulk_dump"]], "bulk_load() (airflow.providers.common.sql.hooks.sql.dbapihook method)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.bulk_load"]], "conn_name_attr (airflow.providers.common.sql.hooks.sql.dbapihook attribute)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.conn_name_attr"]], "connect() (airflow.providers.common.sql.hooks.sql.connectorprotocol method)": [[1, "airflow.providers.common.sql.hooks.sql.ConnectorProtocol.connect"]], "connector (airflow.providers.common.sql.hooks.sql.dbapihook attribute)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.connector"]], "default_conn_name (airflow.providers.common.sql.hooks.sql.dbapihook attribute)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.default_conn_name"]], "fetch_all_handler() (in module airflow.providers.common.sql.hooks.sql)": [[1, "airflow.providers.common.sql.hooks.sql.fetch_all_handler"]], "fetch_one_handler() (in module airflow.providers.common.sql.hooks.sql)": [[1, "airflow.providers.common.sql.hooks.sql.fetch_one_handler"]], "get_autocommit() (airflow.providers.common.sql.hooks.sql.dbapihook method)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.get_autocommit"]], "get_conn() (airflow.providers.common.sql.hooks.sql.dbapihook method)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.get_conn"]], "get_cursor() (airflow.providers.common.sql.hooks.sql.dbapihook method)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.get_cursor"]], "get_first() (airflow.providers.common.sql.hooks.sql.dbapihook method)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.get_first"]], "get_pandas_df() (airflow.providers.common.sql.hooks.sql.dbapihook method)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.get_pandas_df"]], "get_pandas_df_by_chunks() (airflow.providers.common.sql.hooks.sql.dbapihook method)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.get_pandas_df_by_chunks"]], "get_records() (airflow.providers.common.sql.hooks.sql.dbapihook method)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.get_records"]], "get_sqlalchemy_engine() (airflow.providers.common.sql.hooks.sql.dbapihook method)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.get_sqlalchemy_engine"]], "get_uri() (airflow.providers.common.sql.hooks.sql.dbapihook method)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.get_uri"]], "insert_rows() (airflow.providers.common.sql.hooks.sql.dbapihook method)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.insert_rows"]], "placeholder (airflow.providers.common.sql.hooks.sql.dbapihook attribute)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.placeholder"]], "run() (airflow.providers.common.sql.hooks.sql.dbapihook method)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.run"]], "set_autocommit() (airflow.providers.common.sql.hooks.sql.dbapihook method)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.set_autocommit"]], "split_sql_string() (airflow.providers.common.sql.hooks.sql.dbapihook static method)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.split_sql_string"]], "strip_sql_string() (airflow.providers.common.sql.hooks.sql.dbapihook static method)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.strip_sql_string"]], "supports_autocommit (airflow.providers.common.sql.hooks.sql.dbapihook attribute)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.supports_autocommit"]], "test_connection() (airflow.providers.common.sql.hooks.sql.dbapihook method)": [[1, "airflow.providers.common.sql.hooks.sql.DbApiHook.test_connection"]], "airflow.providers.common.sql": [[2, "module-airflow.providers.common.sql"]], "airflow.providers.common.sql.operators": [[3, "module-airflow.providers.common.sql.operators"]], "basesqloperator (class in airflow.providers.common.sql.operators.sql)": [[4, "airflow.providers.common.sql.operators.sql.BaseSQLOperator"]], "branchsqloperator (class in airflow.providers.common.sql.operators.sql)": [[4, "airflow.providers.common.sql.operators.sql.BranchSQLOperator"]], "sqlcheckoperator (class in airflow.providers.common.sql.operators.sql)": [[4, "airflow.providers.common.sql.operators.sql.SQLCheckOperator"]], "sqlcolumncheckoperator (class in airflow.providers.common.sql.operators.sql)": [[4, "airflow.providers.common.sql.operators.sql.SQLColumnCheckOperator"]], "sqlexecutequeryoperator (class in airflow.providers.common.sql.operators.sql)": [[4, "airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator"]], "sqlintervalcheckoperator (class in airflow.providers.common.sql.operators.sql)": [[4, "airflow.providers.common.sql.operators.sql.SQLIntervalCheckOperator"]], "sqltablecheckoperator (class in airflow.providers.common.sql.operators.sql)": [[4, "airflow.providers.common.sql.operators.sql.SQLTableCheckOperator"]], "sqlthresholdcheckoperator (class in airflow.providers.common.sql.operators.sql)": [[4, "airflow.providers.common.sql.operators.sql.SQLThresholdCheckOperator"]], "sqlvaluecheckoperator (class in airflow.providers.common.sql.operators.sql)": [[4, "airflow.providers.common.sql.operators.sql.SQLValueCheckOperator"]], "__mapper_args__ (airflow.providers.common.sql.operators.sql.sqlintervalcheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLIntervalCheckOperator.__mapper_args__"]], "__mapper_args__ (airflow.providers.common.sql.operators.sql.sqlvaluecheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLValueCheckOperator.__mapper_args__"]], "airflow.providers.common.sql.operators.sql": [[4, "module-airflow.providers.common.sql.operators.sql"]], "column_checks (airflow.providers.common.sql.operators.sql.sqlcolumncheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLColumnCheckOperator.column_checks"]], "execute() (airflow.providers.common.sql.operators.sql.branchsqloperator method)": [[4, "airflow.providers.common.sql.operators.sql.BranchSQLOperator.execute"]], "execute() (airflow.providers.common.sql.operators.sql.sqlcheckoperator method)": [[4, "airflow.providers.common.sql.operators.sql.SQLCheckOperator.execute"]], "execute() (airflow.providers.common.sql.operators.sql.sqlcolumncheckoperator method)": [[4, "airflow.providers.common.sql.operators.sql.SQLColumnCheckOperator.execute"]], "execute() (airflow.providers.common.sql.operators.sql.sqlexecutequeryoperator method)": [[4, "airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator.execute"]], "execute() (airflow.providers.common.sql.operators.sql.sqlintervalcheckoperator method)": [[4, "airflow.providers.common.sql.operators.sql.SQLIntervalCheckOperator.execute"]], "execute() (airflow.providers.common.sql.operators.sql.sqltablecheckoperator method)": [[4, "airflow.providers.common.sql.operators.sql.SQLTableCheckOperator.execute"]], "execute() (airflow.providers.common.sql.operators.sql.sqlthresholdcheckoperator method)": [[4, "airflow.providers.common.sql.operators.sql.SQLThresholdCheckOperator.execute"]], "execute() (airflow.providers.common.sql.operators.sql.sqlvaluecheckoperator method)": [[4, "airflow.providers.common.sql.operators.sql.SQLValueCheckOperator.execute"]], "get_db_hook() (airflow.providers.common.sql.operators.sql.basesqloperator method)": [[4, "airflow.providers.common.sql.operators.sql.BaseSQLOperator.get_db_hook"]], "prepare_template() (airflow.providers.common.sql.operators.sql.sqlexecutequeryoperator method)": [[4, "airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator.prepare_template"]], "push() (airflow.providers.common.sql.operators.sql.sqlthresholdcheckoperator method)": [[4, "airflow.providers.common.sql.operators.sql.SQLThresholdCheckOperator.push"]], "ratio_formulas (airflow.providers.common.sql.operators.sql.sqlintervalcheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLIntervalCheckOperator.ratio_formulas"]], "sql_check_template (airflow.providers.common.sql.operators.sql.sqlcolumncheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLColumnCheckOperator.sql_check_template"]], "sql_check_template (airflow.providers.common.sql.operators.sql.sqltablecheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLTableCheckOperator.sql_check_template"]], "template_ext (airflow.providers.common.sql.operators.sql.branchsqloperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.BranchSQLOperator.template_ext"]], "template_ext (airflow.providers.common.sql.operators.sql.sqlcheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLCheckOperator.template_ext"]], "template_ext (airflow.providers.common.sql.operators.sql.sqlexecutequeryoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator.template_ext"]], "template_ext (airflow.providers.common.sql.operators.sql.sqlintervalcheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLIntervalCheckOperator.template_ext"]], "template_ext (airflow.providers.common.sql.operators.sql.sqlthresholdcheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLThresholdCheckOperator.template_ext"]], "template_ext (airflow.providers.common.sql.operators.sql.sqlvaluecheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLValueCheckOperator.template_ext"]], "template_fields (airflow.providers.common.sql.operators.sql.branchsqloperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.BranchSQLOperator.template_fields"]], "template_fields (airflow.providers.common.sql.operators.sql.sqlcheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLCheckOperator.template_fields"]], "template_fields (airflow.providers.common.sql.operators.sql.sqlcolumncheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLColumnCheckOperator.template_fields"]], "template_fields (airflow.providers.common.sql.operators.sql.sqlexecutequeryoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator.template_fields"]], "template_fields (airflow.providers.common.sql.operators.sql.sqlintervalcheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLIntervalCheckOperator.template_fields"]], "template_fields (airflow.providers.common.sql.operators.sql.sqltablecheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLTableCheckOperator.template_fields"]], "template_fields (airflow.providers.common.sql.operators.sql.sqlthresholdcheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLThresholdCheckOperator.template_fields"]], "template_fields (airflow.providers.common.sql.operators.sql.sqlvaluecheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLValueCheckOperator.template_fields"]], "template_fields_renderers (airflow.providers.common.sql.operators.sql.branchsqloperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.BranchSQLOperator.template_fields_renderers"]], "template_fields_renderers (airflow.providers.common.sql.operators.sql.sqlcheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLCheckOperator.template_fields_renderers"]], "template_fields_renderers (airflow.providers.common.sql.operators.sql.sqlexecutequeryoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator.template_fields_renderers"]], "template_fields_renderers (airflow.providers.common.sql.operators.sql.sqlintervalcheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLIntervalCheckOperator.template_fields_renderers"]], "template_fields_renderers (airflow.providers.common.sql.operators.sql.sqlthresholdcheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLThresholdCheckOperator.template_fields_renderers"]], "template_fields_renderers (airflow.providers.common.sql.operators.sql.sqlvaluecheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLValueCheckOperator.template_fields_renderers"]], "ui_color (airflow.providers.common.sql.operators.sql.branchsqloperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.BranchSQLOperator.ui_color"]], "ui_color (airflow.providers.common.sql.operators.sql.sqlcheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLCheckOperator.ui_color"]], "ui_color (airflow.providers.common.sql.operators.sql.sqlexecutequeryoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator.ui_color"]], "ui_color (airflow.providers.common.sql.operators.sql.sqlintervalcheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLIntervalCheckOperator.ui_color"]], "ui_color (airflow.providers.common.sql.operators.sql.sqlvaluecheckoperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.SQLValueCheckOperator.ui_color"]], "ui_fgcolor (airflow.providers.common.sql.operators.sql.branchsqloperator attribute)": [[4, "airflow.providers.common.sql.operators.sql.BranchSQLOperator.ui_fgcolor"]], "airflow.providers.common.sql.sensors": [[5, "module-airflow.providers.common.sql.sensors"]], "sqlsensor (class in airflow.providers.common.sql.sensors.sql)": [[6, "airflow.providers.common.sql.sensors.sql.SqlSensor"]], "airflow.providers.common.sql.sensors.sql": [[6, "module-airflow.providers.common.sql.sensors.sql"]], "poke() (airflow.providers.common.sql.sensors.sql.sqlsensor method)": [[6, "airflow.providers.common.sql.sensors.sql.SqlSensor.poke"]], "template_ext (airflow.providers.common.sql.sensors.sql.sqlsensor attribute)": [[6, "airflow.providers.common.sql.sensors.sql.SqlSensor.template_ext"]], "template_fields (airflow.providers.common.sql.sensors.sql.sqlsensor attribute)": [[6, "airflow.providers.common.sql.sensors.sql.SqlSensor.template_fields"]], "ui_color (airflow.providers.common.sql.sensors.sql.sqlsensor attribute)": [[6, "airflow.providers.common.sql.sensors.sql.SqlSensor.ui_color"]], "airflow_db_metadata_table (in module tests.system.providers.common.sql.example_sql_column_table_check)": [[7, "tests.system.providers.common.sql.example_sql_column_table_check.AIRFLOW_DB_METADATA_TABLE"]], "column_check (in module tests.system.providers.common.sql.example_sql_column_table_check)": [[7, "tests.system.providers.common.sql.example_sql_column_table_check.column_check"]], "connection_args (in module tests.system.providers.common.sql.example_sql_column_table_check)": [[7, "tests.system.providers.common.sql.example_sql_column_table_check.connection_args"]], "test_run (in module tests.system.providers.common.sql.example_sql_column_table_check)": [[7, "tests.system.providers.common.sql.example_sql_column_table_check.test_run"]], "tests.system.providers.common.sql.example_sql_column_table_check": [[7, "module-tests.system.providers.common.sql.example_sql_column_table_check"]], "airflow_db_metadata_table (in module tests.system.providers.common.sql.example_sql_execute_query)": [[8, "tests.system.providers.common.sql.example_sql_execute_query.AIRFLOW_DB_METADATA_TABLE"]], "connection_args (in module tests.system.providers.common.sql.example_sql_execute_query)": [[8, "tests.system.providers.common.sql.example_sql_execute_query.connection_args"]], "execute_query (in module tests.system.providers.common.sql.example_sql_execute_query)": [[8, "tests.system.providers.common.sql.example_sql_execute_query.execute_query"]], "test_run (in module tests.system.providers.common.sql.example_sql_execute_query)": [[8, "tests.system.providers.common.sql.example_sql_execute_query.test_run"]], "tests.system.providers.common.sql.example_sql_execute_query": [[8, "module-tests.system.providers.common.sql.example_sql_execute_query"]], "tests.system.providers.common.sql": [[9, "module-tests.system.providers.common.sql"]]}})