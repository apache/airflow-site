:py:mod:`airflow.providers.daskexecutor.executors.dask_executor`
================================================================

.. py:module:: airflow.providers.daskexecutor.executors.dask_executor

.. autoapi-nested-parse::

   DaskExecutor.

   .. seealso::
       For more information on how the DaskExecutor works, take a look at the guide:
       :ref:`executor:DaskExecutor`



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.daskexecutor.executors.dask_executor.DaskExecutor




.. py:class:: DaskExecutor(cluster_address=None)


   Bases: :py:obj:`airflow.executors.base_executor.BaseExecutor`

   DaskExecutor submits tasks to a Dask Distributed cluster.

   .. py:attribute:: supports_pickling
      :type: bool
      :value: False

      

   .. py:method:: start()

      Executors may need to get things started.


   .. py:method:: execute_async(key, command, queue = None, executor_config = None)

      Execute the command asynchronously.

      :param key: Unique key for the task instance
      :param command: Command to run
      :param queue: name of the queue
      :param executor_config: Configuration passed to the executor.


   .. py:method:: sync()

      Sync will get called periodically by the heartbeat method.

      Executors should override this to perform gather statuses.


   .. py:method:: end()

      Wait synchronously for the previously submitted job to complete.


   .. py:method:: terminate()

      Get called when the daemon receives a SIGTERM.



