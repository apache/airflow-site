:py:mod:`airflow.providers.fab.auth_manager.models`
===================================================

.. py:module:: airflow.providers.fab.auth_manager.models


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   anonymous_user/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.fab.auth_manager.models.Action
   airflow.providers.fab.auth_manager.models.Resource
   airflow.providers.fab.auth_manager.models.Role
   airflow.providers.fab.auth_manager.models.Permission
   airflow.providers.fab.auth_manager.models.User
   airflow.providers.fab.auth_manager.models.RegisterUser



Functions
~~~~~~~~~

.. autoapisummary::

   airflow.providers.fab.auth_manager.models.add_index_on_ab_user_username_postgres
   airflow.providers.fab.auth_manager.models.add_index_on_ab_register_user_username_postgres



Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.fab.auth_manager.models.Identity
   airflow.providers.fab.auth_manager.models.assoc_permission_role
   airflow.providers.fab.auth_manager.models.assoc_user_role


.. py:data:: Identity

   

.. py:class:: Action


   Bases: :py:obj:`flask_appbuilder.models.sqla.Model`

   Represents permission actions such as `can_read`.

   .. py:attribute:: __tablename__
      :value: 'ab_permission'

      

   .. py:attribute:: id

      

   .. py:attribute:: name

      

   .. py:method:: __repr__()

      Return repr(self).



.. py:class:: Resource


   Bases: :py:obj:`flask_appbuilder.models.sqla.Model`

   Represents permission object such as `User` or `Dag`.

   .. py:attribute:: __tablename__
      :value: 'ab_view_menu'

      

   .. py:attribute:: id

      

   .. py:attribute:: name

      

   .. py:method:: __eq__(other)

      Return self==value.


   .. py:method:: __neq__(other)


   .. py:method:: __repr__()

      Return repr(self).



.. py:data:: assoc_permission_role

   

.. py:class:: Role


   Bases: :py:obj:`flask_appbuilder.models.sqla.Model`

   Represents a user role to which permissions can be assigned.

   .. py:attribute:: __tablename__
      :value: 'ab_role'

      

   .. py:attribute:: id

      

   .. py:attribute:: name

      

   .. py:attribute:: permissions

      

   .. py:method:: __repr__()

      Return repr(self).



.. py:class:: Permission


   Bases: :py:obj:`flask_appbuilder.models.sqla.Model`

   Permission pair comprised of an Action + Resource combo.

   .. py:attribute:: __tablename__
      :value: 'ab_permission_view'

      

   .. py:attribute:: __table_args__
      :value: ()

      

   .. py:attribute:: id

      

   .. py:attribute:: action_id

      

   .. py:attribute:: action

      

   .. py:attribute:: resource_id

      

   .. py:attribute:: resource

      

   .. py:method:: __repr__()

      Return repr(self).



.. py:data:: assoc_user_role

   

.. py:class:: User


   Bases: :py:obj:`flask_appbuilder.models.sqla.Model`, :py:obj:`airflow.auth.managers.models.base_user.BaseUser`

   Represents an Airflow user which has roles assigned to it.

   .. py:property:: created_by_fk


   .. py:property:: changed_by_fk


   .. py:property:: is_authenticated


   .. py:property:: is_active


   .. py:property:: is_anonymous


   .. py:property:: perms


   .. py:attribute:: __tablename__
      :value: 'ab_user'

      

   .. py:attribute:: id

      

   .. py:attribute:: first_name

      

   .. py:attribute:: last_name

      

   .. py:attribute:: username

      

   .. py:attribute:: password

      

   .. py:attribute:: active

      

   .. py:attribute:: email

      

   .. py:attribute:: last_login

      

   .. py:attribute:: login_count

      

   .. py:attribute:: fail_login_count

      

   .. py:attribute:: roles

      

   .. py:attribute:: created_on

      

   .. py:attribute:: changed_on

      

   .. py:attribute:: created_by

      

   .. py:attribute:: changed_by

      

   .. py:method:: get_user_id()
      :classmethod:


   .. py:method:: get_id()


   .. py:method:: get_name()


   .. py:method:: get_full_name()


   .. py:method:: __repr__()

      Return repr(self).



.. py:class:: RegisterUser


   Bases: :py:obj:`flask_appbuilder.models.sqla.Model`

   Represents a user registration.

   .. py:attribute:: __tablename__
      :value: 'ab_register_user'

      

   .. py:attribute:: id

      

   .. py:attribute:: first_name

      

   .. py:attribute:: last_name

      

   .. py:attribute:: username

      

   .. py:attribute:: password

      

   .. py:attribute:: email

      

   .. py:attribute:: registration_date

      

   .. py:attribute:: registration_hash

      


.. py:function:: add_index_on_ab_user_username_postgres(table, conn, **kw)


.. py:function:: add_index_on_ab_register_user_username_postgres(table, conn, **kw)


