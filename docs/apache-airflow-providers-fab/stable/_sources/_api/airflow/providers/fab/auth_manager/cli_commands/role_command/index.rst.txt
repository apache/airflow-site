:py:mod:`airflow.providers.fab.auth_manager.cli_commands.role_command`
======================================================================

.. py:module:: airflow.providers.fab.auth_manager.cli_commands.role_command

.. autoapi-nested-parse::

   Roles sub-commands.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   airflow.providers.fab.auth_manager.cli_commands.role_command.roles_list
   airflow.providers.fab.auth_manager.cli_commands.role_command.roles_create
   airflow.providers.fab.auth_manager.cli_commands.role_command.roles_delete
   airflow.providers.fab.auth_manager.cli_commands.role_command.roles_add_perms
   airflow.providers.fab.auth_manager.cli_commands.role_command.roles_del_perms
   airflow.providers.fab.auth_manager.cli_commands.role_command.roles_export
   airflow.providers.fab.auth_manager.cli_commands.role_command.roles_import



.. py:function:: roles_list(args)

   List all existing roles.


.. py:function:: roles_create(args)

   Create new empty role in DB.


.. py:function:: roles_delete(args)

   Delete role in DB.


.. py:function:: roles_add_perms(args)

   Add permissions to role in DB.


.. py:function:: roles_del_perms(args)

   Delete permissions from role in DB.


.. py:function:: roles_export(args)

   Export all the roles from the database to a file including permissions.


.. py:function:: roles_import(args)

   Import all the roles into the db from the given json file including their permissions.

   Note, if a role already exists in the db, it is not overwritten, even when the permissions change.


