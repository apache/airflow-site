:py:mod:`airflow.providers.ftp.sensors.ftp`
===========================================

.. py:module:: airflow.providers.ftp.sensors.ftp


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.ftp.sensors.ftp.FTPSensor
   airflow.providers.ftp.sensors.ftp.FTPSSensor




.. py:class:: FTPSensor(*, path, ftp_conn_id = 'ftp_default', fail_on_transient_errors = True, **kwargs)


   Bases: :py:obj:`airflow.sensors.base.BaseSensorOperator`

   Waits for a file or directory to be present on FTP.

   :param path: Remote file or directory path
   :param fail_on_transient_errors: Fail on all errors,
       including 4xx transient errors. Default True.
   :param ftp_conn_id: The :ref:`ftp connection id <howto/connection:ftp>`
       reference to run the sensor against.

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('path',)

      Errors that are transient in nature, and where action can be retried


   .. py:attribute:: transient_errors
      :value: [421, 425, 426, 434, 450, 451, 452]

      

   .. py:attribute:: error_code_pattern

      

   .. py:method:: poke(context)

      Override when deriving this class.



.. py:class:: FTPSSensor(*, path, ftp_conn_id = 'ftp_default', fail_on_transient_errors = True, **kwargs)


   Bases: :py:obj:`FTPSensor`

   Waits for a file or directory to be present on FTP over SSL.


