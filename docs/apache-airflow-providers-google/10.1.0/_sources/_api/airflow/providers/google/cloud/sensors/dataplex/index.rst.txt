:py:mod:`airflow.providers.google.cloud.sensors.dataplex`
=========================================================

.. py:module:: airflow.providers.google.cloud.sensors.dataplex

.. autoapi-nested-parse::

   This module contains Google Dataplex sensors.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.google.cloud.sensors.dataplex.TaskState
   airflow.providers.google.cloud.sensors.dataplex.DataplexTaskStateSensor




.. py:class:: TaskState

   Dataplex Task states

   .. py:attribute:: STATE_UNSPECIFIED
      :value: 0

      

   .. py:attribute:: ACTIVE
      :value: 1

      

   .. py:attribute:: CREATING
      :value: 2

      

   .. py:attribute:: DELETING
      :value: 3

      

   .. py:attribute:: ACTION_REQUIRED
      :value: 4

      


.. py:class:: DataplexTaskStateSensor(project_id, region, lake_id, dataplex_task_id, api_version = 'v1', retry = DEFAULT, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, *args, **kwargs)

   Bases: :py:obj:`airflow.sensors.base.BaseSensorOperator`

   Check the status of the Dataplex task

   :param project_id: Required. The ID of the Google Cloud project that the task belongs to.
   :param region: Required. The ID of the Google Cloud region that the task belongs to.
   :param lake_id: Required. The ID of the Google Cloud lake that the task belongs to.
   :param dataplex_task_id: Required. Task identifier.
   :param api_version: The version of the api that will be requested for example 'v3'.
   :param retry: A retry object used  to retry requests. If `None` is specified, requests
       will not be retried.
   :param metadata: Additional metadata that is provided to the method.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :value: ['dataplex_task_id']

      

   .. py:method:: poke(context)

      Function defined by the sensors while deriving this class should override.



