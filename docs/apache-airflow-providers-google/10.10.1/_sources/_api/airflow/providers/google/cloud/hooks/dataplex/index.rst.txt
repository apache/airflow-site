:py:mod:`airflow.providers.google.cloud.hooks.dataplex`
=======================================================

.. py:module:: airflow.providers.google.cloud.hooks.dataplex

.. autoapi-nested-parse::

   This module contains Google Dataplex hook.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.google.cloud.hooks.dataplex.DataplexHook
   airflow.providers.google.cloud.hooks.dataplex.DataplexAsyncHook




Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.google.cloud.hooks.dataplex.PATH_DATA_SCAN


.. py:data:: PATH_DATA_SCAN
   :value: 'projects/{project_id}/locations/{region}/dataScans/{data_scan_id}'

   

.. py:exception:: AirflowDataQualityScanException


   Bases: :py:obj:`airflow.exceptions.AirflowException`

   Raised when data quality scan rules fail.


.. py:exception:: AirflowDataQualityScanResultTimeoutException


   Bases: :py:obj:`airflow.exceptions.AirflowException`

   Raised when no result found after specified amount of seconds.


.. py:class:: DataplexHook(api_version = 'v1', gcp_conn_id = 'google_cloud_default', impersonation_chain = None, location = None, **kwargs)


   Bases: :py:obj:`airflow.providers.google.common.hooks.base_google.GoogleBaseHook`

   Hook for Google Dataplex.

   :param api_version: The version of the api that will be requested for example 'v3'.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:method:: get_dataplex_client()

      Returns DataplexServiceClient.


   .. py:method:: get_dataplex_data_scan_client()

      Returns DataScanServiceClient.


   .. py:method:: wait_for_operation(timeout, operation)

      Waits for long-lasting operation to complete.


   .. py:method:: create_task(project_id, region, lake_id, body, dataplex_task_id, validate_only = None, retry = DEFAULT, timeout = None, metadata = ())

      Creates a task resource within a lake.

      :param project_id: Required. The ID of the Google Cloud project that the task belongs to.
      :param region: Required. The ID of the Google Cloud region that the task belongs to.
      :param lake_id: Required. The ID of the Google Cloud lake that the task belongs to.
      :param body: Required. The Request body contains an instance of Task.
      :param dataplex_task_id: Required. Task identifier.
      :param validate_only: Optional. Only validate the request, but do not perform mutations.
          The default is false.
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.


   .. py:method:: delete_task(project_id, region, lake_id, dataplex_task_id, retry = DEFAULT, timeout = None, metadata = ())

      Delete the task resource.

      :param project_id: Required. The ID of the Google Cloud project that the task belongs to.
      :param region: Required. The ID of the Google Cloud region that the task belongs to.
      :param lake_id: Required. The ID of the Google Cloud lake that the task belongs to.
      :param dataplex_task_id: Required. The ID of the Google Cloud task to be deleted.
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.


   .. py:method:: list_tasks(project_id, region, lake_id, page_size = None, page_token = None, filter = None, order_by = None, retry = DEFAULT, timeout = None, metadata = ())

      Lists tasks under the given lake.

      :param project_id: Required. The ID of the Google Cloud project that the task belongs to.
      :param region: Required. The ID of the Google Cloud region that the task belongs to.
      :param lake_id: Required. The ID of the Google Cloud lake that the task belongs to.
      :param page_size: Optional. Maximum number of tasks to return. The service may return fewer than this
          value. If unspecified, at most 10 tasks will be returned. The maximum value is 1000;
          values above 1000 will be coerced to 1000.
      :param page_token: Optional. Page token received from a previous ListZones call. Provide this to
          retrieve the subsequent page. When paginating, all other parameters provided to ListZones must
          match the call that provided the page token.
      :param filter: Optional. Filter request.
      :param order_by: Optional. Order by fields for the result.
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.


   .. py:method:: get_task(project_id, region, lake_id, dataplex_task_id, retry = DEFAULT, timeout = None, metadata = ())

      Get task resource.

      :param project_id: Required. The ID of the Google Cloud project that the task belongs to.
      :param region: Required. The ID of the Google Cloud region that the task belongs to.
      :param lake_id: Required. The ID of the Google Cloud lake that the task belongs to.
      :param dataplex_task_id: Required. The ID of the Google Cloud task to be retrieved.
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.


   .. py:method:: delete_lake(project_id, region, lake_id, retry = DEFAULT, timeout = None, metadata = ())

       Delete the lake resource.

      :param project_id: Required. The ID of the Google Cloud project that the lake belongs to.
      :param region: Required. The ID of the Google Cloud region that the lake belongs to.
      :param lake_id: Required. The ID of the Google Cloud lake to be deleted.
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.


   .. py:method:: create_lake(project_id, region, lake_id, body, validate_only = None, retry = DEFAULT, timeout = None, metadata = ())

      Creates a lake resource.

      :param project_id: Required. The ID of the Google Cloud project that the lake belongs to.
      :param region: Required. The ID of the Google Cloud region that the lake belongs to.
      :param lake_id: Required. Lake identifier.
      :param body: Required. The Request body contains an instance of Lake.
      :param validate_only: Optional. Only validate the request, but do not perform mutations.
          The default is false.
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.


   .. py:method:: get_lake(project_id, region, lake_id, retry = DEFAULT, timeout = None, metadata = ())

      Get lake resource.

      :param project_id: Required. The ID of the Google Cloud project that the lake belongs to.
      :param region: Required. The ID of the Google Cloud region that the lake belongs to.
      :param lake_id: Required. The ID of the Google Cloud lake to be retrieved.
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.


   .. py:method:: create_zone(project_id, region, lake_id, zone_id, body, retry = DEFAULT, timeout = None, metadata = ())

      Creates a zone resource within a lake.

      :param project_id: Required. The ID of the Google Cloud project that the lake belongs to.
      :param region: Required. The ID of the Google Cloud region that the lake belongs to.
      :param lake_id: Required. The ID of the Google Cloud lake to be retrieved.
      :param body: Required. The Request body contains an instance of Zone.
      :param zone_id: Required. Zone identifier.
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.


   .. py:method:: delete_zone(project_id, region, lake_id, zone_id, retry = DEFAULT, timeout = None, metadata = ())

      Deletes a zone resource. All assets within a zone must be deleted before the zone can be deleted.

      :param project_id: Required. The ID of the Google Cloud project that the lake belongs to.
      :param region: Required. The ID of the Google Cloud region that the lake belongs to.
      :param lake_id: Required. The ID of the Google Cloud lake to be retrieved.
      :param zone_id: Required. Zone identifier.
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.


   .. py:method:: create_asset(project_id, region, lake_id, zone_id, asset_id, body, retry = DEFAULT, timeout = None, metadata = ())

      Creates an asset resource.

      :param project_id: Required. The ID of the Google Cloud project that the lake belongs to.
      :param region: Required. The ID of the Google Cloud region that the lake belongs to.
      :param lake_id: Required. The ID of the Google Cloud lake to be retrieved.
      :param zone_id: Required. Zone identifier.
      :param asset_id: Required. Asset identifier.
      :param body: Required. The Request body contains an instance of Asset.
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.


   .. py:method:: delete_asset(project_id, region, lake_id, asset_id, zone_id, retry = DEFAULT, timeout = None, metadata = ())

      Deletes an asset resource.

      :param project_id: Required. The ID of the Google Cloud project that the lake belongs to.
      :param region: Required. The ID of the Google Cloud region that the lake belongs to.
      :param lake_id: Required. The ID of the Google Cloud lake to be retrieved.
      :param zone_id: Required. Zone identifier.
      :param asset_id: Required. Asset identifier.
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.


   .. py:method:: create_data_scan(project_id, region, body, data_scan_id = None, retry = DEFAULT, timeout = None, metadata = ())

      Creates a DataScan resource.

      :param project_id: Required. The ID of the Google Cloud project that the lake belongs to.
      :param region: Required. The ID of the Google Cloud region that the lake belongs to.
      :param data_scan_id: Required. Data Quality scan identifier.
      :param body: Required. The Request body contains an instance of DataScan.
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.


   .. py:method:: run_data_scan(project_id, region, data_scan_id, retry = DEFAULT, timeout = None, metadata = ())

      Runs an on-demand execution of a DataScan.

      :param project_id: Required. The ID of the Google Cloud project that the lake belongs to.
      :param region: Required. The ID of the Google Cloud region that the lake belongs to.
      :param data_scan_id: Required. Data Quality scan identifier.
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.


   .. py:method:: get_data_scan_job(project_id, region, data_scan_id = None, job_id = None, retry = DEFAULT, timeout = None, metadata = ())

      Gets a DataScan Job resource.

      :param project_id: Required. The ID of the Google Cloud project that the lake belongs to.
      :param region: Required. The ID of the Google Cloud region that the lake belongs to.
      :param data_scan_id: Required. Data Quality scan identifier.
      :param job_id: Required. The resource name of the DataScanJob:
          projects/{project_id}/locations/{region}/dataScans/{data_scan_id}/jobs/{data_scan_job_id}
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.


   .. py:method:: wait_for_data_scan_job(data_scan_id, job_id = None, project_id = None, region = None, wait_time = 10, result_timeout = None)

      Wait for Dataplex data scan job.

      :param job_id: Required. The job_id to wait for.
      :param data_scan_id: Required. Data Quality scan identifier.
      :param region: Required. The ID of the Google Cloud region that the lake belongs to.
      :param project_id: Optional. Google Cloud project ID.
      :param wait_time: Number of seconds between checks.
      :param result_timeout: Value in seconds for which operator will wait for the Data Quality scan result.
          Throws exception if there is no result found after specified amount of seconds.


   .. py:method:: get_data_scan(project_id, region, data_scan_id, retry = DEFAULT, timeout = None, metadata = ())

      Gets a DataScan resource.

      :param project_id: Required. The ID of the Google Cloud project that the lake belongs to.
      :param region: Required. The ID of the Google Cloud region that the lake belongs to.
      :param data_scan_id: Required. Data Quality scan identifier.
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.


   .. py:method:: update_data_scan(project_id, region, data_scan_id, body, update_mask = None, retry = DEFAULT, timeout = None, metadata = ())

      Updates a DataScan resource.

      :param project_id: Required. The ID of the Google Cloud project that the lake belongs to.
      :param region: Required. The ID of the Google Cloud region that the lake belongs to.
      :param data_scan_id: Required. Data Quality scan identifier.
      :param body: Required. The Request body contains an instance of DataScan.
      :param update_mask: Required. Mask of fields to update.
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.


   .. py:method:: delete_data_scan(project_id, region, data_scan_id, retry = DEFAULT, timeout = None, metadata = ())

      Deletes a DataScan resource.

      :param project_id: Required. The ID of the Google Cloud project that the lake belongs to.
      :param region: Required. The ID of the Google Cloud region that the lake belongs to.
      :param data_scan_id: Required. Data Quality scan identifier.
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.


   .. py:method:: list_data_scan_jobs(project_id, region, data_scan_id, retry = DEFAULT, timeout = None, metadata = ())

      Lists DataScanJobs under the given DataScan.

      :param project_id: Required. The ID of the Google Cloud project that the lake belongs to.
      :param region: Required. The ID of the Google Cloud region that the lake belongs to.
      :param data_scan_id: Required. Data Quality scan identifier.
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.



.. py:class:: DataplexAsyncHook(gcp_conn_id = 'google_cloud_default', impersonation_chain = None, **kwargs)


   Bases: :py:obj:`airflow.providers.google.common.hooks.base_google.GoogleBaseAsyncHook`

   Asynchronous Hook for Google Cloud Dataplex APIs.

   All the methods in the hook where project_id is used must be called with
   keyword arguments rather than positional.

   .. py:attribute:: sync_hook_class

      

   .. py:method:: get_dataplex_data_scan_client()
      :async:

      Returns DataScanServiceAsyncClient.


   .. py:method:: get_data_scan_job(project_id, region, data_scan_id = None, job_id = None, retry = DEFAULT, timeout = None, metadata = ())
      :async:

      Gets a DataScan Job resource.

      :param project_id: Required. The ID of the Google Cloud project that the lake belongs to.
      :param region: Required. The ID of the Google Cloud region that the lake belongs to.
      :param data_scan_id: Required. DataScan identifier.
      :param job_id: Required. The resource name of the DataScanJob:
          projects/{project_id}/locations/{region}/dataScans/{data_scan_id}/jobs/{data_scan_job_id}
      :param retry: A retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :param timeout: The amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :param metadata: Additional metadata that is provided to the method.



