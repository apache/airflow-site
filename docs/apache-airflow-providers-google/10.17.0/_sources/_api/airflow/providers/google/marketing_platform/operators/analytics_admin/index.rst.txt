:py:mod:`airflow.providers.google.marketing_platform.operators.analytics_admin`
===============================================================================

.. py:module:: airflow.providers.google.marketing_platform.operators.analytics_admin

.. autoapi-nested-parse::

   This module contains Google Analytics 4 (GA4) operators.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.google.marketing_platform.operators.analytics_admin.GoogleAnalyticsAdminListAccountsOperator
   airflow.providers.google.marketing_platform.operators.analytics_admin.GoogleAnalyticsAdminCreatePropertyOperator
   airflow.providers.google.marketing_platform.operators.analytics_admin.GoogleAnalyticsAdminDeletePropertyOperator
   airflow.providers.google.marketing_platform.operators.analytics_admin.GoogleAnalyticsAdminCreateDataStreamOperator
   airflow.providers.google.marketing_platform.operators.analytics_admin.GoogleAnalyticsAdminDeleteDataStreamOperator
   airflow.providers.google.marketing_platform.operators.analytics_admin.GoogleAnalyticsAdminListGoogleAdsLinksOperator
   airflow.providers.google.marketing_platform.operators.analytics_admin.GoogleAnalyticsAdminGetGoogleAdsLinkOperator




.. py:class:: GoogleAnalyticsAdminListAccountsOperator(*, page_size = None, page_token = None, show_deleted = None, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Lists all accounts to which the user has access.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GoogleAnalyticsAdminListAccountsOperator`

   :param page_size: Optional, number of results to return in the list.
   :param page_token: Optional. The next_page_token value returned from a previous List request, if any.
   :param show_deleted: Optional. Whether to include soft-deleted (ie: "trashed") Accounts in the results.
   :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
           will not be retried.
   :param timeout: Optional. The timeout for this request.
   :param metadata: Optional. Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional. Service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('gcp_conn_id', 'impersonation_chain', 'page_size', 'page_token')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: GoogleAnalyticsAdminCreatePropertyOperator(*, analytics_property, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Creates property.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GoogleAnalyticsAdminCreatePropertyOperator`

   :param analytics_property: The property to create. Note: the supplied property must specify its parent.
       For more details see: https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1beta/properties#Property
   :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
       will not be retried.
   :param timeout: Optional. The timeout for this request.
   :param metadata: Optional. Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional. Service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('gcp_conn_id', 'impersonation_chain', 'analytics_property')

      

   .. py:attribute:: operator_extra_links
      :value: ()

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: GoogleAnalyticsAdminDeletePropertyOperator(*, property_id, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Soft-delete property.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GoogleAnalyticsAdminDeletePropertyOperator`

   :param property_id: The id of the Property to soft-delete.
   :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
       will not be retried.
   :param timeout: Optional. The timeout for this request.
   :param metadata: Optional. Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional. Service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('gcp_conn_id', 'impersonation_chain', 'property_id')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: GoogleAnalyticsAdminCreateDataStreamOperator(*, property_id, data_stream, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Creates Data stream.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GoogleAnalyticsAdminCreateDataStreamOperator`

   :param property_id: ID of the parent property for the data stream.
   :param data_stream: The data stream to create.
       For more details see: https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1beta/properties.dataStreams#DataStream
   :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
       will not be retried.
   :param timeout: Optional. The timeout for this request.
   :param metadata: Optional. Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional. Service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('gcp_conn_id', 'impersonation_chain', 'property_id', 'data_stream')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: GoogleAnalyticsAdminDeleteDataStreamOperator(*, property_id, data_stream_id, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Deletes Data stream.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GoogleAnalyticsAdminDeleteDataStreamOperator`

   :param property_id: ID of the property which is parent for the data stream.
   :param data_stream_id: ID of the data stream to delete.
   :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
       will not be retried.
   :param timeout: Optional. The timeout for this request.
   :param metadata: Optional. Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional. Service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('gcp_conn_id', 'impersonation_chain', 'property_id', 'data_stream_id')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: GoogleAnalyticsAdminListGoogleAdsLinksOperator(*, property_id, page_size = None, page_token = None, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Lists all Google Ads links associated with a given property.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GoogleAnalyticsAdminListGoogleAdsLinksOperator`

   :param property_id: ID of the parent property.
   :param page_size: Optional, number of results to return in the list.
   :param page_token: Optional. The next_page_token value returned from a previous List request, if any.
   :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
       will not be retried.
   :param timeout: Optional. The timeout for this request.
   :param metadata: Optional. Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional. Service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('gcp_conn_id', 'impersonation_chain', 'property_id', 'page_size', 'page_token')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: GoogleAnalyticsAdminGetGoogleAdsLinkOperator(*, property_id, google_ads_link_id, retry = DEFAULT, timeout = None, metadata = (), gcp_conn_id = 'google_cloud_default', impersonation_chain = None, **kwargs)


   Bases: :py:obj:`airflow.providers.google.cloud.operators.cloud_base.GoogleCloudBaseOperator`

   Gets a Google Ads link associated with a given property.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GoogleAnalyticsAdminGetGoogleAdsLinkOperator`

   :param property_id: Parent property id.
   :param google_ads_link_id: Google Ads link id.
   :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
       will not be retried.
   :param timeout: Optional. The timeout for this request.
   :param metadata: Optional. Strings which should be sent along with the request as metadata.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param impersonation_chain: Optional. Service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account (templated).

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('gcp_conn_id', 'impersonation_chain', 'google_ads_link_id')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



