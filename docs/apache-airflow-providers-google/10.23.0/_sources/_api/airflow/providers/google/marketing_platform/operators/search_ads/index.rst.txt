:py:mod:`airflow.providers.google.marketing_platform.operators.search_ads`
==========================================================================

.. py:module:: airflow.providers.google.marketing_platform.operators.search_ads

.. autoapi-nested-parse::

   This module contains Google Search Ads operators.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.google.marketing_platform.operators.search_ads.GoogleSearchAdsSearchOperator
   airflow.providers.google.marketing_platform.operators.search_ads.GoogleSearchAdsGetFieldOperator
   airflow.providers.google.marketing_platform.operators.search_ads.GoogleSearchAdsSearchFieldsOperator
   airflow.providers.google.marketing_platform.operators.search_ads.GoogleSearchAdsGetCustomColumnOperator
   airflow.providers.google.marketing_platform.operators.search_ads.GoogleSearchAdsListCustomColumnsOperator




.. py:class:: GoogleSearchAdsSearchOperator(*, customer_id, query, page_token = None, page_size = 10000, return_total_results_count = False, summary_row_setting = None, validate_only = False, **kwargs)


   Bases: :py:obj:`_GoogleSearchAdsBaseOperator`

   Search a report by query.

   .. seealso:
       For API documentation check:
       https://developers.google.com/search-ads/reporting/api/reference/rest/v0/customers.searchAds360/search

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GoogleSearchAdsSearchOperator`

   :param customer_id: The ID of the customer being queried.
   :param query: The query to execute.
   :param page_token: Token of the page to retrieve. If not specified, the first page of results will be
       returned. Use the value obtained from `next_page_token` in the previous response
       in order to request the next page of results.
   :param page_size: Number of elements to retrieve in a single page. When too large a page is requested,
       the server may decide to further limit the number of returned resources.
       Default is 10000.
   :param return_total_results_count: If true, the total number of results that match the query ignoring
       the LIMIT clause will be included in the response. Default is false.
   :param summary_row_setting: Determines whether a summary row will be returned. By default,
       summary row is not returned. If requested, the summary row will be sent
       in a response by itself after all others query results are returned.
   :param validate_only: If true, the request is validated but not executed. Default is false.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param api_version: The version of the API that will be requested for example 'v0'.

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ()

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: GoogleSearchAdsGetFieldOperator(*, field_name, **kwargs)


   Bases: :py:obj:`_GoogleSearchAdsBaseOperator`

   Retrieve metadata for a resource or a field.

   .. seealso:
       For API documentation check:
       https://developers.google.com/search-ads/reporting/api/reference/rest/v0/searchAds360Fields/get

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GoogleSearchAdsGetFieldOperator`

   :param field_name: The name of the field.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param api_version: The version of the API that will be requested for example 'v0'.

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: GoogleSearchAdsSearchFieldsOperator(*, query, page_token = None, page_size = 10000, **kwargs)


   Bases: :py:obj:`_GoogleSearchAdsBaseOperator`

   Retrieve metadata for resource(s) or field(s) by the query syntax.

   .. seealso:
       For API documentation check:
       https://developers.google.com/search-ads/reporting/api/reference/rest/v0/searchAds360Fields/search

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GoogleSearchAdsSearchFieldsOperator`

   :param query: The query string to execute.
   :param page_token: Token of the page to retrieve. If not specified, the first page of results will be
       returned. Use the value obtained from `next_page_token` in the previous response
       in order to request the next page of results.
   :param page_size: Number of elements to retrieve in a single page. When too large a page is requested,
       the server may decide to further limit the number of returned resources.
       Default 10000.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param api_version: The version of the API that will be requested for example 'v0'.

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ()

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: GoogleSearchAdsGetCustomColumnOperator(*, customer_id, custom_column_id, **kwargs)


   Bases: :py:obj:`_GoogleSearchAdsBaseOperator`

   Retrieve details of a custom column for the given customer_id and campaign_id.

   .. seealso:
       For API documentation check:
       https://developers.google.com/search-ads/reporting/api/reference/rest/v0/customers.customColumns/get

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GoogleSearchAdsGetCustomColumnOperator`

   :param customer_id: The customer ID for the custom column.
   :param custom_column_id: The ID for the custom column.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param api_version: The version of the API that will be requested for example 'v0'.

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



.. py:class:: GoogleSearchAdsListCustomColumnsOperator(*, customer_id, **kwargs)


   Bases: :py:obj:`_GoogleSearchAdsBaseOperator`

   List all custom columns.

   .. seealso:
       For API documentation check:
       https://developers.google.com/search-ads/reporting/api/reference/rest/v0/customers.customColumns/list

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:GoogleSearchAdsListCustomColumnsOperator`

   :param customer_id: The customer ID for the custom column.
   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :param api_version: The version of the API that will be requested for example 'v0'.

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



