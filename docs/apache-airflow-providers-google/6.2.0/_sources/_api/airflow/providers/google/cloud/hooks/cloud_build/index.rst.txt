:mod:`airflow.providers.google.cloud.hooks.cloud_build`
=======================================================

.. py:module:: airflow.providers.google.cloud.hooks.cloud_build

.. autoapi-nested-parse::

   Hook for Google Cloud Build service.



Module Contents
---------------

.. data:: TIME_TO_SLEEP_IN_SECONDS
   :annotation: = 5

   

.. py:class:: CloudBuildHook(gcp_conn_id: str = 'google_cloud_default', delegate_to: Optional[str] = None, impersonation_chain: Optional[Union[str, Sequence[str]]] = None)

   Bases: :class:`airflow.providers.google.common.hooks.base_google.GoogleBaseHook`

   Hook for the Google Cloud Build Service.

   :param gcp_conn_id: The connection ID to use when fetching connection info.
   :type gcp_conn_id: str
   :param delegate_to: The account to impersonate using domain-wide delegation of authority,
       if any. For this to work, the service account making the request must have
       domain-wide delegation enabled.
   :type delegate_to: str
   :param impersonation_chain: Optional service account to impersonate using short-term
       credentials, or chained list of accounts required to get the access_token
       of the last account in the list, which will be impersonated in the request.
       If set as a string, the account must grant the originating account
       the Service Account Token Creator IAM role.
       If set as a sequence, the identities from the list must grant
       Service Account Token Creator IAM role to the directly preceding identity, with first
       account from the list granting this role to the originating account.
   :type impersonation_chain: Union[str, Sequence[str]]

   
   .. method:: get_conn(self)

      Retrieves the connection to Google Cloud Build.

      :return: Google Cloud Build client object.
      :rtype: `google.cloud.devtools.cloudbuild_v1.CloudBuildClient`



   
   .. method:: cancel_build(self, id_: str, project_id: str, retry: Optional[Retry] = None, timeout: Optional[float] = None, metadata: Optional[Sequence[Tuple[str, str]]] = None)

      Cancels a build in progress.

      :param id_: The ID of the build.
      :type id_: str
      :param project_id: Optional, Google Cloud Project project_id where the function belongs.
          If set to None or missing, the default project_id from the GCP connection is used.
      :type project_id: Optional[str]
      :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :type retry: Optional[Retry]
      :param timeout: Optional, the amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :type timeout: Optional[float]
      :param metadata: Optional, additional metadata that is provided to the method.
      :type metadata: Optional[Sequence[Tuple[str, str]]]

      :rtype: `google.cloud.devtools.cloudbuild_v1.types.Build`



   
   .. method:: create_build(self, build: Union[Dict, Build], project_id: str, wait: bool = True, retry: Optional[Retry] = None, timeout: Optional[float] = None, metadata: Optional[Sequence[Tuple[str, str]]] = None)

      Starts a build with the specified configuration.

      :param build: The build resource to create. If a dict is provided, it must be of the same form
          as the protobuf message `google.cloud.devtools.cloudbuild_v1.types.Build`
      :type build: Union[dict, `google.cloud.devtools.cloudbuild_v1.types.Build`]
      :param project_id: Optional, Google Cloud Project project_id where the function belongs.
          If set to None or missing, the default project_id from the GCP connection is used.
      :type project_id: Optional[str]
      :param wait: Optional, wait for operation to finish.
      :type wait: Optional[bool]
      :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :type retry: Optional[Retry]
      :param timeout: Optional, the amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :type timeout: Optional[float]
      :param metadata: Optional, additional metadata that is provided to the method.
      :type metadata: Optional[Sequence[Tuple[str, str]]]

      :rtype: `google.cloud.devtools.cloudbuild_v1.types.Build`



   
   .. method:: create_build_trigger(self, trigger: Union[dict, BuildTrigger], project_id: str, retry: Optional[Retry] = None, timeout: Optional[float] = None, metadata: Optional[Sequence[Tuple[str, str]]] = None)

      Creates a new BuildTrigger.

      :param trigger: The BuildTrigger to create. If a dict is provided, it must be of the same form
          as the protobuf message `google.cloud.devtools.cloudbuild_v1.types.BuildTrigger`
      :type trigger: Union[dict, `google.cloud.devtools.cloudbuild_v1.types.BuildTrigger`]
      :param project_id: Optional, Google Cloud Project project_id where the function belongs.
          If set to None or missing, the default project_id from the GCP connection is used.
      :type project_id: Optional[str]
      :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :type retry: Optional[Retry]
      :param timeout: Optional, the amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :type timeout: Optional[float]
      :param metadata: Optional, additional metadata that is provided to the method.
      :type metadata: Optional[Sequence[Tuple[str, str]]]

      :rtype: `google.cloud.devtools.cloudbuild_v1.types.BuildTrigger`



   
   .. method:: delete_build_trigger(self, trigger_id: str, project_id: str, retry: Optional[Retry] = None, timeout: Optional[float] = None, metadata: Optional[Sequence[Tuple[str, str]]] = None)

      Deletes a BuildTrigger by its project ID and trigger ID.

      :param trigger_id: The ID of the BuildTrigger to delete.
      :type trigger_id: str
      :param project_id: Optional, Google Cloud Project project_id where the function belongs.
          If set to None or missing, the default project_id from the GCP connection is used.
      :type project_id: Optional[str]
      :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :type retry: Optional[Retry]
      :param timeout: Optional, the amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :type timeout: Optional[float]
      :param metadata: Optional, additional metadata that is provided to the method.
      :type metadata: Optional[Sequence[Tuple[str, str]]]



   
   .. method:: get_build(self, id_: str, project_id: str, retry: Optional[Retry] = None, timeout: Optional[float] = None, metadata: Optional[Sequence[Tuple[str, str]]] = None)

      Returns information about a previously requested build.

      :param id_: The ID of the build.
      :type id_: str
      :param project_id: Optional, Google Cloud Project project_id where the function belongs.
          If set to None or missing, the default project_id from the GCP connection is used.
      :type project_id: Optional[str]
      :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :type retry: Optional[Retry]
      :param timeout: Optional, the amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :type timeout: Optional[float]
      :param metadata: Optional, additional metadata that is provided to the method.
      :type metadata: Optional[Sequence[Tuple[str, str]]]

      :rtype: `google.cloud.devtools.cloudbuild_v1.types.Build`



   
   .. method:: get_build_trigger(self, trigger_id: str, project_id: str, retry: Optional[Retry] = None, timeout: Optional[float] = None, metadata: Optional[Sequence[Tuple[str, str]]] = None)

      Returns information about a BuildTrigger.

      :param trigger_id: The ID of the BuildTrigger to get.
      :type trigger_id: str
      :param project_id: Optional, Google Cloud Project project_id where the function belongs.
          If set to None or missing, the default project_id from the GCP connection is used.
      :type project_id: Optional[str]
      :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :type retry: Optional[Retry]
      :param timeout: Optional, the amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :type timeout: Optional[float]
      :param metadata: Optional, additional metadata that is provided to the method.
      :type metadata: Optional[Sequence[Tuple[str, str]]]

      :rtype: `google.cloud.devtools.cloudbuild_v1.types.BuildTrigger`



   
   .. method:: list_build_triggers(self, project_id: str, location: str, page_size: Optional[int] = None, page_token: Optional[str] = None, retry: Optional[Retry] = None, timeout: Optional[float] = None, metadata: Optional[Sequence[Tuple[str, str]]] = None)

      Lists existing BuildTriggers.

      :param project_id: Google Cloud Project project_id where the function belongs.
          If set to None or missing, the default project_id from the GCP connection is used.
      :type project_id: str
      :param location: The location of the project.
      :type location: string
      :param page_size: Optional, number of results to return in the list.
      :type page_size: Optional[int]
      :param page_token: Optional, token to provide to skip to a particular spot in the list.
      :type page_token: Optional[str]
      :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :type retry: Optional[Retry]
      :param timeout: Optional, the amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :type timeout: Optional[float]
      :param metadata: Optional, additional metadata that is provided to the method.
      :type metadata: Optional[Sequence[Tuple[str, str]]]

      :rtype: `google.cloud.devtools.cloudbuild_v1.types.BuildTrigger`



   
   .. method:: list_builds(self, project_id: str, location: str, page_size: Optional[int] = None, page_token: Optional[int] = None, filter_: Optional[str] = None, retry: Optional[Retry] = None, timeout: Optional[float] = None, metadata: Optional[Sequence[Tuple[str, str]]] = None)

      Lists previously requested builds.

      :param project_id: Google Cloud Project project_id where the function belongs.
          If set to None or missing, the default project_id from the Google Cloud connection is used.
      :type project_id: str
      :param location: The location of the project.
      :type location: string
      :param page_size: Optional, number of results to return in the list.
      :type page_size: Optional[int]
      :param page_token: Optional, token to provide to skip to a particular spot in the list.
      :type page_token: Optional[str]
      :param filter_: Optional, the raw filter text to constrain the results.
      :type filter_: Optional[str]
      :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :type retry: Optional[Retry]
      :param timeout: Optional, the amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :type timeout: Optional[float]
      :param metadata: Optional, additional metadata that is provided to the method.
      :type metadata: Optional[Sequence[Tuple[str, str]]]

      :rtype: List[`google.cloud.devtools.cloudbuild_v1.types.Build`]



   
   .. method:: retry_build(self, id_: str, project_id: str, wait: bool = True, retry: Optional[Retry] = None, timeout: Optional[float] = None, metadata: Optional[Sequence[Tuple[str, str]]] = None)

      Creates a new build based on the specified build. This method creates a new build
      using the original build request, which may or may not result in an identical build.

      :param id_: Build ID of the original build.
      :type id_: str
      :param project_id: Optional, Google Cloud Project project_id where the function belongs.
          If set to None or missing, the default project_id from the GCP connection is used.
      :type project_id: str
      :param wait: Optional, wait for operation to finish.
      :type wait: Optional[bool]
      :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :type retry: Optional[Retry]
      :param timeout: Optional, the amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :type timeout: Optional[float]
      :param metadata: Optional, additional metadata that is provided to the method.
      :type metadata: Optional[Sequence[Tuple[str, str]]]

      :rtype: `google.cloud.devtools.cloudbuild_v1.types.Build`



   
   .. method:: run_build_trigger(self, trigger_id: str, source: Union[dict, RepoSource], project_id: str, wait: bool = True, retry: Optional[Retry] = None, timeout: Optional[float] = None, metadata: Optional[Sequence[Tuple[str, str]]] = None)

      Runs a BuildTrigger at a particular source revision.

      :param trigger_id: The ID of the trigger.
      :type trigger_id: str
      :param source: Source to build against this trigger. If a dict is provided, it must be of the
          same form as the protobuf message `google.cloud.devtools.cloudbuild_v1.types.RepoSource`
      :type source: Union[dict, `google.cloud.devtools.cloudbuild_v1.types.RepoSource`]
      :param project_id: Optional, Google Cloud Project project_id where the function belongs.
          If set to None or missing, the default project_id from the GCP connection is used.
      :type project_id: str
      :param wait: Optional, wait for operation to finish.
      :type wait: Optional[bool]
      :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :type retry: Optional[Retry]
      :param timeout: Optional, the amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :type timeout: Optional[float]
      :param metadata: Optional, additional metadata that is provided to the method.
      :type metadata: Optional[Sequence[Tuple[str, str]]]

      :rtype: `google.cloud.devtools.cloudbuild_v1.types.Build`



   
   .. method:: update_build_trigger(self, trigger_id: str, trigger: Union[dict, BuildTrigger], project_id: str, retry: Optional[Retry] = None, timeout: Optional[float] = None, metadata: Optional[Sequence[Tuple[str, str]]] = None)

      Updates a BuildTrigger by its project ID and trigger ID.

      :param trigger_id: The ID of the trigger.
      :type trigger_id: str
      :param trigger: The BuildTrigger to create. If a dict is provided, it must be of the same form
          as the protobuf message `google.cloud.devtools.cloudbuild_v1.types.BuildTrigger`
      :type trigger: Union[dict, `google.cloud.devtools.cloudbuild_v1.types.BuildTrigger`]
      :param project_id: Optional, Google Cloud Project project_id where the function belongs.
          If set to None or missing, the default project_id from the GCP connection is used.
      :type project_id: Optional[str]
      :param retry: Optional, a retry object used  to retry requests. If `None` is specified, requests
          will not be retried.
      :type retry: Optional[Retry]
      :param timeout: Optional, the amount of time, in seconds, to wait for the request to complete.
          Note that if `retry` is specified, the timeout applies to each individual attempt.
      :type timeout: Optional[float]
      :param metadata: Optional, additional metadata that is provided to the method.
      :type metadata: Optional[Sequence[Tuple[str, str]]]

      :rtype: `google.cloud.devtools.cloudbuild_v1.types.BuildTrigger`




