:py:mod:`airflow.providers.google.cloud.hooks.dataproc_metastore`
=================================================================

.. py:module:: airflow.providers.google.cloud.hooks.dataproc_metastore

.. autoapi-nested-parse::

   This module contains a Google Cloud Dataproc Metastore hook.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.google.cloud.hooks.dataproc_metastore.DataprocMetastoreHook




.. py:class:: DataprocMetastoreHook(gcp_conn_id: str = 'google_cloud_default', delegate_to: Optional[str] = None, impersonation_chain: Optional[Union[str, Sequence[str]]] = None)

   Bases: :py:obj:`airflow.providers.google.common.hooks.base_google.GoogleBaseHook`

   Hook for Google Cloud Dataproc Metastore APIs.

   .. py:method:: get_dataproc_metastore_client(self) -> google.cloud.metastore_v1.DataprocMetastoreClient

      Returns DataprocMetastoreClient.


   .. py:method:: wait_for_operation(self, timeout: Optional[float], operation: google.api_core.operation.Operation)

      Waits for long-lasting operation to complete.


   .. py:method:: create_backup(self, project_id: str, region: str, service_id: str, backup: Union[Dict[Any, Any], google.cloud.metastore_v1.types.Backup], backup_id: str, request_id: Optional[str] = None, retry: Optional[google.api_core.retry.Retry] = None, timeout: Optional[float] = None, metadata: Sequence[Tuple[str, str]] = ())

      Creates a new backup in a given project and location.

      :param project_id: Required. The ID of the Google Cloud project that the service belongs to.
      :type project_id: str
      :param region: Required. The ID of the Google Cloud region that the service belongs to.
      :type region: str
      :param service_id:  Required. The ID of the metastore service, which is used as the final component of
          the metastore service's name. This value must be between 2 and 63 characters long inclusive, begin
          with a letter, end with a letter or number, and consist of alphanumeric ASCII characters or
          hyphens.

          This corresponds to the ``service_id`` field on the ``request`` instance; if ``request`` is
          provided, this should not be set.
      :type service_id: str
      :param backup:  Required. The backup to create. The ``name`` field is ignored. The ID of the created
          backup must be provided in the request's ``backup_id`` field.

          This corresponds to the ``backup`` field on the ``request`` instance; if ``request`` is provided,
          this should not be set.
      :type backup: google.cloud.metastore_v1.types.Backup
      :param backup_id:  Required. The ID of the backup, which is used as the final component of the
          backup's name. This value must be between 1 and 64 characters long, begin with a letter, end with
          a letter or number, and consist of alphanumeric ASCII characters or hyphens.

          This corresponds to the ``backup_id`` field on the ``request`` instance; if ``request`` is
          provided, this should not be set.
      :type backup_id: str
      :param request_id: Optional. A unique id used to identify the request.
      :type request_id: str
      :param retry: Designation of what errors, if any, should be retried.
      :type retry: google.api_core.retry.Retry
      :param timeout: The timeout for this request.
      :type timeout: float
      :param metadata: Strings which should be sent along with the request as metadata.
      :type metadata: Sequence[Tuple[str, str]]


   .. py:method:: create_metadata_import(self, project_id: str, region: str, service_id: str, metadata_import: google.cloud.metastore_v1.types.MetadataImport, metadata_import_id: str, request_id: Optional[str] = None, retry: Optional[google.api_core.retry.Retry] = None, timeout: Optional[float] = None, metadata: Sequence[Tuple[str, str]] = ())

      Creates a new MetadataImport in a given project and location.

      :param project_id: Required. The ID of the Google Cloud project that the service belongs to.
      :type project_id: str
      :param region: Required. The ID of the Google Cloud region that the service belongs to.
      :type region: str
      :param service_id:  Required. The ID of the metastore service, which is used as the final component of
          the metastore service's name. This value must be between 2 and 63 characters long inclusive, begin
          with a letter, end with a letter or number, and consist of alphanumeric ASCII characters or
          hyphens.

          This corresponds to the ``service_id`` field on the ``request`` instance; if ``request`` is
          provided, this should not be set.
      :type service_id: str
      :param metadata_import:  Required. The metadata import to create. The ``name`` field is ignored. The
          ID of the created metadata import must be provided in the request's ``metadata_import_id`` field.

          This corresponds to the ``metadata_import`` field on the ``request`` instance; if ``request`` is
          provided, this should not be set.
      :type metadata_import: google.cloud.metastore_v1.types.MetadataImport
      :param metadata_import_id:  Required. The ID of the metadata import, which is used as the final
          component of the metadata import's name. This value must be between 1 and 64 characters long,
          begin with a letter, end with a letter or number, and consist of alphanumeric ASCII characters or
          hyphens.

          This corresponds to the ``metadata_import_id`` field on the ``request`` instance; if ``request``
          is provided, this should not be set.
      :type metadata_import_id: str
      :param request_id: Optional. A unique id used to identify the request.
      :type request_id: str
      :param retry: Designation of what errors, if any, should be retried.
      :type retry: google.api_core.retry.Retry
      :param timeout: The timeout for this request.
      :type timeout: float
      :param metadata: Strings which should be sent along with the request as metadata.
      :type metadata: Sequence[Tuple[str, str]]


   .. py:method:: create_service(self, region: str, project_id: str, service: Union[Dict, google.cloud.metastore_v1.types.Service], service_id: str, request_id: Optional[str] = None, retry: Optional[google.api_core.retry.Retry] = None, timeout: Optional[float] = None, metadata: Sequence[Tuple[str, str]] = ())

      Creates a metastore service in a project and location.

      :param region: Required. The ID of the Google Cloud region that the service belongs to.
      :type region: str
      :param project_id: Required. The ID of the Google Cloud project that the service belongs to.
      :type project_id: str
      :param service:  Required. The Metastore service to create. The ``name`` field is ignored. The ID of
          the created metastore service must be provided in the request's ``service_id`` field.

          This corresponds to the ``service`` field on the ``request`` instance; if ``request`` is provided,
          this should not be set.
      :type service: google.cloud.metastore_v1.types.Service
      :param service_id:  Required. The ID of the metastore service, which is used as the final component of
          the metastore service's name. This value must be between 2 and 63 characters long inclusive, begin
          with a letter, end with a letter or number, and consist of alphanumeric ASCII characters or
          hyphens.

          This corresponds to the ``service_id`` field on the ``request`` instance; if ``request`` is
          provided, this should not be set.
      :type service_id: str
      :param request_id: Optional. A unique id used to identify the request.
      :type request_id: str
      :param retry: Designation of what errors, if any, should be retried.
      :type retry: google.api_core.retry.Retry
      :param timeout: The timeout for this request.
      :type timeout: float
      :param metadata: Strings which should be sent along with the request as metadata.
      :type metadata: Sequence[Tuple[str, str]]


   .. py:method:: delete_backup(self, project_id: str, region: str, service_id: str, backup_id: str, request_id: Optional[str] = None, retry: Optional[google.api_core.retry.Retry] = None, timeout: Optional[float] = None, metadata: Sequence[Tuple[str, str]] = ())

      Deletes a single backup.

      :param project_id: Required. The ID of the Google Cloud project that the service belongs to.
      :type project_id: str
      :param region: Required. The ID of the Google Cloud region that the service belongs to.
      :type region: str
      :param service_id:  Required. The ID of the metastore service, which is used as the final component of
          the metastore service's name. This value must be between 2 and 63 characters long inclusive, begin
          with a letter, end with a letter or number, and consist of alphanumeric ASCII characters or
          hyphens.

          This corresponds to the ``service_id`` field on the ``request`` instance; if ``request`` is
          provided, this should not be set.
      :type service_id: str
      :param backup_id:  Required. The ID of the backup, which is used as the final component of the
          backup's name. This value must be between 1 and 64 characters long, begin with a letter, end with
          a letter or number, and consist of alphanumeric ASCII characters or hyphens.

          This corresponds to the ``backup_id`` field on the ``request`` instance; if ``request`` is
          provided, this should not be set.
      :type backup_id: str
      :param request_id: Optional. A unique id used to identify the request.
      :type request_id: str
      :param retry: Designation of what errors, if any, should be retried.
      :type retry: google.api_core.retry.Retry
      :param timeout: The timeout for this request.
      :type timeout: float
      :param metadata: Strings which should be sent along with the request as metadata.
      :type metadata: Sequence[Tuple[str, str]]


   .. py:method:: delete_service(self, project_id: str, region: str, service_id: str, request_id: Optional[str] = None, retry: Optional[google.api_core.retry.Retry] = None, timeout: Optional[float] = None, metadata: Sequence[Tuple[str, str]] = ())

      Deletes a single service.

      :param project_id: Required. The ID of the Google Cloud project that the service belongs to.
      :type project_id: str
      :param region: Required. The ID of the Google Cloud region that the service belongs to.
      :type region: str
      :param service_id:  Required. The ID of the metastore service, which is used as the final component of
          the metastore service's name. This value must be between 2 and 63 characters long inclusive, begin
          with a letter, end with a letter or number, and consist of alphanumeric ASCII characters or
          hyphens.

          This corresponds to the ``service_id`` field on the ``request`` instance; if ``request`` is
          provided, this should not be set.
      :type service_id: str
      :param request_id: Optional. A unique id used to identify the request.
      :type request_id: str
      :param retry: Designation of what errors, if any, should be retried.
      :type retry: google.api_core.retry.Retry
      :param timeout: The timeout for this request.
      :type timeout: float
      :param metadata: Strings which should be sent along with the request as metadata.
      :type metadata: Sequence[Tuple[str, str]]


   .. py:method:: export_metadata(self, destination_gcs_folder: str, project_id: str, region: str, service_id: str, request_id: Optional[str] = None, database_dump_type: Optional[google.cloud.metastore_v1.types.metastore.DatabaseDumpSpec] = None, retry: Optional[google.api_core.retry.Retry] = None, timeout: Optional[float] = None, metadata: Sequence[Tuple[str, str]] = ())

      Exports metadata from a service.

      :param destination_gcs_folder: A Cloud Storage URI of a folder, in the format
          ``gs://<bucket_name>/<path_inside_bucket>``. A sub-folder
          ``<export_folder>`` containing exported files will be
          created below it.
      :type destination_gcs_folder: str
      :param project_id: Required. The ID of the Google Cloud project that the service belongs to.
      :type project_id: str
      :param region: Required. The ID of the Google Cloud region that the service belongs to.
      :type region: str
      :param service_id:  Required. The ID of the metastore service, which is used as the final component of
          the metastore service's name. This value must be between 2 and 63 characters long inclusive, begin
          with a letter, end with a letter or number, and consist of alphanumeric ASCII characters or
          hyphens.

          This corresponds to the ``service_id`` field on the ``request`` instance; if ``request`` is
          provided, this should not be set.
      :type service_id: str
      :param request_id: Optional. A unique id used to identify the request.
      :type request_id: str
      :param database_dump_type: Optional. The type of the database dump. If unspecified,
          defaults to ``MYSQL``.
      :type database_dump_type: google.cloud.metastore_v1.types.DatabaseDumpSpec.Type
      :param retry: Designation of what errors, if any, should be retried.
      :type retry: google.api_core.retry.Retry
      :param timeout: The timeout for this request.
      :type timeout: float
      :param metadata: Strings which should be sent along with the request as metadata.
      :type metadata: Sequence[Tuple[str, str]]


   .. py:method:: get_service(self, project_id: str, region: str, service_id: str, retry: Optional[google.api_core.retry.Retry] = None, timeout: Optional[float] = None, metadata: Sequence[Tuple[str, str]] = ())

      Gets the details of a single service.

      :param project_id: Required. The ID of the Google Cloud project that the service belongs to.
      :type project_id: str
      :param region: Required. The ID of the Google Cloud region that the service belongs to.
      :type region: str
      :param service_id:  Required. The ID of the metastore service, which is used as the final component of
          the metastore service's name. This value must be between 2 and 63 characters long inclusive, begin
          with a letter, end with a letter or number, and consist of alphanumeric ASCII characters or
          hyphens.

          This corresponds to the ``service_id`` field on the ``request`` instance; if ``request`` is
          provided, this should not be set.
      :type service_id: str
      :param retry: Designation of what errors, if any, should be retried.
      :type retry: google.api_core.retry.Retry
      :param timeout: The timeout for this request.
      :type timeout: float
      :param metadata: Strings which should be sent along with the request as metadata.
      :type metadata: Sequence[Tuple[str, str]]


   .. py:method:: get_backup(self, project_id: str, region: str, service_id: str, backup_id: str, retry: Optional[google.api_core.retry.Retry] = None, timeout: Optional[float] = None, metadata: Sequence[Tuple[str, str]] = ()) -> google.cloud.metastore_v1.types.Backup

      Get backup from a service.

      :param project_id: Required. The ID of the Google Cloud project that the service belongs to.
      :type project_id: str
      :param region: Required. The ID of the Google Cloud region that the service belongs to.
      :type region: str
      :param service_id:  Required. The ID of the metastore service, which is used as the final component of
          the metastore service's name. This value must be between 2 and 63 characters long inclusive, begin
          with a letter, end with a letter or number, and consist of alphanumeric ASCII characters or
          hyphens.

          This corresponds to the ``service_id`` field on the ``request`` instance; if ``request`` is
          provided, this should not be set.
      :type service_id: str
      :param backup_id:  Required. The ID of the metastore service backup to restore from
      :type backup_id: str
      :param retry: Designation of what errors, if any, should be retried.
      :type retry: google.api_core.retry.Retry
      :param timeout: The timeout for this request.
      :type timeout: float
      :param metadata: Strings which should be sent along with the request as metadata.
      :type metadata: Sequence[Tuple[str, str]]


   .. py:method:: list_backups(self, project_id: str, region: str, service_id: str, page_size: Optional[int] = None, page_token: Optional[str] = None, filter: Optional[str] = None, order_by: Optional[str] = None, retry: Optional[google.api_core.retry.Retry] = None, timeout: Optional[float] = None, metadata: Sequence[Tuple[str, str]] = ())

      Lists backups in a service.

      :param project_id: Required. The ID of the Google Cloud project that the service belongs to.
      :type project_id: str
      :param region: Required. The ID of the Google Cloud region that the service belongs to.
      :type region: str
      :param service_id:  Required. The ID of the metastore service, which is used as the final component of
          the metastore service's name. This value must be between 2 and 63 characters long inclusive, begin
          with a letter, end with a letter or number, and consist of alphanumeric ASCII characters or
          hyphens.

          This corresponds to the ``service_id`` field on the ``request`` instance; if ``request`` is
          provided, this should not be set.
      :type service_id: str
      :param page_size: Optional. The maximum number of backups to
          return. The response may contain less than the
          maximum number. If unspecified, no more than 500
          backups are returned. The maximum value is 1000;
          values above 1000 are changed to 1000.
      :type page_size: int
      :param page_token: Optional. A page token, received from a previous
          [DataprocMetastore.ListBackups][google.cloud.metastore.v1.DataprocMetastore.ListBackups]
          call. Provide this token to retrieve the subsequent page.
          To retrieve the first page, supply an empty page token.
          When paginating, other parameters provided to
          [DataprocMetastore.ListBackups][google.cloud.metastore.v1.DataprocMetastore.ListBackups]
          must match the call that provided the page token.
      :type page_token: str
      :param filter: Optional. The filter to apply to list
          results.
      :type filter: str
      :param order_by: Optional. Specify the ordering of results as described in
          `Sorting
          Order <https://cloud.google.com/apis/design/design_patterns#sorting_order>`__.
          If not specified, the results will be sorted in the default
          order.
      :type order_by: str
      :param retry: Designation of what errors, if any, should be retried.
      :type retry: google.api_core.retry.Retry
      :param timeout: The timeout for this request.
      :type timeout: float
      :param metadata: Strings which should be sent along with the request as metadata.
      :type metadata: Sequence[Tuple[str, str]]


   .. py:method:: restore_service(self, project_id: str, region: str, service_id: str, backup_project_id: str, backup_region: str, backup_service_id: str, backup_id: str, restore_type: Optional[google.cloud.metastore_v1.types.metastore.Restore] = None, request_id: Optional[str] = None, retry: Optional[google.api_core.retry.Retry] = None, timeout: Optional[float] = None, metadata: Sequence[Tuple[str, str]] = ())

      Restores a service from a backup.

      :param project_id: Required. The ID of the Google Cloud project that the service belongs to.
      :type project_id: str
      :param region: Required. The ID of the Google Cloud region that the service belongs to.
      :type region: str
      :param service_id:  Required. The ID of the metastore service, which is used as the final component of
          the metastore service's name. This value must be between 2 and 63 characters long inclusive, begin
          with a letter, end with a letter or number, and consist of alphanumeric ASCII characters or
          hyphens.

          This corresponds to the ``service_id`` field on the ``request`` instance; if ``request`` is
          provided, this should not be set.
      :type service_id: str
      :param backup_project_id: Required. The ID of the Google Cloud project that the metastore service
          backup to restore from.
      :type backup_project_id: str
      :param backup_region: Required. The ID of the Google Cloud region that the metastore
          service backup to restore from.
      :type backup_region: str
      :param backup_service_id:  Required. The ID of the metastore service backup to restore from,
          which is used as the final component of the metastore service's name. This value must be
          between 2 and 63 characters long inclusive, begin with a letter, end with a letter or number,
          and consist of alphanumeric ASCII characters or hyphens.
      :type backup_service_id: str
      :param backup_id:  Required. The ID of the metastore service backup to restore from
      :type backup_id: str
      :param restore_type: Optional. The type of restore. If unspecified, defaults to
          ``METADATA_ONLY``
      :type restore_type: google.cloud.metastore_v1.types.Restore.RestoreType
      :param request_id: Optional. A unique id used to identify the request.
      :type request_id: str
      :param retry: Designation of what errors, if any, should be retried.
      :type retry: google.api_core.retry.Retry
      :param timeout: The timeout for this request.
      :type timeout: float
      :param metadata: Strings which should be sent along with the request as metadata.
      :type metadata: Sequence[Tuple[str, str]]


   .. py:method:: update_service(self, project_id: str, region: str, service_id: str, service: Union[Dict, google.cloud.metastore_v1.types.Service], update_mask: google.protobuf.field_mask_pb2.FieldMask, request_id: Optional[str] = None, retry: Optional[google.api_core.retry.Retry] = None, timeout: Optional[float] = None, metadata: Sequence[Tuple[str, str]] = ())

      Updates the parameters of a single service.

      :param project_id: Required. The ID of the Google Cloud project that the service belongs to.
      :type project_id: str
      :param region: Required. The ID of the Google Cloud region that the service belongs to.
      :type region: str
      :param service_id:  Required. The ID of the metastore service, which is used as the final component of
          the metastore service's name. This value must be between 2 and 63 characters long inclusive, begin
          with a letter, end with a letter or number, and consist of alphanumeric ASCII characters or
          hyphens.

          This corresponds to the ``service_id`` field on the ``request`` instance; if ``request`` is
          provided, this should not be set.
      :type service_id: str
      :param service:  Required. The metastore service to update. The server only merges fields in the
          service if they are specified in ``update_mask``.

          The metastore service's ``name`` field is used to identify the metastore service to be updated.

          This corresponds to the ``service`` field on the ``request`` instance; if ``request`` is provided,
          this should not be set.
      :type service: Union[Dict, google.cloud.metastore_v1.types.Service]
      :param update_mask:  Required. A field mask used to specify the fields to be overwritten in the
          metastore service resource by the update. Fields specified in the ``update_mask`` are relative to
          the resource (not to the full request). A field is overwritten if it is in the mask.

          This corresponds to the ``update_mask`` field on the ``request`` instance; if ``request`` is
          provided, this should not be set.
      :type update_mask: google.protobuf.field_mask_pb2.FieldMask
      :param request_id: Optional. A unique id used to identify the request.
      :type request_id: str
      :param retry: Designation of what errors, if any, should be retried.
      :type retry: google.api_core.retry.Retry
      :param timeout: The timeout for this request.
      :type timeout: float
      :param metadata: Strings which should be sent along with the request as metadata.
      :type metadata: Sequence[Tuple[str, str]]



