:py:mod:`tests.system.providers.google.cloud.vertex_ai.example_vertex_ai_custom_job_python_package`
===================================================================================================

.. py:module:: tests.system.providers.google.cloud.vertex_ai.example_vertex_ai_custom_job_python_package

.. autoapi-nested-parse::

   Example Airflow DAG for Google Vertex AI service testing Custom Jobs operations.



Module Contents
---------------

.. py:data:: ENV_ID
   

   

.. py:data:: PROJECT_ID
   

   

.. py:data:: DAG_ID
   :annotation: = vertex_ai_custom_job_operations

   

.. py:data:: REGION
   :annotation: = us-central1

   

.. py:data:: PACKAGE_DISPLAY_NAME
   

   

.. py:data:: MODEL_DISPLAY_NAME
   

   

.. py:data:: CUSTOM_PYTHON_GCS_BUCKET_NAME
   

   

.. py:data:: DATA_SAMPLE_GCS_OBJECT_NAME
   :annotation: = vertex-ai/california_housing_train.csv

   

.. py:data:: RESOURCES_PATH
   

   

.. py:data:: CSV_ZIP_FILE_LOCAL_PATH
   

   

.. py:data:: CSV_FILE_LOCAL_PATH
   :annotation: = /custom-job/california_housing_train.csv

   

.. py:data:: TAR_FILE_LOCAL_PATH
   :annotation: = /custom-job/custom_trainer_script-0.1.tar

   

.. py:data:: FILES_TO_UPLOAD
   

   

.. py:data:: TABULAR_DATASET
   

   

.. py:data:: CONTAINER_URI
   :annotation: = gcr.io/cloud-aiplatform/training/tf-cpu.2-2:latest

   

.. py:data:: MODEL_SERVING_CONTAINER_URI
   :annotation: = gcr.io/cloud-aiplatform/prediction/tf2-cpu.2-2:latest

   

.. py:data:: REPLICA_COUNT
   :annotation: = 1

   

.. py:data:: MACHINE_TYPE
   :annotation: = n1-standard-4

   

.. py:data:: ACCELERATOR_TYPE
   :annotation: = ACCELERATOR_TYPE_UNSPECIFIED

   

.. py:data:: ACCELERATOR_COUNT
   :annotation: = 0

   

.. py:data:: TRAINING_FRACTION_SPLIT
   :annotation: = 0.7

   

.. py:data:: TEST_FRACTION_SPLIT
   :annotation: = 0.15

   

.. py:data:: VALIDATION_FRACTION_SPLIT
   :annotation: = 0.15

   

.. py:data:: PYTHON_PACKAGE_GCS_URI
   

   

.. py:data:: PYTHON_MODULE_NAME
   :annotation: = aiplatform_custom_trainer_script.task

   

.. py:data:: create_bucket
   

   

.. py:data:: test_run
   

   

