:py:mod:`airflow.providers.microsoft.azure.hooks.msgraph`
=========================================================

.. py:module:: airflow.providers.microsoft.azure.hooks.msgraph


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.microsoft.azure.hooks.msgraph.DefaultResponseHandler
   airflow.providers.microsoft.azure.hooks.msgraph.KiotaRequestAdapterHook




.. py:class:: DefaultResponseHandler


   Bases: :py:obj:`kiota_abstractions.response_handler.ResponseHandler`

   DefaultResponseHandler returns JSON payload or content in bytes or response headers.

   .. py:method:: get_value(response)
      :staticmethod:


   .. py:method:: handle_response_async(response, error_map = None)
      :async:

      Invoke this callback method when a response is received.

      param response: The type of the native response object.
      param error_map: The error dict to use in case of a failed request.



.. py:class:: KiotaRequestAdapterHook(conn_id = default_conn_name, timeout = None, proxies = None, api_version = None)


   Bases: :py:obj:`airflow.hooks.base.BaseHook`

   A Microsoft Graph API interaction hook, a Wrapper around KiotaRequestAdapter.

   https://github.com/microsoftgraph/msgraph-sdk-python-core

   :param conn_id: The HTTP Connection ID to run the trigger against.
   :param timeout: The HTTP timeout being used by the KiotaRequestAdapter (default is None).
       When no timeout is specified or set to None then no HTTP timeout is applied on each request.
   :param proxies: A Dict defining the HTTP proxies to be used (default is None).
   :param api_version: The API version of the Microsoft Graph API to be used (default is v1).
       You can pass an enum named APIVersion which has 2 possible members v1 and beta,
       or you can pass a string as "v1.0" or "beta".

   .. py:property:: api_version
      :type: msgraph_core.APIVersion


   .. py:attribute:: DEFAULT_HEADERS

      

   .. py:attribute:: cached_request_adapters
      :type: dict[str, tuple[msgraph_core.APIVersion, kiota_abstractions.request_adapter.RequestAdapter]]

      

   .. py:attribute:: default_conn_name
      :type: str
      :value: 'msgraph_default'

      

   .. py:method:: resolve_api_version_from_value(api_version, default = None)
      :staticmethod:


   .. py:method:: get_api_version(config)


   .. py:method:: get_host(connection)
      :staticmethod:


   .. py:method:: format_no_proxy_url(url)
      :staticmethod:


   .. py:method:: to_httpx_proxies(proxies)
      :classmethod:


   .. py:method:: to_msal_proxies(authority, proxies)


   .. py:method:: get_conn()

      Return connection for the hook.


   .. py:method:: test_connection()

      Test HTTP Connection.


   .. py:method:: run(url = '', response_type = None, path_parameters = None, method = 'GET', query_parameters = None, headers = None, data = None)
      :async:


   .. py:method:: request_information(url, response_type = None, path_parameters = None, method = 'GET', query_parameters = None, headers = None, data = None)


   .. py:method:: normalize_url(url)
      :staticmethod:


   .. py:method:: encoded_query_parameters(query_parameters)
      :staticmethod:


   .. py:method:: error_mapping()
      :staticmethod:



