:py:mod:`airflow.providers.microsoft.azure.operators.wasb_delete_blob`
======================================================================

.. py:module:: airflow.providers.microsoft.azure.operators.wasb_delete_blob


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.microsoft.azure.operators.wasb_delete_blob.WasbDeleteBlobOperator




.. py:class:: WasbDeleteBlobOperator(*, container_name, blob_name, wasb_conn_id = 'wasb_default', check_options = None, is_prefix = False, ignore_if_missing = False, **kwargs)


   Bases: :py:obj:`airflow.models.BaseOperator`

   Deletes blob(s) on Azure Blob Storage.

   :param container_name: Name of the container. (templated)
   :param blob_name: Name of the blob. (templated)
   :param wasb_conn_id: Reference to the :ref:`wasb connection <howto/connection:wasb>`.
   :param check_options: Optional keyword arguments that
       `WasbHook.check_for_blob()` takes.
   :param is_prefix: If blob_name is a prefix, delete all files matching prefix.
   :param ignore_if_missing: if True, then return success even if the
       blob does not exist.

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('container_name', 'blob_name')

      

   .. py:method:: execute(context)

      Derive when creating an operator.

      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



