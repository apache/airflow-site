:py:mod:`airflow.providers.microsoft.azure.hooks.powerbi`
=========================================================

.. py:module:: airflow.providers.microsoft.azure.hooks.powerbi


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.microsoft.azure.hooks.powerbi.PowerBIDatasetRefreshFields
   airflow.providers.microsoft.azure.hooks.powerbi.PowerBIDatasetRefreshStatus
   airflow.providers.microsoft.azure.hooks.powerbi.PowerBIHook




.. py:class:: PowerBIDatasetRefreshFields


   Bases: :py:obj:`enum.Enum`

   Power BI refresh dataset details.

   .. py:attribute:: REQUEST_ID
      :value: 'request_id'

      

   .. py:attribute:: STATUS
      :value: 'status'

      

   .. py:attribute:: ERROR
      :value: 'error'

      


.. py:class:: PowerBIDatasetRefreshStatus


   Power BI refresh dataset statuses.

   .. py:attribute:: IN_PROGRESS
      :value: 'In Progress'

      

   .. py:attribute:: FAILED
      :value: 'Failed'

      

   .. py:attribute:: COMPLETED
      :value: 'Completed'

      

   .. py:attribute:: DISABLED
      :value: 'Disabled'

      

   .. py:attribute:: TERMINAL_STATUSES

      


.. py:exception:: PowerBIDatasetRefreshException


   Bases: :py:obj:`airflow.exceptions.AirflowException`

   An exception that indicates a dataset refresh failed to complete.


.. py:class:: PowerBIHook(conn_id = default_conn_name, proxies = None, timeout = 60 * 60 * 24 * 7, api_version = None)


   Bases: :py:obj:`airflow.providers.microsoft.azure.hooks.msgraph.KiotaRequestAdapterHook`

   A async hook to interact with Power BI.

   :param conn_id: The Power BI connection id.

   .. py:attribute:: conn_type
      :type: str
      :value: 'powerbi'

      

   .. py:attribute:: conn_name_attr
      :type: str
      :value: 'conn_id'

      

   .. py:attribute:: default_conn_name
      :type: str
      :value: 'powerbi_default'

      

   .. py:attribute:: hook_name
      :type: str
      :value: 'Power BI'

      

   .. py:method:: get_connection_form_widgets()
      :classmethod:

      Return connection widgets to add to connection form.


   .. py:method:: get_ui_field_behaviour()
      :classmethod:

      Return custom field behaviour.


   .. py:method:: get_refresh_history(dataset_id, group_id)
      :async:

      Retrieve the refresh history of the specified dataset from the given group ID.

      :param dataset_id: The dataset ID.
      :param group_id: The workspace ID.

      :return: Dictionary containing all the refresh histories of the dataset.


   .. py:method:: raw_to_refresh_details(refresh_details)
      :classmethod:

      Convert raw refresh details into a dictionary containing required fields.

      :param refresh_details: Raw object of refresh details.


   .. py:method:: get_refresh_details_by_refresh_id(dataset_id, group_id, refresh_id)
      :async:

      Get the refresh details of the given request Id.

      :param refresh_id: Request Id of the Dataset refresh.


   .. py:method:: trigger_dataset_refresh(*, dataset_id, group_id)
      :async:

      Triggers a refresh for the specified dataset from the given group id.

      :param dataset_id: The dataset id.
      :param group_id: The workspace id.

      :return: Request id of the dataset refresh request.


   .. py:method:: cancel_dataset_refresh(dataset_id, group_id, dataset_refresh_id)
      :async:

      Cancel the dataset refresh.

      :param dataset_id: The dataset Id.
      :param group_id: The workspace Id.
      :param dataset_refresh_id: The dataset refresh Id.



