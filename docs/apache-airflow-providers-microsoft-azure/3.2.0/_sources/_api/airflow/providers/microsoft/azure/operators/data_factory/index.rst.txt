:mod:`airflow.providers.microsoft.azure.operators.data_factory`
===============================================================

.. py:module:: airflow.providers.microsoft.azure.operators.data_factory


Module Contents
---------------

.. py:class:: AzureDataFactoryRunPipelineOperator(*, pipeline_name: str, azure_data_factory_conn_id: str = AzureDataFactoryHook.default_conn_name, wait_for_termination: bool = True, resource_group_name: Optional[str] = None, factory_name: Optional[str] = None, reference_pipeline_run_id: Optional[str] = None, is_recovery: Optional[bool] = None, start_activity_name: Optional[str] = None, start_from_failure: Optional[bool] = None, parameters: Optional[Dict[str, Any]] = None, timeout: Optional[int] = 60 * 60 * 24 * 7, check_interval: Optional[int] = 60, **kwargs)

   Bases: :class:`airflow.models.BaseOperator`

   Executes a data factory pipeline.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:AzureDataFactoryRunPipelineOperator`

   :param azure_data_factory_conn_id: The connection identifier for connecting to Azure Data Factory.
   :type azure_data_factory_conn_id: str
   :param pipeline_name: The name of the pipeline to execute.
   :type pipeline_name: str
   :param wait_for_termination: Flag to wait on a pipeline run's termination.  By default, this feature is
       enabled but could be disabled to perform an asynchronous wait for a long-running pipeline execution
       using the ``AzureDataFactoryPipelineRunSensor``.
   :type wait_for_termination: bool
   :param resource_group_name: The resource group name. If a value is not passed in to the operator, the
       ``AzureDataFactoryHook`` will attempt to use the resource group name provided in the corresponding
       connection.
   :type resource_group_name: str
   :param factory_name: The data factory name. If a value is not passed in to the operator, the
       ``AzureDataFactoryHook`` will attempt to use the factory name name provided in the corresponding
       connection.
   :type factory_name: str
   :param reference_pipeline_run_id: The pipeline run identifier. If this run ID is specified the parameters
       of the specified run will be used to create a new run.
   :type reference_pipeline_run_id: str
   :param is_recovery: Recovery mode flag. If recovery mode is set to `True`, the specified referenced
       pipeline run and the new run will be grouped under the same ``groupId``.
   :type is_recovery: bool
   :param start_activity_name: In recovery mode, the rerun will start from this activity. If not specified,
       all activities will run.
   :type start_activity_name: str
   :param start_from_failure: In recovery mode, if set to true, the rerun will start from failed activities.
       The property will be used only if ``start_activity_name`` is not specified.
   :type start_from_failure: bool
   :param parameters: Parameters of the pipeline run. These parameters are referenced in a pipeline via
       ``@pipeline().parameters.parameterName`` and will be used only if the ``reference_pipeline_run_id`` is
       not specified.
   :type parameters: Dict[str, Any]
   :param timeout: Time in seconds to wait for a pipeline to reach a terminal status for non-asynchronous
       waits. Used only if ``wait_for_termination`` is True.
   :type timeout: int
   :param check_interval: Time in seconds to check on a pipeline run's status for non-asynchronous waits.
       Used only if ``wait_for_termination`` is True.
   :type check_interval: int

   .. attribute:: template_fields
      :annotation: = ['azure_data_factory_conn_id', 'resource_group_name', 'factory_name', 'pipeline_name', 'reference_pipeline_run_id', 'parameters']

      

   .. attribute:: template_fields_renderers
      

      

   .. attribute:: ui_color
      :annotation: = #0678d4

      

   
   .. method:: execute(self, context: Dict)



   
   .. method:: on_kill(self)




