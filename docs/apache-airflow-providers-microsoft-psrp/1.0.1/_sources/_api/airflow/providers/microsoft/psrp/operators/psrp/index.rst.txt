:py:mod:`airflow.providers.microsoft.psrp.operators.psrp`
=========================================================

.. py:module:: airflow.providers.microsoft.psrp.operators.psrp


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.microsoft.psrp.operators.psrp.PSRPOperator




.. py:class:: PSRPOperator(*, psrp_conn_id: str, command: Optional[str] = None, powershell: Optional[str] = None, **kwargs)

   Bases: :py:obj:`airflow.models.BaseOperator`

   PowerShell Remoting Protocol operator.

   :param psrp_conn_id: connection id
   :type psrp_conn_id: str
   :param command: command to execute on remote host. (templated)
   :type command: str
   :param powershell: powershell to execute on remote host. (templated)
   :type powershell: str

   .. py:attribute:: template_fields
      :annotation: :Sequence[str] = ['command', 'powershell']

      

   .. py:attribute:: template_fields_renderers
      

      

   .. py:attribute:: ui_color
      :annotation: = #901dd2

      

   .. py:method:: execute(self, context: airflow.utils.context.Context) -> List[str]

      This is the main method to derive when creating an operator.
      Context is the same dictionary used as when rendering jinja templates.

      Refer to get_template_context for more context.



