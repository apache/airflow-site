:py:mod:`airflow.providers.openlineage.conf`
============================================

.. py:module:: airflow.providers.openlineage.conf

.. autoapi-nested-parse::

   This module provides functions for safely retrieving and handling OpenLineage configurations.

   For the legacy boolean env variables `OPENLINEAGE_AIRFLOW_DISABLE_SOURCE_CODE` and `OPENLINEAGE_DISABLED`,
   any string not equal to "true", "1", or "t" should be treated as False, to maintain backward compatibility.
   Support for legacy variables will be removed in Airflow 3.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   airflow.providers.openlineage.conf.decorator
   airflow.providers.openlineage.conf.config_path
   airflow.providers.openlineage.conf.is_source_enabled
   airflow.providers.openlineage.conf.disabled_operators
   airflow.providers.openlineage.conf.selective_enable
   airflow.providers.openlineage.conf.custom_extractors
   airflow.providers.openlineage.conf.custom_run_facets
   airflow.providers.openlineage.conf.namespace
   airflow.providers.openlineage.conf.transport
   airflow.providers.openlineage.conf.is_disabled
   airflow.providers.openlineage.conf.dag_state_change_process_pool_size
   airflow.providers.openlineage.conf.execution_timeout
   airflow.providers.openlineage.conf.include_full_task_info
   airflow.providers.openlineage.conf.debug_mode



.. py:function:: decorator(func)


.. py:function:: config_path(check_legacy_env_var = True)

   [openlineage] config_path.


.. py:function:: is_source_enabled()

   [openlineage] disable_source_code.


.. py:function:: disabled_operators()

   [openlineage] disabled_for_operators.


.. py:function:: selective_enable()

   [openlineage] selective_enable.


.. py:function:: custom_extractors()

   [openlineage] extractors.


.. py:function:: custom_run_facets()

   [openlineage] custom_run_facets.


.. py:function:: namespace()

   [openlineage] namespace.


.. py:function:: transport()

   [openlineage] transport.


.. py:function:: is_disabled()

   [openlineage] disabled + check if any configuration is present.


.. py:function:: dag_state_change_process_pool_size()

   [openlineage] dag_state_change_process_pool_size.


.. py:function:: execution_timeout()

   [openlineage] execution_timeout.


.. py:function:: include_full_task_info()

   [openlineage] include_full_task_info.


.. py:function:: debug_mode()

   [openlineage] debug_mode.


