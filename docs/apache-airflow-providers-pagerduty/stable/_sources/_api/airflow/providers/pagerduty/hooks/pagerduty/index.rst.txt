:py:mod:`airflow.providers.pagerduty.hooks.pagerduty`
=====================================================

.. py:module:: airflow.providers.pagerduty.hooks.pagerduty

.. autoapi-nested-parse::

   Hook for sending or receiving data from PagerDuty as well as creating PagerDuty incidents.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.pagerduty.hooks.pagerduty.PagerdutyHook




.. py:class:: PagerdutyHook(token = None, pagerduty_conn_id = None)


   Bases: :py:obj:`airflow.hooks.base.BaseHook`

   The PagerdutyHook can be used to interact with both the PagerDuty API and the PagerDuty Events API.

   Takes both PagerDuty API token directly and connection that has PagerDuty API token.
   If both supplied, PagerDuty API token will be used.
   In these cases, the PagerDuty API token refers to an account token:
   https://support.pagerduty.com/docs/generating-api-keys#generating-a-general-access-rest-api-key
   https://support.pagerduty.com/docs/generating-api-keys#generating-a-personal-rest-api-key

   In order to send events (with the Pagerduty Events API), you will also need to specify the
   routing_key (or Integration key) in the ``extra`` field

   :param token: PagerDuty API token
   :param pagerduty_conn_id: connection that has PagerDuty API token in the password field

   .. py:attribute:: conn_name_attr
      :value: 'pagerduty_conn_id'

      

   .. py:attribute:: default_conn_name
      :value: 'pagerduty_default'

      

   .. py:attribute:: conn_type
      :value: 'pagerduty'

      

   .. py:attribute:: hook_name
      :value: 'Pagerduty'

      

   .. py:method:: get_ui_field_behaviour()
      :classmethod:

      Return custom field behaviour.


   .. py:method:: get_connection_form_widgets()
      :classmethod:

      Return connection widgets to add to connection form.


   .. py:method:: get_session()

      Return `pdpyras.APISession` for use with sending or receiving data through the PagerDuty REST API.

      The `pdpyras` library supplies a class `pdpyras.APISession` extending `requests.Session` from the
      Requests HTTP library.

      Documentation on how to use the `APISession` class can be found at:
      https://pagerduty.github.io/pdpyras/#data-access-abstraction


   .. py:method:: test_connection()



