:py:mod:`airflow.providers.pinecone.operators.pinecone`
=======================================================

.. py:module:: airflow.providers.pinecone.operators.pinecone


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.pinecone.operators.pinecone.PineconeIngestOperator




.. py:class:: PineconeIngestOperator(*, conn_id = PineconeHook.default_conn_name, index_name, input_vectors, namespace = '', batch_size = None, upsert_kwargs = None, **kwargs)


   Bases: :py:obj:`airflow.models.BaseOperator`

   Ingest vector embeddings into Pinecone.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:PineconeIngestOperator`

   :param conn_id: The connection id to use when connecting to Pinecone.
   :param index_name: Name of the Pinecone index.
   :param input_vectors: Data to be ingested, in the form of a list of tuples where each tuple
       contains (id, vector_embedding, metadata).
   :param namespace: The namespace to write to. If not specified, the default namespace is used.
   :param batch_size: The number of vectors to upsert in each batch.
   :param upsert_kwargs: .. seealso:: https://docs.pinecone.io/reference/upsert

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('index_name', 'input_vectors', 'namespace')

      

   .. py:method:: hook()

      Return an instance of the PineconeHook.


   .. py:method:: execute(context)

      Ingest data into Pinecone using the PineconeHook.



