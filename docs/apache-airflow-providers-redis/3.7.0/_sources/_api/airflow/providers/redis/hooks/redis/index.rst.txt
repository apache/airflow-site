:py:mod:`airflow.providers.redis.hooks.redis`
=============================================

.. py:module:: airflow.providers.redis.hooks.redis

.. autoapi-nested-parse::

   RedisHook module.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.redis.hooks.redis.RedisHook




Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.redis.hooks.redis.DEFAULT_SSL_CERT_REQS
   airflow.providers.redis.hooks.redis.ALLOWED_SSL_CERT_REQS


.. py:data:: DEFAULT_SSL_CERT_REQS
   :value: 'required'

   

.. py:data:: ALLOWED_SSL_CERT_REQS

   

.. py:class:: RedisHook(redis_conn_id = default_conn_name)


   Bases: :py:obj:`airflow.hooks.base.BaseHook`

   Wrapper for connection to interact with Redis in-memory data structure store.

   You can set your db in the extra field of your connection as ``{"db": 3}``.
   Also you can set ssl parameters as:
   ``{"ssl": true, "ssl_cert_reqs": "require", "ssl_cert_file": "/path/to/cert.pem", etc}``.

   .. py:attribute:: conn_name_attr
      :value: 'redis_conn_id'

      

   .. py:attribute:: default_conn_name
      :value: 'redis_default'

      

   .. py:attribute:: conn_type
      :value: 'redis'

      

   .. py:attribute:: hook_name
      :value: 'Redis'

      

   .. py:method:: get_conn()

      Return a Redis connection.


   .. py:method:: get_ui_field_behaviour()
      :classmethod:

      Return custom UI field behaviour for Redis connection.


   .. py:method:: get_connection_form_widgets()
      :classmethod:

      Return connection widgets to add to Redis connection form.



