:py:mod:`airflow.providers.salesforce.operators.bulk`
=====================================================

.. py:module:: airflow.providers.salesforce.operators.bulk


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.salesforce.operators.bulk.SalesforceBulkOperator




.. py:class:: SalesforceBulkOperator(*, operation, object_name, payload, external_id_field = 'Id', batch_size = 10000, use_serial = False, salesforce_conn_id = 'salesforce_default', **kwargs)


   Bases: :py:obj:`airflow.models.BaseOperator`

   Execute a Salesforce Bulk API and pushes results to xcom.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:SalesforceBulkOperator`

   :param operation: Bulk operation to be performed
       Available operations are in ['insert', 'update', 'upsert', 'delete', 'hard_delete']
   :param object_name: The name of the Salesforce object
   :param payload: list of dict to be passed as a batch
   :param external_id_field: unique identifier field for upsert operations
   :param batch_size: number of records to assign for each batch in the job
   :param use_serial: Process batches in serial mode
   :param salesforce_conn_id: The :ref:`Salesforce Connection id <howto/connection:SalesforceHook>`.

   .. py:attribute:: available_operations
      :value: ('insert', 'update', 'upsert', 'delete', 'hard_delete')

      

   .. py:method:: execute(context)

      Makes an HTTP request to Salesforce Bulk API.

      :param context: The task context during execution.
      :return: API response if do_xcom_push is True



