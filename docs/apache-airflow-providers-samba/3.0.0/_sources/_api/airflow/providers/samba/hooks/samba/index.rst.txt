:mod:`airflow.providers.samba.hooks.samba`
==========================================

.. py:module:: airflow.providers.samba.hooks.samba


Module Contents
---------------

.. py:class:: SambaHook(samba_conn_id: str = default_conn_name, share: Optional[str] = None)

   Bases: :class:`airflow.hooks.base.BaseHook`

   Allows for interaction with a Samba server.

   The hook should be used as a context manager in order to correctly
   set up a session and disconnect open connections upon exit.

   :param samba_conn_id: The connection id reference.
   :type samba_conn_id: str
   :param share:
       An optional share name. If this is unset then the "schema" field of
       the connection is used in its place.
   :type share: str

   .. attribute:: conn_name_attr
      :annotation: = samba_conn_id

      

   .. attribute:: default_conn_name
      :annotation: = samba_default

      

   .. attribute:: conn_type
      :annotation: = samba

      

   .. attribute:: hook_name
      :annotation: = Samba

      

   
   .. method:: __enter__(self)



   
   .. method:: __exit__(self, exc_type, exc_value, traceback)



   
   .. method:: link(self, src, dst, follow_symlinks=True)



   
   .. method:: listdir(self, path)



   
   .. method:: lstat(self, path)



   
   .. method:: makedirs(self, path, exist_ok=False)



   
   .. method:: mkdir(self, path)



   
   .. method:: open_file(self, path, mode='r', buffering=-1, encoding=None, errors=None, newline=None, share_access=None, desired_access=None, file_attributes=None, file_type='file')



   
   .. method:: readlink(self, path)



   
   .. method:: remove(self, path)



   
   .. method:: removedirs(self, path)



   
   .. method:: rename(self, src, dst)



   
   .. method:: replace(self, src, dst)



   
   .. method:: rmdir(self, path)



   
   .. method:: scandir(self, path, search_pattern='*')



   
   .. method:: stat(self, path, follow_symlinks=True)



   
   .. method:: stat_volume(self, path)



   
   .. method:: symlink(self, src, dst, target_is_directory=False)



   
   .. method:: truncate(self, path, length)



   
   .. method:: unlink(self, path)



   
   .. method:: utime(self, path, times=None, ns=None, follow_symlinks=True)



   
   .. method:: walk(self, path, topdown=True, onerror=None, follow_symlinks=False)



   
   .. method:: getxattr(self, path, attribute, follow_symlinks=True)



   
   .. method:: listxattr(self, path, follow_symlinks=True)



   
   .. method:: removexattr(self, path, attribute, follow_symlinks=True)



   
   .. method:: setxattr(self, path, attribute, value, flags=0, follow_symlinks=True)



   
   .. method:: push_from_local(self, destination_filepath: str, local_filepath: str)

      Push local file to samba server




