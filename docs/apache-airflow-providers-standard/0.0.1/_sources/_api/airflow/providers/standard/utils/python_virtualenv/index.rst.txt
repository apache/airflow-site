:py:mod:`airflow.providers.standard.utils.python_virtualenv`
============================================================

.. py:module:: airflow.providers.standard.utils.python_virtualenv

.. autoapi-nested-parse::

   Utilities for creating a virtual environment.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   airflow.providers.standard.utils.python_virtualenv.prepare_virtualenv
   airflow.providers.standard.utils.python_virtualenv.write_python_script



.. py:function:: prepare_virtualenv(venv_directory, python_bin, system_site_packages, requirements = None, requirements_file_path = None, pip_install_options = None, index_urls = None)

   Create a virtual environment and install the additional python packages.

   :param venv_directory: The path for directory where the environment will be created.
   :param python_bin: Path to the Python executable.
   :param system_site_packages: Whether to include system_site_packages in your virtualenv.
       See virtualenv documentation for more information.
   :param requirements: List of additional python packages.
   :param requirements_file_path: Path to the ``requirements.txt`` file.
   :param pip_install_options: a list of pip install options when installing requirements
       See 'pip install -h' for available options
   :param index_urls: an optional list of index urls to load Python packages from.
       If not provided the system pip conf will be used to source packages from.
   :return: Path to a binary file with Python in a virtual environment.


.. py:function:: write_python_script(jinja_context, filename, render_template_as_native_obj = False)

   Render the python script to a file to execute in the virtual environment.

   :param jinja_context: The jinja context variables to unpack and replace with its placeholders in the
       template file.
   :param filename: The name of the file to dump the rendered script to.
   :param render_template_as_native_obj: If ``True``, rendered Jinja template would be converted
       to a native Python object


