Search.setIndex({"docnames": ["_api/airflow/providers/standard/hooks/filesystem/index", "_api/airflow/providers/standard/hooks/index", "_api/airflow/providers/standard/hooks/package_index/index", "_api/airflow/providers/standard/hooks/subprocess/index", "_api/airflow/providers/standard/index", "_api/airflow/providers/standard/operators/bash/index", "_api/airflow/providers/standard/operators/datetime/index", "_api/airflow/providers/standard/operators/generic_transfer/index", "_api/airflow/providers/standard/operators/index", "_api/airflow/providers/standard/operators/latest_only/index", "_api/airflow/providers/standard/operators/python/index", "_api/airflow/providers/standard/operators/trigger_dagrun/index", "_api/airflow/providers/standard/operators/weekday/index", "_api/airflow/providers/standard/sensors/bash/index", "_api/airflow/providers/standard/sensors/date_time/index", "_api/airflow/providers/standard/sensors/external_task/index", "_api/airflow/providers/standard/sensors/filesystem/index", "_api/airflow/providers/standard/sensors/index", "_api/airflow/providers/standard/sensors/python/index", "_api/airflow/providers/standard/sensors/time/index", "_api/airflow/providers/standard/sensors/time_delta/index", "_api/airflow/providers/standard/sensors/weekday/index", "_api/airflow/providers/standard/triggers/external_task/index", "_api/airflow/providers/standard/triggers/file/index", "_api/airflow/providers/standard/triggers/index", "_api/airflow/providers/standard/triggers/temporal/index", "_api/airflow/providers/standard/utils/index", "_api/airflow/providers/standard/utils/python_virtualenv/index", "_api/airflow/providers/standard/utils/sensor_helper/index", "_api/airflow/providers/standard/version_compat/index", "changelog", "commits", "configurations-ref", "index", "installing-providers-from-sources", "operators/bash", "operators/datetime", "operators/index", "operators/python", "security", "sensors/bash", "sensors/datetime", "sensors/external_task_sensor", "sensors/file", "sensors/index", "sensors/python"], "filenames": ["_api/airflow/providers/standard/hooks/filesystem/index.rst", "_api/airflow/providers/standard/hooks/index.rst", "_api/airflow/providers/standard/hooks/package_index/index.rst", "_api/airflow/providers/standard/hooks/subprocess/index.rst", "_api/airflow/providers/standard/index.rst", "_api/airflow/providers/standard/operators/bash/index.rst", "_api/airflow/providers/standard/operators/datetime/index.rst", "_api/airflow/providers/standard/operators/generic_transfer/index.rst", "_api/airflow/providers/standard/operators/index.rst", "_api/airflow/providers/standard/operators/latest_only/index.rst", "_api/airflow/providers/standard/operators/python/index.rst", "_api/airflow/providers/standard/operators/trigger_dagrun/index.rst", "_api/airflow/providers/standard/operators/weekday/index.rst", "_api/airflow/providers/standard/sensors/bash/index.rst", "_api/airflow/providers/standard/sensors/date_time/index.rst", "_api/airflow/providers/standard/sensors/external_task/index.rst", "_api/airflow/providers/standard/sensors/filesystem/index.rst", "_api/airflow/providers/standard/sensors/index.rst", "_api/airflow/providers/standard/sensors/python/index.rst", "_api/airflow/providers/standard/sensors/time/index.rst", "_api/airflow/providers/standard/sensors/time_delta/index.rst", "_api/airflow/providers/standard/sensors/weekday/index.rst", "_api/airflow/providers/standard/triggers/external_task/index.rst", "_api/airflow/providers/standard/triggers/file/index.rst", "_api/airflow/providers/standard/triggers/index.rst", "_api/airflow/providers/standard/triggers/temporal/index.rst", "_api/airflow/providers/standard/utils/index.rst", "_api/airflow/providers/standard/utils/python_virtualenv/index.rst", "_api/airflow/providers/standard/utils/sensor_helper/index.rst", "_api/airflow/providers/standard/version_compat/index.rst", "changelog.rst", "commits.rst", "configurations-ref.rst", "index.rst", "installing-providers-from-sources.rst", "operators/bash.rst", "operators/datetime.rst", "operators/index.rst", "operators/python.rst", "security.rst", "sensors/bash.rst", "sensors/datetime.rst", "sensors/external_task_sensor.rst", "sensors/file.rst", "sensors/index.rst", "sensors/python.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.hooks.filesystem</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.hooks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.hooks.package_index</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.hooks.subprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.bash</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.datetime</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.generic_transfer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.latest_only</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.python</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.trigger_dagrun</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.operators.weekday</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.bash</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.date_time</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.external_task</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.filesystem</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.python</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.time</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.time_delta</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.sensors.weekday</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.triggers.external_task</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.triggers.file</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.triggers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.triggers.temporal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.utils.python_virtualenv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.utils.sensor_helper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">airflow.providers.standard.version_compat</span></code>", "Changelog", "Package apache-airflow-providers-standard", "Configuration Reference", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apache-airflow-providers-standard</span></code>", "Installing from sources", "BashOperator", "BranchDateTimeOperator", "Standard Operators", "PythonOperator", "Releasing security patches", "BashSensor", "TimeDeltaSensor", "Cross-DAG Dependencies", "FileSensor", "Standard Sensors", "PythonSensor"], "terms": {"fshook": [0, 31], "fs_conn_id": [0, 16, 43], "default_conn_nam": [0, 2], "kwarg": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 35, 38], "sourc": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 29, 35, 36, 38, 40, 41, 42, 43, 45], "base": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 36, 38], "basehook": [0, 2, 3, 7], "allow": [0, 10, 11, 15, 22, 31, 35, 36, 38], "interact": 0, "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "file": [0, 4, 5, 10, 16, 24, 27, 31, 32, 34, 38, 43], "server": [0, 34], "connect": [0, 2, 7, 16, 23, 38, 43], "should": [0, 5, 6, 9, 10, 12, 23, 25, 32, 34, 35, 38, 39, 40, 42], "have": [0, 3, 5, 10, 14, 15, 25, 30, 35, 38, 39, 42, 43], "name": [0, 5, 10, 11, 12, 15, 16, 21, 23, 27, 35], "path": [0, 10, 16, 22, 23, 25, 27, 32, 35, 36, 38], "specifi": [0, 2, 5, 10, 11, 14, 19, 20, 21, 35, 38, 41], "under": [0, 35, 38], "extra": [0, 7, 38], "exampl": [0, 5, 10, 12, 14, 15, 21, 32, 34, 35, 36, 38, 42], "id": [0, 7, 11, 15, 16, 22, 31, 34, 43], "fs_test": 0, "type": [0, 3, 5, 7, 10, 11, 15, 25, 27, 32, 35, 38], "host": 0, "schema": 0, "login": 0, "password": 0, "port": 0, "empti": [0, 12, 15, 35, 38], "tmp": [0, 35, 38, 43], "conn_name_attr": [0, 2], "fs_default": [0, 16, 43], "conn_typ": [0, 2], "f": [0, 35, 38], "hook_nam": [0, 2], "classmethod": [0, 7, 15], "get_connection_form_widget": 0, "return": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 25, 27, 35, 38, 40, 45], "widget": 0, "add": [0, 5, 10, 12, 30, 31, 35, 38], "form": [0, 10], "get_ui_field_behaviour": [0, 2], "custom": [0, 2], "field": [0, 2, 10, 15], "behaviour": [0, 2, 15], "get_conn": [0, 2], "get_path": 0, "get": [0, 5, 10, 15, 18, 34, 38, 39], "locat": [0, 35], "str": [0, 3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 25, 27, 35, 38], "test_connect": [0, 2], "test": [0, 2, 31, 35, 39, 42], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "dev0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "experiment": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "featur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "filesystem": [1, 4, 10, 17, 30, 31, 43], "package_index": [1, 4], "subprocess": [1, 4, 5], "addit": [2, 10, 27, 35, 38, 42], "packag": [2, 10, 27, 30, 32, 38], "index": [2, 10, 27, 31, 38], "python": [2, 4, 8, 17, 27, 30, 31, 32, 33, 34, 38, 45], "packageindexhook": [2, 31], "pi_conn_id": 2, "us": [2, 3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 27, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45], "package_index_default": 2, "static": [2, 38], "get_connection_url": 2, "url": [2, 10, 27, 38], "embed": [2, 32], "credenti": 2, "subprocessresult": 3, "working_directori": 3, "cwd": [3, 5, 35], "none": [3, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 27, 34, 36, 38], "context": [3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 27, 35], "manag": [3, 34], "handl": [3, 14, 19, 20, 25, 38], "temporari": [3, 5, 13, 34, 35, 38], "work": [3, 5, 10, 35], "directori": [3, 5, 13, 16, 23, 27, 34, 35, 38], "given": [3, 9, 10, 16, 25, 36], "otherwis": [3, 5, 32, 36, 38, 40], "creat": [3, 5, 7, 10, 11, 14, 16, 19, 20, 25, 27, 30, 34, 35, 38], "subprocesshook": [3, 31], "run": [3, 5, 6, 9, 10, 11, 12, 14, 15, 20, 21, 22, 23, 25, 34, 36, 38, 41, 42], "process": [3, 5, 10, 13, 35], "run_command": 3, "command": [3, 5, 13, 38, 40], "env": [3, 5, 13, 35, 38], "output_encod": [3, 5, 13], "utf": [3, 5, 13], "8": [3, 5, 13, 31], "execut": [3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 27, 31, 36, 38, 45], "If": [3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 21, 22, 27, 34, 35, 36, 38, 42], "which": [3, 5, 6, 9, 10, 12, 13, 14, 15, 19, 22, 32, 35, 38, 39, 42], "clean": [3, 5, 10, 38], "afterward": 3, "suppli": 3, "o": [3, 10, 34, 38], "environ": [3, 5, 10, 13, 27, 32], "pass": [3, 5, 6, 9, 10, 12, 14, 15, 16, 19, 21, 31, 35, 43], "paramet": [3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 30, 31, 35, 36, 38, 42], "list": [3, 6, 7, 9, 10, 11, 12, 15, 18, 22, 27, 31, 32, 35, 38], "dict": [3, 5, 7, 10, 11, 14, 16, 18, 19, 25, 27], "option": [3, 10, 11, 12, 15, 21, 27, 32, 42], "contain": [3, 5, 9, 10, 15, 22, 32, 34, 35, 38], "variabl": [3, 5, 10, 13, 27, 32, 35, 38], "made": [3, 10, 18, 34, 38], "avail": [3, 10, 15, 18, 27, 30, 32, 34, 38], "shell": [3, 5, 35], "omit": 3, "note": [3, 9, 10, 11, 15, 38, 42], "case": [3, 14, 25, 35, 38, 39], "you": [3, 5, 10, 12, 15, 21, 22, 32, 33, 34, 35, 38, 39, 42, 43], "sentri": 3, "configur": [3, 10, 11, 30, 31, 38], "origin": [3, 34], "from": [3, 5, 7, 10, 12, 14, 16, 19, 20, 21, 27, 30, 31, 38, 39], "also": [3, 5, 12, 15, 21, 25, 31, 34, 35, 36, 38, 42, 43], "subprocess_": 3, "prefix": [3, 5], "see": [3, 10, 15, 27, 31, 32, 33, 38], "http": [3, 34, 35, 38], "apach": [3, 22, 30, 32, 34, 35, 38], "org": [3, 34, 35], "doc": [3, 31], "stabl": 3, "administr": 3, "deploy": 3, "log": [3, 10, 38], "monitor": [3, 15, 22], "error": [3, 13, 15, 35], "html": 3, "detail": [3, 31, 34], "encod": [3, 5, 13], "decod": 3, "stdout": [3, 5], "default": [3, 5, 7, 10, 11, 13, 15, 16, 22, 23, 32, 35, 38, 39, 43], "namedtupl": 3, "exit_cod": 3, "output": [3, 5, 10, 13, 38], "last": [3, 5], "line": [3, 5], "stderr": 3, "send_sigterm": 3, "send": 3, "sigterm": 3, "signal": 3, "self": [3, 10, 11, 15, 34], "sub_process": 3, "one": [3, 6, 10, 12, 14, 15, 22, 34, 36, 38], "exist": [3, 5, 11, 15, 16, 22, 33], "hook": [4, 5, 7, 30, 31, 38], "oper": [4, 14, 15, 16, 19, 20, 30, 31, 32, 35, 36, 38, 41, 45], "bash": [4, 8, 17, 31, 34], "datetim": [4, 8, 11, 14, 15, 16, 19, 20, 22, 25, 36, 38, 41], "generic_transf": [4, 8], "latest_onli": [4, 8], "trigger_dagrun": [4, 8], "weekdai": [4, 8, 17, 35, 36, 41], "sensor": [4, 30, 31, 42, 43, 45], "date_tim": [4, 17], "external_task": [4, 17, 24], "time": [4, 6, 13, 15, 17, 20, 22, 23, 25, 31, 38, 41, 42], "time_delta": [4, 17], "trigger": [4, 9, 11, 14, 15, 16, 19, 20, 30, 31, 38, 41], "tempor": [4, 24], "util": [4, 5, 6, 9, 11, 12, 21, 22, 31], "python_virtualenv": [4, 26], "sensor_help": [4, 26], "version_compat": 4, "__version__": 4, "bashoper": [5, 31, 37], "bash_command": [5, 13, 35, 40], "append_env": 5, "fals": [5, 6, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 38], "skip_on_exit_cod": [5, 10, 35], "99": [5, 35], "output_processor": [5, 35], "lambda": [5, 35, 38], "result": [5, 10, 15, 36], "model": [5, 7, 10, 11, 15, 30, 31, 39], "baseoper": [5, 7, 10, 11, 15], "script": [5, 13, 27, 31, 34, 35], "set": [5, 10, 11, 12, 13, 14, 15, 16, 19, 21, 23, 32, 36, 38, 42], "For": [5, 6, 10, 12, 13, 15, 16, 18, 19, 20, 21, 31, 32, 33, 34, 35, 38, 42], "more": [5, 6, 7, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 27, 32, 36, 38], "inform": [5, 6, 10, 12, 13, 16, 18, 19, 20, 21, 25, 27, 31, 32, 38, 39], "how": [5, 6, 10, 12, 13, 16, 18, 19, 20, 21, 22, 25, 31, 34, 35], "take": [5, 6, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 35, 36, 38], "look": [5, 6, 10, 12, 13, 15, 16, 18, 19, 20, 21, 32], "guid": [5, 6, 10, 12, 13, 16, 18, 19, 20, 21, 31, 34], "do_xcom_push": 5, "true": [5, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 27, 36, 38, 40, 41, 42, 43, 45], "written": 5, "push": [5, 10, 35, 38], "xcom": [5, 10, 35, 38], "when": [5, 6, 7, 10, 11, 14, 15, 16, 18, 19, 20, 21, 23, 25, 27, 30, 31, 35, 36, 38, 39, 40, 42], "complet": [5, 11, 13, 15, 16, 20, 22, 38], "argnotset": 5, "The": [5, 7, 10, 11, 13, 14, 15, 16, 19, 22, 25, 27, 30, 32, 33, 34, 35, 36, 38, 39, 40, 45], "refer": [5, 7, 10, 11, 13, 14, 16, 18, 19, 20, 30, 31], "must": [5, 10, 11, 13, 25, 32, 35], "sh": [5, 13, 35], "templat": [5, 7, 10, 11, 13, 14, 15, 16, 18, 19, 20, 27, 30, 31], "defin": [5, 10, 13, 35, 38, 43], "new": [5, 10, 13, 31, 38, 39], "ar": [5, 6, 9, 10, 11, 13, 14, 15, 18, 23, 32, 33, 34, 35, 36, 38, 39, 42], "instead": [5, 13, 14, 30, 35], "inherit": [5, 10, 13], "current": [5, 6, 10, 12, 13, 15, 38], "behavior": [5, 10, 13, 15, 16, 23, 35], "bool": [5, 6, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27], "param": [5, 7, 22], "doe": [5, 14, 15, 36, 38], "user": [5, 10, 11, 15, 18, 34, 35, 42], "either": [5, 10, 15, 16, 38], "updat": [5, 31], "append": 5, "int": [5, 10, 11, 13, 15, 20], "collect": [5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22], "abc": [5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 18, 21], "task": [5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 25, 30, 31, 35, 38, 42, 45], "exit": [5, 10, 13, 35, 40], "code": [5, 10, 13, 30, 31, 34, 35, 38], "leav": [5, 10], "skip": [5, 9, 10, 11, 15, 22, 38, 42], "state": [5, 10, 11, 15, 22, 35], "ani": [5, 10, 12, 13, 14, 15, 16, 18, 19, 25, 34, 35, 36, 38, 40], "non": [5, 10, 13, 35, 36], "zero": [5, 10, 13, 35], "treat": [5, 10, 13], "failur": [5, 10, 22, 35], "To": [5, 12, 15, 21, 34, 35, 38], "dag": [5, 10, 11, 14, 15, 20, 21, 22, 35, 36, 38, 44], "folder": [5, 10, 16, 23, 31, 34, 35, 38], "might": [5, 36, 38, 39], "dag_run": [5, 9, 35], "write": [5, 35], "access": [5, 11, 15, 18, 35, 38], "render": [5, 7, 10, 11, 14, 16, 19, 20, 27, 35], "jinja": [5, 7, 10, 11, 14, 16, 19, 20, 27, 38], "callabl": [5, 10, 15, 18, 35, 38, 45], "function": [5, 11, 15, 18, 35, 38], "further": [5, 38], "evalu": [5, 10, 38], "In": [5, 10, 30, 35, 36, 38, 42], "gener": [5, 11, 35, 38], "success": [5, 11, 15, 22, 25, 42], "anoth": [5, 7, 35, 42], "throw": 5, "except": [5, 13, 35, 36, 39], "airflowskipexcept": [5, 35], "can": [5, 10, 12, 14, 15, 16, 21, 23, 30, 31, 32, 33, 34, 35, 36, 38, 39, 42, 43], "all": [5, 9, 10, 11, 14, 30, 32, 33, 35, 38, 39, 42], "rais": [5, 10, 11, 13, 35, 36], "airflowexcept": [5, 35], "recogn": 5, "unless": 5, "whole": 5, "issu": [5, 38], "aris": 5, "sub": [5, 10], "easiest": 5, "wai": [5, 30, 31, 38], "address": 5, "e": [5, 9, 14, 15, 18, 38, 42], "python3": 5, "py": [5, 30, 31, 35, 36, 38, 40, 41, 42, 43, 45], "data_interval_end": [5, 14, 20], "simpli": [5, 15], "without": [5, 10, 14, 15, 16, 19, 20, 30, 38], "space": [5, 35, 38], "after": [5, 10, 14, 18, 19, 20, 23, 25, 35, 36, 38, 41], "argument": [5, 10, 14, 15, 16, 18, 19, 22, 23, 25, 35, 36], "my_script": 5, "becaus": [5, 14, 20, 35, 36, 38], "tri": [5, 35], "load": [5, 7, 10, 27, 35], "end": [5, 14, 19, 20, 35, 41], "your": [5, 10, 18, 27, 35, 36, 38, 43], "do": [5, 12, 14, 25, 34, 35], "put": [5, 18, 42], "blank": 5, "And": 5, "": [5, 6, 10, 12, 15, 18, 20, 21, 25, 34, 35, 36, 38], "template_searchpath": [5, 35], "care": [5, 35], "taken": [5, 35], "input": [5, 18, 35], "perform": [5, 35, 36, 38], "escap": [5, 35], "sanit": [5, 35], "appli": [5, 10, 18, 35], "mostli": [5, 15, 35], "conf": [5, 10, 11, 15, 16, 20, 27, 35], "submit": [5, 35], "via": [5, 33, 34, 35, 38, 42, 43], "web": [5, 15, 35], "ui": [5, 15, 35], "most": [5, 9, 34, 35, 38], "risk": [5, 35], "bash_task": [5, 35], "task_id": [5, 6, 9, 10, 12, 14, 15, 21, 35, 36, 38, 40, 41, 42, 43, 45], "echo": [5, 34, 35], "here": [5, 25, 35], "messag": [5, 35], "els": [5, 35], "doubl": [5, 35], "quot": [5, 35], "insid": [5, 10, 16, 31, 35, 38], "below": [5, 6, 10, 32, 33, 34, 35, 38], "version": [5, 10, 30, 31, 33, 34, 38, 39, 41], "2": [5, 10, 14, 15, 22, 32, 33, 38, 41], "10": [5, 14, 15, 31, 36, 38], "template_field": [5, 7, 10, 11, 13, 14, 15, 16, 18], "sequenc": [5, 7, 10, 11, 13, 14, 16, 18], "template_fields_render": [5, 7, 10, 11], "template_ext": [5, 7, 10], "ui_color": [5, 7, 9, 10, 11, 15, 16], "f0ede4": 5, "subprocess_hook": 5, "get_env": 5, "build": [5, 34, 35], "expos": [5, 7], "deriv": [5, 7, 10, 11, 14, 15, 16, 18, 19, 20, 21, 30], "same": [5, 7, 10, 11, 14, 15, 16, 19, 20, 25, 38, 42], "dictionari": [5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 38], "get_template_context": [5, 7, 10, 11, 14, 16, 19, 20], "on_kil": 5, "overrid": [5, 14, 15, 16, 18, 19, 20, 21, 38], "method": [5, 6, 7, 9, 10, 12, 30], "up": [5, 10, 14, 19, 20, 38], "instanc": 5, "kill": 5, "thread": 5, "multiprocess": 5, "within": [5, 16, 23, 35, 38], "need": [5, 7, 10, 14, 15, 25, 35, 38, 43], "ghost": 5, "behind": 5, "branchdatetimeoper": [6, 30, 37], "follow_task_ids_if_tru": [6, 12, 36], "follow_task_ids_if_fals": [6, 12, 36], "target_low": [6, 36], "target_upp": [6, 36], "use_task_logical_d": [6, 12, 21, 30, 36], "branch": [6, 9, 10, 12, 30, 36, 38, 39], "basebranchoper": [6, 9, 12], "two": [6, 12, 25, 36, 42], "depend": [6, 10, 12, 15, 31, 36, 38, 39, 44], "now": [6, 41], "fall": [6, 36], "abov": [6, 15, 34, 36], "iter": [6, 10, 12, 15, 21, 22], "task_group_id": [6, 10, 12, 15], "follow": [6, 10, 12, 15, 30, 32, 34, 36, 38, 39], "target": [6, 7, 10, 15, 31, 36], "lower": [6, 35], "bound": 6, "upper": 6, "logic": [6, 9, 11, 12, 15, 21, 22, 35], "date": [6, 11, 12, 15, 21, 22], "compar": [6, 12, 21], "backfil": [6, 11, 12, 14, 21], "system": [6, 10, 11, 12, 15, 21, 25, 27, 38, 42], "choose_branch": [6, 9, 12], "abstract": [6, 9, 12], "choos": [6, 9, 12, 34], "subclass": [6, 9, 12, 25], "implement": [6, 9, 10, 12, 30, 31], "whatev": [6, 9, 12, 38], "necessari": [6, 9, 12, 15], "target_times_as_d": 6, "base_d": 6, "ensur": [6, 35, 38], "combin": [6, 35, 36, 42], "them": [6, 38, 42], "generictransf": [7, 31], "sql": [7, 10, 33, 38], "destination_t": 7, "source_conn_id": 7, "source_hook_param": 7, "destination_conn_id": 7, "destination_hook_param": 7, "preoper": 7, "insert_arg": 7, "move": [7, 10, 30, 31, 35, 36], "data": [7, 10, 20, 35, 36, 38, 42, 45], "assum": [7, 10, 38], "thei": [7, 25], "both": [7, 10, 15, 35, 36, 38], "requir": [7, 10, 14, 16, 19, 27, 31, 38, 39, 41], "respect": [7, 10, 15, 38], "get_record": 7, "destin": 7, "insert_row": 7, "meant": [7, 10, 38], "small": 7, "ish": 7, "dataset": 7, "fit": [7, 35], "memori": 7, "queri": [7, 15, 38], "against": [7, 15, 42], "databas": [7, 11, 22], "tabl": 7, "statement": 7, "prior": 7, "hql": [7, 10], "b0f07c": 7, "get_hook": 7, "conn_id": 7, "hook_param": 7, "downstream": [9, 10, 12, 15, 35, 38], "onli": [9, 10, 11, 13, 16, 30, 36, 38, 39, 42], "latest": [9, 31, 39], "schedul": [9, 14, 36, 38, 42], "dagrun": [9, 36, 38], "latestonlyoper": [9, 30, 31], "pre_execut": 9, "post_execut": 9, "on_execute_callback": 9, "on_failure_callback": 9, "on_success_callback": 9, "on_retry_callback": 9, "on_skipped_callback": 9, "dure": [9, 14, 16, 19, 38], "recent": 9, "interv": [9, 11, 20, 22, 42], "outsid": [9, 10], "external_trigg": 9, "directli": [9, 10, 14, 16, 19, 20, 35], "never": [9, 13], "mark": [9, 10, 11, 15, 25, 31], "extern": [9, 10, 11, 15, 22, 30, 31, 38], "e9ffdb": 9, "pythonoper": [10, 30, 37], "python_cal": [10, 18, 38, 45], "op_arg": [10, 18, 38], "op_kwarg": [10, 18, 38], "templates_dict": [10, 18, 38], "templates_ext": [10, 38], "show_return_value_in_log": 10, "keyword": [10, 14, 15, 16, 18, 19, 25, 38], "correspond": 10, "exactli": [10, 15, 23, 25], "what": 10, "header": [10, 31], "would": [10, 12, 15, 27, 38], "like": [10, 15, 31, 35, 38, 42], "valu": [10, 12, 15, 18, 21, 22, 35, 36, 38, 40, 45], "ti": [10, 38], "With": [10, 38], "explicit": 10, "def": [10, 35, 38, 45], "my_python_cal": 10, "A": [10, 14, 18, 20, 22, 23, 25, 35, 42], "object": [10, 11, 15, 18, 27, 35, 36, 38], "posit": [10, 15, 18], "unpack": [10, 18, 27], "call": [10, 18, 35, 38], "map": [10, 13, 14, 16, 18, 19], "where": [10, 18, 27, 35, 38, 39], "engin": [10, 18], "sometim": [10, 18, 42], "between": [10, 18, 23, 36], "__init__": [10, 18], "place": [10, 18, 35], "ha": [10, 14, 18, 22, 30, 35, 36, 38], "been": [10, 18, 30], "extens": [10, 35], "resolv": 10, "while": [10, 14, 19, 20, 25, 38], "whether": [10, 11, 16, 25, 27, 36, 38], "show": 10, "return_valu": 10, "It": [10, 11, 14, 15, 30, 34, 35, 36, 38, 41], "prevent": [10, 15, 38], "huge": 10, "transmiss": 10, "larg": 10, "amount": 10, "taskapi": 10, "blue": 10, "ffefeb": [10, 11], "shallow_copy_attr": 10, "determine_kwarg": 10, "execute_cal": 10, "branchpythonoper": [10, 38], "branchmixin": 10, "workflow": [10, 35, 36], "expect": 10, "singl": [10, 12, 21, 42], "point": [10, 15, 35, 38], "group": [10, 15, 22, 38], "other": [10, 13, 15, 35, 38, 40, 42], "so": [10, 25, 32, 35, 36, 38, 39], "t": [10, 15, 21, 25, 35, 38], "forward": 10, "propag": 10, "fill": [10, 36], "infer": 10, "shortcircuitoper": [10, 37], "ignore_downstream_trigger_rul": [10, 38], "skipmixin": 10, "pipelin": [10, 35, 38], "continu": [10, 15, 38], "falsi": [10, 38], "short": [10, 38], "circuit": [10, 38], "mode": [10, 11, 15, 20, 36, 38, 42, 43, 45], "truthi": [10, 38], "proce": 10, "normal": [10, 38], "ignor": [10, 38], "trigger_rul": [10, 38], "consid": [10, 15, 22, 35, 38, 42], "howev": [10, 15, 35, 42], "direct": [10, 38], "subsequ": [10, 38], "were": [10, 30, 32, 38], "purpos": [10, 38], "perhap": [10, 38], "pythonvirtualenvoper": [10, 30, 31, 37], "python_vers": 10, "serial": [10, 15, 22, 23, 25, 30, 38], "system_site_packag": [10, 27, 38], "pip_install_opt": [10, 27, 38], "string_arg": 10, "expect_airflow": [10, 38], "index_url": [10, 27, 38], "venv_cache_path": [10, 38], "env_var": 10, "inherit_env": 10, "use_airflow_context": [10, 38], "_basepythonvirtualenvoper": 10, "virtualenv": [10, 27, 30, 31, 38], "destroi": 10, "automat": [10, 11, 32, 38], "certain": [10, 36], "caveat": 10, "part": [10, 38], "import": [10, 12, 21, 30, 31, 34, 35, 38], "happen": [10, 15, 36, 38, 42], "scope": [10, 39], "mai": [10, 30, 35, 42], "referenc": 10, "global": [10, 38], "virtualenv_string_arg": 10, "popul": 10, "stuff": [10, 38], "through": [10, 38], "differ": [10, 15, 20, 34, 35, 36, 38, 42], "major": [10, 14, 39], "than": [10, 15, 25, 36, 38], "cannot": 10, "macro": 10, "being": 10, "plugin": 10, "though": 10, "virtual": [10, 27, 32], "string": [10, 32, 35], "pip": [10, 27, 32, 33, 34, 38], "7": [10, 32, 38], "accept": 10, "_serializertypedef": 10, "arg": 10, "pickl": [10, 38], "includ": [10, 27, 31, 33, 39], "librari": [10, 38], "cloudpickl": [10, 38], "complex": 10, "dill": [10, 30, 38], "document": [10, 27, 31, 32], "instal": [10, 27, 32, 38, 39], "h": [10, 27], "present": 10, "var": [10, 38], "runtim": [10, 11, 15, 38], "split": [10, 31], "newlin": 10, "warn": [10, 34], "attempt": [10, 38], "start": [10, 14, 16, 19, 20, 32, 38, 42], "pathlik": 10, "parent": 10, "cach": 10, "venv": [10, 30, 31, 38], "hash": [10, 38], "wherea": 10, "replac": [10, 14, 20, 27, 38], "checksum": [10, 34], "delet": [10, 38], "temp": [10, 38], "everi": [10, 38], "get_current_context": [10, 38], "NOT": 10, "yet": [10, 13, 22], "wait": [10, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 38, 42, 45], "aip": [10, 30, 31], "72": 10, "txt": [10, 27, 38], "branchpythonvirtualenvoper": [10, 37], "externalpythonoper": [10, 37], "expect_pendulum": 10, "re": [10, 25, 36, 38], "reus": 10, "overhead": 10, "fail": [10, 11, 13, 15, 22, 35, 42], "full": [10, 12, 21], "specif": [10, 15, 22, 38, 41, 42], "binari": [10, 27, 34, 38], "bin": [10, 34, 38], "absolut": 10, "usual": [10, 13, 38, 42], "x": 10, "branchexternalpythonoper": [10, 37], "extend": 10, "separ": [10, 35, 39], "similarli": 10, "retriev": 10, "alter": [10, 15], "signatur": [10, 11, 15, 34], "simplest": 10, "old": [10, 11, 15], "style": [10, 38], "my_task": 10, "wa": [10, 11, 15, 30, 32, 36], "xcom_logical_date_iso": 11, "trigger_logical_date_iso": 11, "xcom_run_id": 11, "trigger_run_id": 11, "triggerdagrunlink": 11, "baseoperatorlink": [11, 15], "link": [11, 15, 34, 38], "triggerdagrunoper": [11, 30, 31], "get_link": [11, 15], "ti_kei": [11, 15, 35], "dttm": [11, 15], "That": [11, 15], "still": [11, 15, 30, 38], "support": [11, 15, 30, 31, 33, 38], "deprec": [11, 15, 30, 31], "associ": [11, 15], "taskinstancekei": [11, 15], "taskinst": [11, 15, 30, 31, 38], "trigger_dag_id": [11, 30, 31], "logical_d": [11, 14, 15, 22, 30, 31, 35, 36], "reset_dag_run": 11, "wait_for_complet": 11, "poke_interv": [11, 22, 23, 45], "60": [11, 35, 45], "allowed_st": [11, 15, 22, 42], "failed_st": [11, 15, 22, 42], "skip_when_already_exist": 11, "deferr": [11, 15, 16, 20, 30, 31, 42, 43], "getboolean": [11, 15, 16, 20], "default_deferr": [11, 15, 16, 20], "fallback": [11, 15, 16, 20], "isol": 11, "enabl": [11, 16, 23, 35], "dag_id": [11, 15, 22, 42], "clear": [11, 15, 42], "alreadi": [11, 14, 34], "rerun": 11, "reset": 11, "recreat": 11, "immut": 11, "dagrunalreadyexist": 11, "poke": [11, 13, 14, 15, 16, 18, 19, 20, 21, 22], "check": [11, 12, 13, 15, 21, 22, 30, 31, 34, 35, 42, 45], "statu": [11, 15, 22, 38], "dagrunst": [11, 15, 22], "valid": [11, 34], "disallow": 11, "defer": [11, 14, 15, 16, 20], "until": [11, 14, 15, 16, 19, 21, 23, 25, 30], "done": [11, 16, 36, 38, 39], "operator_extra_link": [11, 15], "execute_complet": [11, 14, 15, 16, 19, 20], "session": [11, 15, 22], "event": [11, 14, 15, 16, 19, 20, 25, 36], "branchdayofweekoper": [12, 30, 31, 37], "week_dai": [12, 21, 36, 41], "dai": [12, 14, 15, 19, 21, 35, 36, 41], "emptyoper": [12, 15, 36, 38], "mondai": [12, 21, 36, 41], "other_dai": 12, "monday_check": 12, "enum": [12, 21], "workdai": 12, "weekend": [12, 36], "weekend_check": [12, 21], "saturdai": [12, 21, 35, 36], "sundai": [12, 21, 35, 36], "criteria": [12, 22], "met": [12, 25], "week": [12, 21, 36, 41], "tuesdai": [12, 21], "is_todai": 12, "bashsensor": [13, 44], "retry_exit_cod": 13, "basesensoroper": [13, 14, 15, 16, 18, 19, 20, 21], "retri": [13, 15], "later": [13, 38], "accord": 13, "timeout": [13, 14, 15, 16, 19, 30, 31, 40, 41, 42, 45], "caus": [13, 15], "out": [13, 15, 31, 38, 39], "starttriggerarg": [14, 16, 19, 30], "trigger_cl": [14, 16, 19], "next_method": [14, 16, 19], "trigger_kwarg": [14, 16, 19], "next_kwarg": [14, 16, 19], "timedelta": [14, 15, 16, 19, 20, 25, 41, 42], "datetimesensor": 14, "target_tim": [14, 19, 41], "advantag": [14, 35, 38], "idempot": [14, 36], "some": [14, 25, 36, 38, 42], "timesensor": [14, 19, 44], "timedeltasensor": [14, 20, 44], "suit": 14, "1": [14, 15, 33, 38, 40, 41, 42], "11am": 14, "each": [14, 23, 38], "1am": 14, "hour": [14, 41, 42], "unnecessari": 14, "g": [14, 15, 18, 42], "d": [14, 34, 38], "1970": [14, 18], "01": [14, 31], "01t11": 14, "00": [14, 36], "23": 14, "daili": [14, 42], "next": [14, 21, 39], "immedi": [14, 15, 19, 20], "we": [14, 25, 30, 39, 42], "wait_for_0100": 14, "tomorrow": 14, "job": [14, 19, 23, 43], "succe": [14, 15, 19, 40], "datetimesensorasync": 14, "start_from_trigg": [14, 16, 19], "end_from_trigg": [14, 19, 20, 25], "occur": [14, 36], "itself": [14, 20, 39], "avoid": [14, 20], "worker": [14, 15, 16, 19, 20, 38], "slot": [14, 19, 20, 38], "drop": [14, 20, 34, 38], "go": [14, 16, 19, 20], "dynam": [14, 16, 19], "usag": [14, 16, 19], "start_trigger_arg": [14, 16, 19], "fire": [14, 15, 19, 20, 23, 25], "externaldaglink": 15, "externaltasksensor": 15, "externaltaskmark": 15, "external_dag_id": [15, 22, 42], "external_task_id": [15, 22, 42], "external_task_group_id": [15, 22, 42], "skipped_st": [15, 22], "execution_delta": [15, 42], "execution_date_fn": 15, "check_exist": 15, "poll_interv": [15, 22], "By": [15, 34, 35], "thu": [15, 35], "give": [15, 25], "chang": [15, 25, 31, 35, 36, 39], "taskinstancest": 15, "multipl": [15, 21, 38], "enter": 15, "react": 15, "whichev": 15, "first": [15, 21, 36], "togeth": [15, 42], "prioriti": 15, "possibl": [15, 35], "flip": 15, "goe": 15, "green": [15, 38], "red": [15, 38], "soft_fail": [15, 22, 40, 41, 45], "examin": 15, "_skip_": 15, "rather": [15, 25, 38], "As": [15, 38], "contriv": 15, "want": [15, 21, 22, 34, 35, 38, 39], "make": [15, 31, 36, 38, 42], "di": 15, "previou": [15, 34], "yesterdai": 15, "receiv": [15, 35, 36, 39], "number": [15, 25], "desir": [15, 35, 42], "ceas": 15, "float": [15, 22, 23], "poll": 15, "period": [15, 20, 22, 36], "second": [15, 22, 25, 36, 38, 41], "4db7db": 15, "new_sess": [15, 22], "get_count": 15, "dttm_filter": 15, "count": [15, 22], "record": 15, "filter": 15, "get_external_task_group_task_id": 15, "isoformat": 15, "recursion_depth": 15, "indic": [15, 34], "recurs": [15, 16, 23, 42], "select": [15, 32, 34, 35, 38, 42], "its": [15, 25, 27, 36, 38, 45], "transit": 15, "reach": [15, 25], "maximum": 15, "level": [15, 31, 38], "cyclic": 15, "fine": 15, "increas": 15, "too": 15, "mani": [15, 22, 35], "slower": 15, "get_serialized_field": 15, "templated_field": 15, "filesensor": [16, 44], "filepath": [16, 23, 43], "land": 16, "subdirectori": [16, 38], "rel": [16, 23, 35], "glob": [16, 23, 35], "match": [16, 22, 23, 34], "91818a": 16, "pythonsensor": [18, 44], "could": 18, "start_d": 18, "timesensorasync": [19, 44], "free": 19, "delta": [20, 25, 41], "length": 20, "befor": [20, 35, 36, 38], "succeed": [20, 42], "timedeltasensorasync": [20, 44], "Will": 20, "waitsensor": 20, "time_to_wait": 20, "measur": 20, "dayofweeksensor": [21, 30, 44], "2018": 21, "12": [21, 31, 34], "22": 21, "fridai": 21, "don": [21, 25], "anyth": 21, "workflowtrigg": 22, "execution_d": [22, 30, 31, 42], "basetrigg": [22, 23, 25], "entir": 22, "async": [22, 23, 25, 41], "dagstatetrigg": 22, "5": [22, 23, 38], "asynchron": 22, "sec": 22, "classpath": [22, 23], "hit": 22, "count_dag": 22, "our": 22, "filetrigg": 23, "onc": [23, 25, 34, 38], "find": [23, 38], "request": 23, "try": [23, 35], "loop": [23, 25], "relev": [23, 25, 34], "found": [23, 39], "datetimetrigg": 25, "moment": [25, 36], "few": 25, "utc": [25, 41], "yield": 25, "condit": [25, 35, 38, 45], "resum": 25, "reconstruct": 25, "tupl": 25, "instanti": 25, "phase": 25, "delai": [25, 36], "save": 25, "cycl": 25, "sleep": [25, 35, 38], "cheap": 25, "anywai": 25, "pretti": 25, "loos": 25, "just": 25, "clock": [25, 36], "unexpectedli": 25, "dst": 25, "poorli": 25, "timedeltatrigg": 25, "exact": 25, "own": 25, "distinct": 25, "serialis": 25, "sinc": [25, 36, 38], "operation": 25, "long": 25, "prepare_virtualenv": 27, "venv_directori": 27, "python_bin": 27, "requirements_file_path": 27, "write_python_script": 27, "jinja_context": 27, "filenam": 27, "render_template_as_native_obj": 27, "placehold": 27, "dump": 27, "convert": 27, "nativ": 27, "get_base_airflow_version_tupl": 29, "airflow_v_2_10_plu": 29, "airflow_v_3_0_plu": 29, "airflow": [30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45], "provid": [30, 32, 34, 38, 39, 42], "standard": [30, 34, 38], "wip": 30, "product": 30, "introduc": [30, 31], "semver": [30, 39], "releas": [30, 31, 33], "9": [30, 31, 33], "explain": 30, "polici": [30, 39], "class": [30, 33], "remov": [30, 31, 34], "ssh": 30, "use_dil": 30, "pleas": [30, 34, 38], "decor": [30, 35, 38, 45], "44541": [30, 31], "backward": 30, "compat": [30, 31, 38], "44458": [30, 31], "airflow_v_2_9_plu": [30, 31], "44987": [30, 31], "bump": [30, 31], "minimum": [30, 33], "44956": [30, 31], "pydanitc": [30, 31], "44": [30, 31], "44552": [30, 31], "consist": [30, 31], "44686": [30, 31], "33718": [30, 31], "renderedtifield": [30, 31], "44546": [30, 31], "44540": [30, 31], "44309": [30, 31], "44454": [30, 31], "44288": [30, 31], "43608": [30, 31], "extra_link": [30, 31], "42810": [30, 31], "44053": [30, 31], "43890": [30, 31], "renam": [30, 31], "across": [30, 31, 42], "codebas": [30, 31], "43902": [30, 31], "migrat": 30, "core": [30, 32, 42], "use_task_execution_d": 30, "built": 30, "is_venv_instal": 30, "initi": 30, "41564": [30, 31], "commit": 31, "high": 31, "changelog": 31, "2024": 31, "18": 31, "subject": 31, "2a33da0246": 31, "4b38bed76c": 31, "16": 31, "min": 31, "8af1bbdf25": 31, "490b5e816b": 31, "e03265bb56": 31, "05": 31, "correct": [31, 34], "break": [31, 39], "44659": 31, "8ca061ddf5": 31, "03": 31, "74ff524a6d": 31, "02": 31, "miss": 31, "44581": 31, "c44690c1c8": 31, "cbc287052e": 31, "62bac46822": 31, "57d109c8a6": 31, "11": [31, 34], "30": 31, "ab2bd2d4a9": 31, "28": 31, "e9f544cc3f": 31, "0c30c4d9af": 31, "27": 31, "4404e64247": 31, "25": 31, "24": 31, "f0da8eeab3": 31, "prepar": [31, 39], "nov": 31, "2nd": 31, "wave": 31, "ad": [31, 35, 36, 38], "hoc": 31, "44321": 31, "1275fec92f": 31, "ruff": 31, "black": 31, "rule": [31, 38, 39], "44298": 31, "d0f433b024": 31, "21": 31, "fix": [31, 39], "f05ce08362": 31, "20": [31, 33], "36803b8bd9": 31, "17": 31, "b6c75d2cd6": 31, "rst": 31, "44110": 31, "123dadda0": 31, "15": [31, 36], "14": [31, 36], "a53d9f6d25": 31, "1st": 31, "44011": 31, "2ef8438eec": 31, "44018": 31, "e7194dff6a": 31, "13": 31, "semicolon": 31, "strip": 31, "dbapihook": 31, "prestohook": 31, "trinohook": 31, "41916": 31, "f757b87581": 31, "section": [31, 35], "43889": 31, "084e29e9e2": 31, "43716": 31, "9bbf6f16f7": 31, "09": 31, "43556": 31, "5f9fdf016d": 31, "config": [31, 38], "43674": 31, "286075f059": 31, "04": 31, "uv": [31, 32], "43612": 31, "fe0dd9b8b3": 31, "switch": 31, "43568": 31, "dd7f669e6c": 31, "31": 31, "readi": [31, 45], "43550": 31, "0c9e159dc4": 31, "43553": 31, "06088a3abc": 31, "42081": 31, "4d54cda411": 31, "conn": 31, "basesqloper": 31, "42891": 31, "0e112bf0e4": 31, "42783": 31, "2ed06d1e9f": 31, "chore": 31, "43053": 31, "420b24aa79": 31, "42794": 31, "857ca4c06c": 31, "main": [31, 34, 38, 39], "tree": 31, "workspac": 31, "project": 31, "42505": 31, "a5ffbbda17": 31, "42252": 31, "48e39b927a": 31, "revert": 31, "42": 31, "42659": 31, "61d1dbbc7f": 31, "42506": 31, "4c2c4079d6": 31, "42392": 31, "20ea6b7598": 31, "page": [32, 34], "cfg": 32, "previous": 32, "describ": [32, 34, 38], "tool": 32, "auto": 32, "airflow__standard__venv_install_method": 32, "top": [33, 34], "common": [33, 38], "download": [34, 38], "offici": 34, "down": 34, "left": 34, "sdist": 34, "whl": 34, "softwar": 34, "foundat": 34, "asc": 34, "sha512": 34, "those": [34, 36], "pgp": 34, "kei": [34, 38], "essenti": 34, "sha": 34, "gpg": 34, "well": 34, "distribut": 34, "recommend": [34, 35, 38, 45], "mirror": 34, "pgpk": 34, "ka": 34, "pgpv": 34, "tar": 34, "gz": 34, "sat": 34, "sep": 34, "49": 34, "54": 34, "2021": 34, "bst": 34, "rsa": 34, "cde15c6e4d3a8ec4ecf4ba4b6674e08ad7de406f": 34, "issuer": 34, "kaxilnaik": 34, "good": [34, 39], "kaxil": 34, "naik": 34, "unknown": 34, "aka": 34, "gmail": 34, "com": [34, 38], "certifi": 34, "trust": 34, "There": [34, 35], "belong": 34, "owner": 34, "primari": 34, "fingerprint": 34, "cde1": 34, "5c6e": 34, "4d3a": 34, "8ec4": 34, "ecf4": 34, "ba4b": 34, "6674": 34, "e08a": 34, "d7de": 34, "406f": 34, "worri": 34, "about": [34, 38, 39], "certif": 34, "sign": 34, "why": 34, "step": 34, "know": 34, "sum": 34, "shasum": 34, "512": 34, "diff": 34, "local": [34, 35, 38, 43], "package_vers": 34, "package_nam": 34, "provider_download_dir": 34, "mktemp": 34, "dep": 34, "dest": 34, "curl": 34, "apache_airflow_providers_standard": 34, "py3": 34, "l": 34, "la": 34, "instruct": [34, 39], "chapter": 34, "determin": 35, "taskflow": 35, "over": [35, 36, 38, 45], "classic": [35, 38, 45], "example_dag": [35, 36, 38, 40, 41, 42, 43, 45], "example_bash_decor": 35, "run_after_loop": 35, "run_thi": [35, 38], "example_bash_oper": 35, "parameter": 35, "also_run_thi": 35, "task_instance_key_str": 35, "also_thi": 35, "format": [35, 38], "also_run_this_again": 35, "also_this_again": 35, "encourag": 35, "approach": [35, 36], "nice": 35, "overal": 35, "paradigm": 35, "Or": 35, "produc": 35, "this_will_skip": 35, "hello": 35, "world": 35, "this_skip": 35, "particularli": 35, "manipul": 35, "scenario": 35, "json": 35, "transform": 35, "store": 35, "simplifi": 35, "result_processor": 35, "jq": 35, "c": 35, "lastmodifi": 35, "data_interval_start": [35, 38], "ts_zulu": 35, "filter_today_chang": 35, "content": [35, 38], "abl": 35, "disk": [35, 38], "usr": 35, "test_dag": 35, "shown": 35, "tash": 35, "bash_exampl": 35, "t2": [35, 41], "reason": [35, 39], "proper": 35, "highlight": 35, "compos": 35, "languag": 35, "flexibl": 35, "structur": 35, "constructor": 35, "opt": 35, "example_bash_dag": 35, "doesn": 35, "disabl": 35, "run_command_from_script": 35, "airflow_hom": 35, "run_script": 35, "encount": 35, "home": 35, "batcher": 35, "power": 35, "etc": 35, "help": [35, 38], "augment": 35, "even": [35, 36, 38], "sleep_in": 35, "No": 35, "todai": 35, "strftime": 35, "_get_files_in_cwd": 35, "pathlib": 35, "dir_cont": 35, "elem": 35, "is_fil": 35, "get_file_stat": 35, "shlex": 35, "join": 35, "cmd": 35, "stat": 35, "numer": 35, "pre": [35, 38], "rang": [36, 38], "machin": 36, "situat": 36, "cleanup": [36, 38], "mainten": 36, "realli": 36, "suppos": 36, "back": [36, 38], "actual": 36, "slightli": 36, "determinist": 36, "potenti": 36, "mean": [36, 38], "properli": 36, "decis": 36, "example_branch_datetime_oper": 36, "empty_task_11": 36, "date_in_rang": 36, "dag1": 36, "empty_task_21": 36, "date_outside_rang": 36, "cond1": 36, "datetime_branch": 36, "pendulum": [36, 38], "2020": 36, "order": 36, "comparison": 36, "span": 36, "empty_task_12": 36, "dag2": 36, "empty_task_22": 36, "cond2": 36, "unilater": 36, "much": 36, "friendli": 36, "affect": 36, "suitabl": 36, "empty_task_13": 36, "dag3": 36, "empty_task_23": 36, "cond3": 36, "example_branch_day_of_week_oper": 36, "empty_task_1": 36, "branch_tru": 36, "empty_task_2": 36, "branch_fals": 36, "empty_task_3": 36, "branch_weekend": 36, "empty_task_4": 36, "branch_mid_week": 36, "make_choic": 36, "make_weekend_choic": 36, "pythonbranchoper": 37, "example_python_decor": 38, "print_the_context": 38, "print_context": 38, "print": 38, "pprint": 38, "example_python_oper": 38, "endgroup": 38, "4": 38, "my_sleeping_funct": 38, "random_bas": 38, "sleeping_task": 38, "sleep_for_": 38, "log_the_sql": 38, "log_sql_queri": 38, "sampl": 38, "log_sql": 38, "info": 38, "task_inst": 38, "implicitli": 38, "explicitli": 38, "hint": 38, "analysi": 38, "example_python_context_decor": 38, "example_python_context_oper": 38, "constraint": 38, "addition": 38, "offer": [38, 42], "strong": 38, "focu": 38, "protocol": 38, "wider": 38, "smoother": 38, "exchang": 38, "effect": 38, "virtualenv_python": 38, "colorama": 38, "callable_virtualenv": 38, "modul": 38, "fore": 38, "text": 38, "background": 38, "dim": 38, "reset_al": 38, "_": 38, "flush": 38, "finish": 38, "virtualenv_task": 38, "unfortun": 38, "due": 38, "incompat": 38, "underli": 38, "sure": 38, "won": 38, "relat": [38, 42], "lazy_object_proxi": 38, "bodi": 38, "cut": 38, "w": 38, "surround": 38, "again": 38, "reli": 38, "somepackag": 38, "archiv": 38, "anotherpackag": 38, "my": 38, "adjust": 38, "privat": 38, "repositori": 38, "secret": 38, "special": 38, "remot": [38, 42], "forc": 38, "per": 38, "suffici": 38, "But": 38, "repeat": 38, "uniqu": 38, "subfold": 38, "variat": 38, "autom": 38, "share": 38, "individu": 38, "kubernet": 38, "pod": 38, "restart": 38, "persist": 38, "volum": 38, "problem": 38, "broken": 38, "influenc": 38, "cache_kei": 38, "vector": 38, "calcul": 38, "modif": 38, "post": 38, "pollut": 38, "maintain": 38, "limit": 38, "bit": 38, "challeng": 38, "involv": 38, "bypass": 38, "extent": 38, "print_the_context_venv": 38, "print_context_venv": 38, "preinstal": 38, "contrari": 38, "regular": 38, "activ": 38, "mere": 38, "path_to_python_binari": 38, "external_python": 38, "callable_external_python": 38, "sy": 38, "external_python_task": 38, "print_the_context_extern": 38, "some_external_python": 38, "print_context_extern": 38, "example_branch_operator_decor": 38, "choic": 38, "branch_": 38, "random": 38, "example_branch_oper": 38, "hybrid": 38, "branch_virtualenv": 38, "dir": 38, "keep": 38, "faster": 38, "tempfil": 38, "gettempdir": 38, "numpi": 38, "26": 38, "branching_virtualenv": 38, "np": 38, "arang": 38, "6": 38, "venv_": 38, "branch_with_venv": 38, "branching_venv": 38, "branch_external_python": 38, "branching_ext_python": 38, "ext_py_": 38, "branch_with_external_python": 38, "branching_ext_pi": 38, "control": 38, "satisfi": 38, "obtain": 38, "condition_is_tru": 38, "condition_is_fals": 38, "short_circuit": 38, "example_short_circuit_decor": 38, "check_condit": 38, "ds_true": 38, "true_": 38, "ds_fals": 38, "false_": 38, "chain": 38, "example_short_circuit_oper": 38, "cond_tru": 38, "cond_fals": 38, "especi": 38, "notic": 38, "task_7": 38, "upstream": [38, 45], "regardless": 38, "triggerrul": 38, "all_don": 38, "task_1": 38, "task_2": 38, "task_3": 38, "task_4": 38, "task_5": 38, "task_6": 38, "task_": 38, "independ": 39, "vulner": 39, "publish": 39, "upgrad": 39, "pypi": 39, "develop": 39, "alwai": 39, "strict": 39, "minor": 39, "patchlevel": 39, "bug": 39, "bugfix": 39, "critic": 39, "band": 39, "stakehold": 39, "decid": 39, "cherri": 39, "pick": 39, "older": 39, "mix": 39, "govern": 39, "interest": 39, "parti": 39, "arbitrari": [40, 45], "sens": [40, 41], "example_sensor": [40, 41, 43, 45], "t3": 40, "sensor_succe": 40, "t4": 40, "sensor_fails_after_3_second": 40, "t0": 41, "wait_some_second": 41, "t0a": 41, "wait_some_seconds_async": 41, "t1": 41, "fire_immedi": 41, "tz": 41, "timezon": 41, "timeout_after_second_date_in_the_futur": 41, "t1a": 41, "fire_immediately_async": 41, "t2a": 41, "timeout_after_second_date_in_the_future_async": 41, "t11": 41, "week_day_sensor_failing_on_timeout": 41, "relationship": 42, "worth": 42, "simpler": 42, "understand": 42, "better": 42, "visual": 42, "represent": 42, "practic": 42, "weekli": 42, "team": 42, "respons": 42, "earlier": 42, "establish": 42, "example_external_task_marker_dag": 42, "child_task1": 42, "parent_dag": 42, "parent_task": 42, "600": 42, "reschedul": [42, 45], "action": 42, "example_external_task_parent_deferr": 42, "external_task_sensor": 42, "parent_task_sensor": 42, "child_task": 42, "child_dag": 42, "child_task2": 42, "parent_dag_task_group_id": 42, "whenev": 42, "example_external_task_marker_child": 42, "detect": 43, "appear": 43, "t6": 43, "wait_for_fil": 43, "temporary_file_for_test": 43, "t7": 43, "wait_for_file_async": 43, "cross": 44, "example_sensor_decor": 45, "3600": 45, "wait_for_upstream": 45, "pokereturnvalu": 45, "is_don": 45, "xcom_valu": 45, "t9": 45, "success_sensor_python": 45, "success_cal": 45, "t10": 45, "failure_timeout_sensor_python": 45, "failure_cal": 45}, "objects": {"airflow.providers": [[4, 0, 0, "-", "standard"]], "airflow.providers.standard": [[4, 1, 1, "", "__version__"], [1, 0, 0, "-", "hooks"], [8, 0, 0, "-", "operators"], [17, 0, 0, "-", "sensors"], [24, 0, 0, "-", "triggers"], [26, 0, 0, "-", "utils"], [29, 0, 0, "-", "version_compat"]], "airflow.providers.standard.hooks": [[0, 0, 0, "-", "filesystem"], [2, 0, 0, "-", "package_index"], [3, 0, 0, "-", "subprocess"]], "airflow.providers.standard.hooks.filesystem": [[0, 2, 1, "", "FSHook"]], "airflow.providers.standard.hooks.filesystem.FSHook": [[0, 3, 1, "", "conn_name_attr"], [0, 3, 1, "", "conn_type"], [0, 3, 1, "", "default_conn_name"], [0, 4, 1, "", "get_conn"], [0, 4, 1, "", "get_connection_form_widgets"], [0, 4, 1, "", "get_path"], [0, 4, 1, "", "get_ui_field_behaviour"], [0, 3, 1, "", "hook_name"], [0, 4, 1, "", "test_connection"]], "airflow.providers.standard.hooks.package_index": [[2, 2, 1, "", "PackageIndexHook"]], "airflow.providers.standard.hooks.package_index.PackageIndexHook": [[2, 3, 1, "", "conn_name_attr"], [2, 3, 1, "", "conn_type"], [2, 3, 1, "", "default_conn_name"], [2, 4, 1, "", "get_conn"], [2, 4, 1, "", "get_connection_url"], [2, 4, 1, "", "get_ui_field_behaviour"], [2, 3, 1, "", "hook_name"], [2, 4, 1, "", "test_connection"]], "airflow.providers.standard.hooks.subprocess": [[3, 2, 1, "", "SubprocessHook"], [3, 1, 1, "", "SubprocessResult"], [3, 5, 1, "", "working_directory"]], "airflow.providers.standard.hooks.subprocess.SubprocessHook": [[3, 4, 1, "", "run_command"], [3, 4, 1, "", "send_sigterm"]], "airflow.providers.standard.operators": [[5, 0, 0, "-", "bash"], [6, 0, 0, "-", "datetime"], [7, 0, 0, "-", "generic_transfer"], [9, 0, 0, "-", "latest_only"], [10, 0, 0, "-", "python"], [11, 0, 0, "-", "trigger_dagrun"], [12, 0, 0, "-", "weekday"]], "airflow.providers.standard.operators.bash": [[5, 2, 1, "", "BashOperator"]], "airflow.providers.standard.operators.bash.BashOperator": [[5, 4, 1, "", "execute"], [5, 4, 1, "", "get_env"], [5, 4, 1, "", "on_kill"], [5, 4, 1, "", "subprocess_hook"], [5, 3, 1, "", "template_ext"], [5, 3, 1, "", "template_fields"], [5, 3, 1, "", "template_fields_renderers"], [5, 3, 1, "", "ui_color"]], "airflow.providers.standard.operators.datetime": [[6, 2, 1, "", "BranchDateTimeOperator"], [6, 5, 1, "", "target_times_as_dates"]], "airflow.providers.standard.operators.datetime.BranchDateTimeOperator": [[6, 4, 1, "", "choose_branch"]], "airflow.providers.standard.operators.generic_transfer": [[7, 2, 1, "", "GenericTransfer"]], "airflow.providers.standard.operators.generic_transfer.GenericTransfer": [[7, 4, 1, "", "execute"], [7, 4, 1, "", "get_hook"], [7, 3, 1, "", "template_ext"], [7, 3, 1, "", "template_fields"], [7, 3, 1, "", "template_fields_renderers"], [7, 3, 1, "", "ui_color"]], "airflow.providers.standard.operators.latest_only": [[9, 2, 1, "", "LatestOnlyOperator"]], "airflow.providers.standard.operators.latest_only.LatestOnlyOperator": [[9, 4, 1, "", "choose_branch"], [9, 3, 1, "", "ui_color"]], "airflow.providers.standard.operators.python": [[10, 2, 1, "", "BranchExternalPythonOperator"], [10, 2, 1, "", "BranchPythonOperator"], [10, 2, 1, "", "BranchPythonVirtualenvOperator"], [10, 2, 1, "", "ExternalPythonOperator"], [10, 2, 1, "", "PythonOperator"], [10, 2, 1, "", "PythonVirtualenvOperator"], [10, 2, 1, "", "ShortCircuitOperator"], [10, 5, 1, "", "get_current_context"], [10, 1, 1, "", "log"]], "airflow.providers.standard.operators.python.BranchExternalPythonOperator": [[10, 4, 1, "", "execute"]], "airflow.providers.standard.operators.python.BranchPythonOperator": [[10, 4, 1, "", "execute"]], "airflow.providers.standard.operators.python.BranchPythonVirtualenvOperator": [[10, 4, 1, "", "execute"]], "airflow.providers.standard.operators.python.ExternalPythonOperator": [[10, 4, 1, "", "execute_callable"], [10, 3, 1, "", "template_fields"]], "airflow.providers.standard.operators.python.PythonOperator": [[10, 3, 1, "", "BLUE"], [10, 4, 1, "", "determine_kwargs"], [10, 4, 1, "", "execute"], [10, 4, 1, "", "execute_callable"], [10, 3, 1, "", "shallow_copy_attrs"], [10, 3, 1, "", "template_fields"], [10, 3, 1, "", "template_fields_renderers"], [10, 3, 1, "", "ui_color"]], "airflow.providers.standard.operators.python.PythonVirtualenvOperator": [[10, 4, 1, "", "execute_callable"], [10, 3, 1, "", "template_ext"], [10, 3, 1, "", "template_fields"]], "airflow.providers.standard.operators.python.ShortCircuitOperator": [[10, 4, 1, "", "execute"]], "airflow.providers.standard.operators.trigger_dagrun": [[11, 2, 1, "", "TriggerDagRunLink"], [11, 2, 1, "", "TriggerDagRunOperator"], [11, 1, 1, "", "XCOM_LOGICAL_DATE_ISO"], [11, 1, 1, "", "XCOM_RUN_ID"]], "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunLink": [[11, 4, 1, "", "get_link"], [11, 3, 1, "", "name"]], "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator": [[11, 4, 1, "", "execute"], [11, 4, 1, "", "execute_complete"], [11, 3, 1, "", "operator_extra_links"], [11, 3, 1, "", "template_fields"], [11, 3, 1, "", "template_fields_renderers"], [11, 3, 1, "", "ui_color"]], "airflow.providers.standard.operators.weekday": [[12, 2, 1, "", "BranchDayOfWeekOperator"]], "airflow.providers.standard.operators.weekday.BranchDayOfWeekOperator": [[12, 4, 1, "", "choose_branch"]], "airflow.providers.standard.sensors": [[13, 0, 0, "-", "bash"], [14, 0, 0, "-", "date_time"], [15, 0, 0, "-", "external_task"], [16, 0, 0, "-", "filesystem"], [18, 0, 0, "-", "python"], [19, 0, 0, "-", "time"], [20, 0, 0, "-", "time_delta"], [21, 0, 0, "-", "weekday"]], "airflow.providers.standard.sensors.bash": [[13, 2, 1, "", "BashSensor"]], "airflow.providers.standard.sensors.bash.BashSensor": [[13, 4, 1, "", "poke"], [13, 3, 1, "", "template_fields"]], "airflow.providers.standard.sensors.date_time": [[14, 2, 1, "", "DateTimeSensor"], [14, 2, 1, "", "DateTimeSensorAsync"], [14, 2, 1, "", "StartTriggerArgs"]], "airflow.providers.standard.sensors.date_time.DateTimeSensor": [[14, 4, 1, "", "poke"], [14, 3, 1, "", "template_fields"]], "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync": [[14, 4, 1, "", "execute"], [14, 4, 1, "", "execute_complete"], [14, 3, 1, "", "start_from_trigger"], [14, 3, 1, "", "start_trigger_args"]], "airflow.providers.standard.sensors.date_time.StartTriggerArgs": [[14, 3, 1, "", "next_kwargs"], [14, 3, 1, "", "next_method"], [14, 3, 1, "", "timeout"], [14, 3, 1, "", "trigger_cls"], [14, 3, 1, "", "trigger_kwargs"]], "airflow.providers.standard.sensors.external_task": [[15, 2, 1, "", "ExternalDagLink"], [15, 2, 1, "", "ExternalTaskMarker"], [15, 2, 1, "", "ExternalTaskSensor"]], "airflow.providers.standard.sensors.external_task.ExternalDagLink": [[15, 4, 1, "", "get_link"], [15, 3, 1, "", "name"]], "airflow.providers.standard.sensors.external_task.ExternalTaskMarker": [[15, 4, 1, "", "get_serialized_fields"], [15, 3, 1, "", "operator_extra_links"], [15, 3, 1, "", "template_fields"], [15, 3, 1, "", "ui_color"]], "airflow.providers.standard.sensors.external_task.ExternalTaskSensor": [[15, 4, 1, "", "execute"], [15, 4, 1, "", "execute_complete"], [15, 4, 1, "", "get_count"], [15, 4, 1, "", "get_external_task_group_task_ids"], [15, 3, 1, "", "operator_extra_links"], [15, 4, 1, "", "poke"], [15, 3, 1, "", "template_fields"], [15, 3, 1, "", "ui_color"]], "airflow.providers.standard.sensors.filesystem": [[16, 2, 1, "", "FileSensor"], [16, 2, 1, "", "StartTriggerArgs"]], "airflow.providers.standard.sensors.filesystem.FileSensor": [[16, 4, 1, "", "execute"], [16, 4, 1, "", "execute_complete"], [16, 4, 1, "", "path"], [16, 4, 1, "", "poke"], [16, 3, 1, "", "start_from_trigger"], [16, 3, 1, "", "start_trigger_args"], [16, 3, 1, "", "template_fields"], [16, 3, 1, "", "ui_color"]], "airflow.providers.standard.sensors.filesystem.StartTriggerArgs": [[16, 3, 1, "", "next_kwargs"], [16, 3, 1, "", "next_method"], [16, 3, 1, "", "timeout"], [16, 3, 1, "", "trigger_cls"], [16, 3, 1, "", "trigger_kwargs"]], "airflow.providers.standard.sensors.python": [[18, 2, 1, "", "PythonSensor"]], "airflow.providers.standard.sensors.python.PythonSensor": [[18, 4, 1, "", "poke"], [18, 3, 1, "", "template_fields"]], "airflow.providers.standard.sensors.time": [[19, 2, 1, "", "StartTriggerArgs"], [19, 2, 1, "", "TimeSensor"], [19, 2, 1, "", "TimeSensorAsync"]], "airflow.providers.standard.sensors.time.StartTriggerArgs": [[19, 3, 1, "", "next_kwargs"], [19, 3, 1, "", "next_method"], [19, 3, 1, "", "timeout"], [19, 3, 1, "", "trigger_cls"], [19, 3, 1, "", "trigger_kwargs"]], "airflow.providers.standard.sensors.time.TimeSensor": [[19, 4, 1, "", "poke"]], "airflow.providers.standard.sensors.time.TimeSensorAsync": [[19, 4, 1, "", "execute"], [19, 4, 1, "", "execute_complete"], [19, 3, 1, "", "start_from_trigger"], [19, 3, 1, "", "start_trigger_args"]], "airflow.providers.standard.sensors.time_delta": [[20, 2, 1, "", "TimeDeltaSensor"], [20, 2, 1, "", "TimeDeltaSensorAsync"], [20, 2, 1, "", "WaitSensor"]], "airflow.providers.standard.sensors.time_delta.TimeDeltaSensor": [[20, 4, 1, "", "poke"]], "airflow.providers.standard.sensors.time_delta.TimeDeltaSensorAsync": [[20, 4, 1, "", "execute"], [20, 4, 1, "", "execute_complete"]], "airflow.providers.standard.sensors.time_delta.WaitSensor": [[20, 4, 1, "", "execute"]], "airflow.providers.standard.sensors.weekday": [[21, 2, 1, "", "DayOfWeekSensor"]], "airflow.providers.standard.sensors.weekday.DayOfWeekSensor": [[21, 4, 1, "", "poke"]], "airflow.providers.standard.triggers": [[22, 0, 0, "-", "external_task"], [23, 0, 0, "-", "file"], [25, 0, 0, "-", "temporal"]], "airflow.providers.standard.triggers.external_task": [[22, 2, 1, "", "DagStateTrigger"], [22, 2, 1, "", "WorkflowTrigger"]], "airflow.providers.standard.triggers.external_task.DagStateTrigger": [[22, 4, 1, "", "count_dags"], [22, 4, 1, "", "run"], [22, 4, 1, "", "serialize"]], "airflow.providers.standard.triggers.external_task.WorkflowTrigger": [[22, 4, 1, "", "run"], [22, 4, 1, "", "serialize"]], "airflow.providers.standard.triggers.file": [[23, 2, 1, "", "FileTrigger"]], "airflow.providers.standard.triggers.file.FileTrigger": [[23, 4, 1, "", "run"], [23, 4, 1, "", "serialize"]], "airflow.providers.standard.triggers.temporal": [[25, 2, 1, "", "DateTimeTrigger"], [25, 2, 1, "", "TimeDeltaTrigger"]], "airflow.providers.standard.triggers.temporal.DateTimeTrigger": [[25, 4, 1, "", "run"], [25, 4, 1, "", "serialize"]], "airflow.providers.standard.utils": [[27, 0, 0, "-", "python_virtualenv"], [28, 0, 0, "-", "sensor_helper"]], "airflow.providers.standard.utils.python_virtualenv": [[27, 5, 1, "", "prepare_virtualenv"], [27, 5, 1, "", "write_python_script"]], "airflow.providers.standard.version_compat": [[29, 1, 1, "", "AIRFLOW_V_2_10_PLUS"], [29, 1, 1, "", "AIRFLOW_V_3_0_PLUS"], [29, 5, 1, "", "get_base_airflow_version_tuple"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"]}, "titleterms": {"airflow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33], "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33], "standard": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 37, 44], "hook": [0, 1, 2, 3], "filesystem": [0, 16], "modul": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 29], "content": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 29], "class": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25], "submodul": [1, 4, 8, 17, 24, 26], "package_index": 2, "subprocess": 3, "function": [3, 6, 10, 27, 29], "attribut": [3, 10, 11, 29], "subpackag": 4, "packag": [4, 31, 33, 34], "oper": [5, 6, 7, 8, 9, 10, 11, 12, 37], "bash": [5, 13, 35], "datetim": 6, "generic_transf": 7, "latest_onli": 9, "python": [10, 18, 35], "trigger_dagrun": 11, "weekdai": [12, 21], "sensor": [13, 14, 15, 16, 17, 18, 19, 20, 21, 44], "date_tim": 14, "external_task": [15, 22], "time": [19, 36], "time_delta": 20, "trigger": [22, 23, 24, 25], "file": [23, 35], "tempor": 25, "util": [26, 27, 28], "python_virtualenv": 27, "sensor_help": 28, "version_compat": 29, "changelog": 30, "0": [30, 31], "3": [30, 31], "break": 30, "chang": 30, "bug": 30, "fix": 30, "misc": 30, "2": [30, 31], "1": [30, 31], "apach": [31, 33], "configur": 32, "refer": 32, "section": 32, "venv_install_method": 32, "instal": [33, 34], "requir": 33, "from": [34, 35], "sourc": 34, "releas": [34, 39], "integr": 34, "verifi": 34, "pypi": 34, "bashoper": 35, "templat": [35, 38], "skip": 35, "output": 35, "processor": 35, "execut": 35, "command": 35, "With": 35, "jinja": 35, "without": 35, "found": 35, "enrich": 35, "branchdatetimeoper": 36, "usag": 36, "current": 36, "logic": 36, "date": 36, "branchdayofweekoper": 36, "pythonoper": 38, "pass": 38, "argument": 38, "context": 38, "pythonvirtualenvoper": 38, "virtual": 38, "environ": 38, "setup": 38, "option": 38, "cach": 38, "reus": 38, "externalpythonoper": 38, "pythonbranchoper": 38, "branchpythonvirtualenvoper": 38, "branchexternalpythonoper": 38, "shortcircuitoper": 38, "secur": 39, "patch": 39, "bashsensor": 40, "timedeltasensor": 41, "timedeltasensorasync": 41, "timesensor": 41, "timesensorasync": 41, "dayofweeksensor": 41, "cross": 42, "dag": 42, "depend": 42, "externaltasksensor": 42, "task_group": 42, "externaltaskmark": 42, "filesensor": 43, "pythonsensor": 45}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"airflow.providers.standard.hooks.filesystem": [[0, "module-airflow.providers.standard.hooks.filesystem"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [25, "module-contents"], [27, "module-contents"], [29, "module-contents"]], "Classes": [[0, "classes"], [2, "classes"], [3, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [25, "classes"]], "airflow.providers.standard.hooks": [[1, "module-airflow.providers.standard.hooks"]], "Submodules": [[1, "submodules"], [4, "submodules"], [8, "submodules"], [17, "submodules"], [24, "submodules"], [26, "submodules"]], "airflow.providers.standard.hooks.package_index": [[2, "module-airflow.providers.standard.hooks.package_index"]], "airflow.providers.standard.hooks.subprocess": [[3, "module-airflow.providers.standard.hooks.subprocess"]], "Functions": [[3, "functions"], [6, "functions"], [10, "functions"], [27, "functions"], [29, "functions"]], "Attributes": [[3, "attributes"], [10, "attributes"], [11, "attributes"], [29, "attributes"]], "airflow.providers.standard": [[4, "module-airflow.providers.standard"]], "Subpackages": [[4, "subpackages"]], "Package Contents": [[4, "package-contents"]], "airflow.providers.standard.operators.bash": [[5, "module-airflow.providers.standard.operators.bash"]], "airflow.providers.standard.operators.datetime": [[6, "module-airflow.providers.standard.operators.datetime"]], "airflow.providers.standard.operators.generic_transfer": [[7, "module-airflow.providers.standard.operators.generic_transfer"]], "airflow.providers.standard.operators": [[8, "module-airflow.providers.standard.operators"]], "airflow.providers.standard.operators.latest_only": [[9, "module-airflow.providers.standard.operators.latest_only"]], "airflow.providers.standard.operators.python": [[10, "module-airflow.providers.standard.operators.python"]], "airflow.providers.standard.operators.trigger_dagrun": [[11, "module-airflow.providers.standard.operators.trigger_dagrun"]], "airflow.providers.standard.operators.weekday": [[12, "module-airflow.providers.standard.operators.weekday"]], "airflow.providers.standard.sensors.bash": [[13, "module-airflow.providers.standard.sensors.bash"]], "airflow.providers.standard.sensors.date_time": [[14, "module-airflow.providers.standard.sensors.date_time"]], "airflow.providers.standard.sensors.external_task": [[15, "module-airflow.providers.standard.sensors.external_task"]], "airflow.providers.standard.sensors.filesystem": [[16, "module-airflow.providers.standard.sensors.filesystem"]], "airflow.providers.standard.sensors": [[17, "module-airflow.providers.standard.sensors"]], "airflow.providers.standard.sensors.python": [[18, "module-airflow.providers.standard.sensors.python"]], "airflow.providers.standard.sensors.time": [[19, "module-airflow.providers.standard.sensors.time"]], "airflow.providers.standard.sensors.time_delta": [[20, "module-airflow.providers.standard.sensors.time_delta"]], "airflow.providers.standard.sensors.weekday": [[21, "module-airflow.providers.standard.sensors.weekday"]], "airflow.providers.standard.triggers.external_task": [[22, "module-airflow.providers.standard.triggers.external_task"]], "airflow.providers.standard.triggers.file": [[23, "module-airflow.providers.standard.triggers.file"]], "airflow.providers.standard.triggers": [[24, "module-airflow.providers.standard.triggers"]], "airflow.providers.standard.triggers.temporal": [[25, "module-airflow.providers.standard.triggers.temporal"]], "airflow.providers.standard.utils": [[26, "module-airflow.providers.standard.utils"]], "airflow.providers.standard.utils.python_virtualenv": [[27, "module-airflow.providers.standard.utils.python_virtualenv"]], "airflow.providers.standard.utils.sensor_helper": [[28, "module-airflow.providers.standard.utils.sensor_helper"]], "airflow.providers.standard.version_compat": [[29, "module-airflow.providers.standard.version_compat"]], "Changelog": [[30, "changelog"]], "0.0.3": [[30, "id1"], [31, "id1"]], "Breaking changes": [[30, "breaking-changes"], [30, "id6"]], "Bug Fixes": [[30, "bug-fixes"], [30, "id3"]], "Misc": [[30, "misc"], [30, "id4"]], "0.0.2": [[30, "id2"], [31, "id2"]], "0.0.1": [[30, "id5"], [31, "id3"]], "Package apache-airflow-providers-standard": [[31, "package-apache-airflow-providers-standard"]], "Configuration Reference": [[32, "configuration-reference"]], "Sections:": [[32, "sections"]], "[standard]": [[32, "standard"]], "venv_install_method": [[32, "venv-install-method"]], "apache-airflow-providers-standard": [[33, "apache-airflow-providers-standard"]], "apache-airflow-providers-standard package": [[33, "apache-airflow-providers-standard-package"]], "Provider package": [[33, "provider-package"]], "Installation": [[33, "installation"]], "Requirements": [[33, "requirements"]], "Installing from sources": [[34, "installing-from-sources"]], "Released packages": [[34, "released-packages"]], "Release integrity": [[34, "release-integrity"]], "Verifying PyPI releases": [[34, "verifying-pypi-releases"]], "BashOperator": [[35, "bashoperator"]], "Templating": [[35, "templating"], [38, "templating"], [38, "id2"], [38, "id5"]], "Skipping": [[35, "skipping"]], "Output processor": [[35, "output-processor"]], "Executing commands from files": [[35, "executing-commands-from-files"]], "With Jinja template": [[35, "with-jinja-template"]], "Without Jinja template": [[35, "without-jinja-template"]], "Jinja template not found": [[35, "jinja-template-not-found"]], "Enriching Bash with Python": [[35, "enriching-bash-with-python"]], "BranchDateTimeOperator": [[36, "branchdatetimeoperator"]], "Usage with current time": [[36, "usage-with-current-time"]], "Usage with logical date": [[36, "usage-with-logical-date"]], "BranchDayOfWeekOperator": [[36, "branchdayofweekoperator"]], "Standard Operators": [[37, "standard-operators"]], "PythonOperator": [[38, "pythonoperator"]], "Passing in arguments": [[38, "passing-in-arguments"], [38, "id1"], [38, "id4"]], "Context": [[38, "context"], [38, "id3"], [38, "id6"]], "PythonVirtualenvOperator": [[38, "pythonvirtualenvoperator"]], "Virtual environment setup options": [[38, "virtual-environment-setup-options"]], "Caching and reuse": [[38, "caching-and-reuse"]], "ExternalPythonOperator": [[38, "externalpythonoperator"]], "PythonBranchOperator": [[38, "pythonbranchoperator"]], "Passing in arguments and Templating": [[38, "passing-in-arguments-and-templating"], [38, "id7"], [38, "id8"], [38, "id9"]], "BranchPythonVirtualenvOperator": [[38, "branchpythonvirtualenvoperator"]], "BranchExternalPythonOperator": [[38, "branchexternalpythonoperator"]], "ShortCircuitOperator": [[38, "shortcircuitoperator"]], "Releasing security patches": [[39, "releasing-security-patches"]], "BashSensor": [[40, "bashsensor"]], "TimeDeltaSensor": [[41, "timedeltasensor"]], "TimeDeltaSensorAsync": [[41, "timedeltasensorasync"]], "TimeSensor": [[41, "timesensor"]], "TimeSensorAsync": [[41, "timesensorasync"]], "DayOfWeekSensor": [[41, "dayofweeksensor"]], "Cross-DAG Dependencies": [[42, "cross-dag-dependencies"]], "ExternalTaskSensor": [[42, "externaltasksensor"]], "ExternalTaskSensor with task_group dependency": [[42, "externaltasksensor-with-task-group-dependency"]], "ExternalTaskMarker": [[42, "externaltaskmarker"]], "FileSensor": [[43, "filesensor"]], "Standard Sensors": [[44, "standard-sensors"]], "PythonSensor": [[45, "pythonsensor"]]}, "indexentries": {"fshook (class in airflow.providers.standard.hooks.filesystem)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook"]], "airflow.providers.standard.hooks.filesystem": [[0, "module-airflow.providers.standard.hooks.filesystem"]], "conn_name_attr (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.conn_name_attr"]], "conn_type (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.conn_type"]], "default_conn_name (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.default_conn_name"]], "get_conn() (airflow.providers.standard.hooks.filesystem.fshook method)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.get_conn"]], "get_connection_form_widgets() (airflow.providers.standard.hooks.filesystem.fshook class method)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.get_connection_form_widgets"]], "get_path() (airflow.providers.standard.hooks.filesystem.fshook method)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.get_path"]], "get_ui_field_behaviour() (airflow.providers.standard.hooks.filesystem.fshook class method)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.get_ui_field_behaviour"]], "hook_name (airflow.providers.standard.hooks.filesystem.fshook attribute)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.hook_name"]], "module": [[0, "module-airflow.providers.standard.hooks.filesystem"], [1, "module-airflow.providers.standard.hooks"], [2, "module-airflow.providers.standard.hooks.package_index"], [3, "module-airflow.providers.standard.hooks.subprocess"], [4, "module-airflow.providers.standard"], [5, "module-airflow.providers.standard.operators.bash"], [6, "module-airflow.providers.standard.operators.datetime"], [7, "module-airflow.providers.standard.operators.generic_transfer"], [8, "module-airflow.providers.standard.operators"], [9, "module-airflow.providers.standard.operators.latest_only"], [10, "module-airflow.providers.standard.operators.python"], [11, "module-airflow.providers.standard.operators.trigger_dagrun"], [12, "module-airflow.providers.standard.operators.weekday"], [13, "module-airflow.providers.standard.sensors.bash"], [14, "module-airflow.providers.standard.sensors.date_time"], [15, "module-airflow.providers.standard.sensors.external_task"], [16, "module-airflow.providers.standard.sensors.filesystem"], [17, "module-airflow.providers.standard.sensors"], [18, "module-airflow.providers.standard.sensors.python"], [19, "module-airflow.providers.standard.sensors.time"], [20, "module-airflow.providers.standard.sensors.time_delta"], [21, "module-airflow.providers.standard.sensors.weekday"], [22, "module-airflow.providers.standard.triggers.external_task"], [23, "module-airflow.providers.standard.triggers.file"], [24, "module-airflow.providers.standard.triggers"], [25, "module-airflow.providers.standard.triggers.temporal"], [26, "module-airflow.providers.standard.utils"], [27, "module-airflow.providers.standard.utils.python_virtualenv"], [28, "module-airflow.providers.standard.utils.sensor_helper"], [29, "module-airflow.providers.standard.version_compat"]], "test_connection() (airflow.providers.standard.hooks.filesystem.fshook method)": [[0, "airflow.providers.standard.hooks.filesystem.FSHook.test_connection"]], "airflow.providers.standard.hooks": [[1, "module-airflow.providers.standard.hooks"]], "packageindexhook (class in airflow.providers.standard.hooks.package_index)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook"]], "airflow.providers.standard.hooks.package_index": [[2, "module-airflow.providers.standard.hooks.package_index"]], "conn_name_attr (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.conn_name_attr"]], "conn_type (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.conn_type"]], "default_conn_name (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.default_conn_name"]], "get_conn() (airflow.providers.standard.hooks.package_index.packageindexhook method)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.get_conn"]], "get_connection_url() (airflow.providers.standard.hooks.package_index.packageindexhook method)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.get_connection_url"]], "get_ui_field_behaviour() (airflow.providers.standard.hooks.package_index.packageindexhook static method)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.get_ui_field_behaviour"]], "hook_name (airflow.providers.standard.hooks.package_index.packageindexhook attribute)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.hook_name"]], "test_connection() (airflow.providers.standard.hooks.package_index.packageindexhook method)": [[2, "airflow.providers.standard.hooks.package_index.PackageIndexHook.test_connection"]], "subprocesshook (class in airflow.providers.standard.hooks.subprocess)": [[3, "airflow.providers.standard.hooks.subprocess.SubprocessHook"]], "subprocessresult (in module airflow.providers.standard.hooks.subprocess)": [[3, "airflow.providers.standard.hooks.subprocess.SubprocessResult"]], "airflow.providers.standard.hooks.subprocess": [[3, "module-airflow.providers.standard.hooks.subprocess"]], "run_command() (airflow.providers.standard.hooks.subprocess.subprocesshook method)": [[3, "airflow.providers.standard.hooks.subprocess.SubprocessHook.run_command"]], "send_sigterm() (airflow.providers.standard.hooks.subprocess.subprocesshook method)": [[3, "airflow.providers.standard.hooks.subprocess.SubprocessHook.send_sigterm"]], "working_directory() (in module airflow.providers.standard.hooks.subprocess)": [[3, "airflow.providers.standard.hooks.subprocess.working_directory"]], "__version__ (in module airflow.providers.standard)": [[4, "airflow.providers.standard.__version__"]], "airflow.providers.standard": [[4, "module-airflow.providers.standard"]], "bashoperator (class in airflow.providers.standard.operators.bash)": [[5, "airflow.providers.standard.operators.bash.BashOperator"]], "airflow.providers.standard.operators.bash": [[5, "module-airflow.providers.standard.operators.bash"]], "execute() (airflow.providers.standard.operators.bash.bashoperator method)": [[5, "airflow.providers.standard.operators.bash.BashOperator.execute"]], "get_env() (airflow.providers.standard.operators.bash.bashoperator method)": [[5, "airflow.providers.standard.operators.bash.BashOperator.get_env"]], "on_kill() (airflow.providers.standard.operators.bash.bashoperator method)": [[5, "airflow.providers.standard.operators.bash.BashOperator.on_kill"]], "subprocess_hook() (airflow.providers.standard.operators.bash.bashoperator method)": [[5, "airflow.providers.standard.operators.bash.BashOperator.subprocess_hook"]], "template_ext (airflow.providers.standard.operators.bash.bashoperator attribute)": [[5, "airflow.providers.standard.operators.bash.BashOperator.template_ext"]], "template_fields (airflow.providers.standard.operators.bash.bashoperator attribute)": [[5, "airflow.providers.standard.operators.bash.BashOperator.template_fields"]], "template_fields_renderers (airflow.providers.standard.operators.bash.bashoperator attribute)": [[5, "airflow.providers.standard.operators.bash.BashOperator.template_fields_renderers"]], "ui_color (airflow.providers.standard.operators.bash.bashoperator attribute)": [[5, "airflow.providers.standard.operators.bash.BashOperator.ui_color"]], "branchdatetimeoperator (class in airflow.providers.standard.operators.datetime)": [[6, "airflow.providers.standard.operators.datetime.BranchDateTimeOperator"]], "airflow.providers.standard.operators.datetime": [[6, "module-airflow.providers.standard.operators.datetime"]], "choose_branch() (airflow.providers.standard.operators.datetime.branchdatetimeoperator method)": [[6, "airflow.providers.standard.operators.datetime.BranchDateTimeOperator.choose_branch"]], "target_times_as_dates() (in module airflow.providers.standard.operators.datetime)": [[6, "airflow.providers.standard.operators.datetime.target_times_as_dates"]], "generictransfer (class in airflow.providers.standard.operators.generic_transfer)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer"]], "airflow.providers.standard.operators.generic_transfer": [[7, "module-airflow.providers.standard.operators.generic_transfer"]], "execute() (airflow.providers.standard.operators.generic_transfer.generictransfer method)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.execute"]], "get_hook() (airflow.providers.standard.operators.generic_transfer.generictransfer class method)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.get_hook"]], "template_ext (airflow.providers.standard.operators.generic_transfer.generictransfer attribute)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.template_ext"]], "template_fields (airflow.providers.standard.operators.generic_transfer.generictransfer attribute)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.template_fields"]], "template_fields_renderers (airflow.providers.standard.operators.generic_transfer.generictransfer attribute)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.template_fields_renderers"]], "ui_color (airflow.providers.standard.operators.generic_transfer.generictransfer attribute)": [[7, "airflow.providers.standard.operators.generic_transfer.GenericTransfer.ui_color"]], "airflow.providers.standard.operators": [[8, "module-airflow.providers.standard.operators"]], "latestonlyoperator (class in airflow.providers.standard.operators.latest_only)": [[9, "airflow.providers.standard.operators.latest_only.LatestOnlyOperator"]], "airflow.providers.standard.operators.latest_only": [[9, "module-airflow.providers.standard.operators.latest_only"]], "choose_branch() (airflow.providers.standard.operators.latest_only.latestonlyoperator method)": [[9, "airflow.providers.standard.operators.latest_only.LatestOnlyOperator.choose_branch"]], "ui_color (airflow.providers.standard.operators.latest_only.latestonlyoperator attribute)": [[9, "airflow.providers.standard.operators.latest_only.LatestOnlyOperator.ui_color"]], "blue (airflow.providers.standard.operators.python.pythonoperator attribute)": [[10, "airflow.providers.standard.operators.python.PythonOperator.BLUE"]], "branchexternalpythonoperator (class in airflow.providers.standard.operators.python)": [[10, "airflow.providers.standard.operators.python.BranchExternalPythonOperator"]], "branchpythonoperator (class in airflow.providers.standard.operators.python)": [[10, "airflow.providers.standard.operators.python.BranchPythonOperator"]], "branchpythonvirtualenvoperator (class in airflow.providers.standard.operators.python)": [[10, "airflow.providers.standard.operators.python.BranchPythonVirtualenvOperator"]], "externalpythonoperator (class in airflow.providers.standard.operators.python)": [[10, "airflow.providers.standard.operators.python.ExternalPythonOperator"]], "pythonoperator (class in airflow.providers.standard.operators.python)": [[10, "airflow.providers.standard.operators.python.PythonOperator"]], "pythonvirtualenvoperator (class in airflow.providers.standard.operators.python)": [[10, "airflow.providers.standard.operators.python.PythonVirtualenvOperator"]], "shortcircuitoperator (class in airflow.providers.standard.operators.python)": [[10, "airflow.providers.standard.operators.python.ShortCircuitOperator"]], "airflow.providers.standard.operators.python": [[10, "module-airflow.providers.standard.operators.python"]], "determine_kwargs() (airflow.providers.standard.operators.python.pythonoperator method)": [[10, "airflow.providers.standard.operators.python.PythonOperator.determine_kwargs"]], "execute() (airflow.providers.standard.operators.python.branchexternalpythonoperator method)": [[10, "airflow.providers.standard.operators.python.BranchExternalPythonOperator.execute"]], "execute() (airflow.providers.standard.operators.python.branchpythonoperator method)": [[10, "airflow.providers.standard.operators.python.BranchPythonOperator.execute"]], "execute() (airflow.providers.standard.operators.python.branchpythonvirtualenvoperator method)": [[10, "airflow.providers.standard.operators.python.BranchPythonVirtualenvOperator.execute"]], "execute() (airflow.providers.standard.operators.python.pythonoperator method)": [[10, "airflow.providers.standard.operators.python.PythonOperator.execute"]], "execute() (airflow.providers.standard.operators.python.shortcircuitoperator method)": [[10, "airflow.providers.standard.operators.python.ShortCircuitOperator.execute"]], "execute_callable() (airflow.providers.standard.operators.python.externalpythonoperator method)": [[10, "airflow.providers.standard.operators.python.ExternalPythonOperator.execute_callable"]], "execute_callable() (airflow.providers.standard.operators.python.pythonoperator method)": [[10, "airflow.providers.standard.operators.python.PythonOperator.execute_callable"]], "execute_callable() (airflow.providers.standard.operators.python.pythonvirtualenvoperator method)": [[10, "airflow.providers.standard.operators.python.PythonVirtualenvOperator.execute_callable"]], "get_current_context() (in module airflow.providers.standard.operators.python)": [[10, "airflow.providers.standard.operators.python.get_current_context"]], "log (in module airflow.providers.standard.operators.python)": [[10, "airflow.providers.standard.operators.python.log"]], "shallow_copy_attrs (airflow.providers.standard.operators.python.pythonoperator attribute)": [[10, "airflow.providers.standard.operators.python.PythonOperator.shallow_copy_attrs"]], "template_ext (airflow.providers.standard.operators.python.pythonvirtualenvoperator attribute)": [[10, "airflow.providers.standard.operators.python.PythonVirtualenvOperator.template_ext"]], "template_fields (airflow.providers.standard.operators.python.externalpythonoperator attribute)": [[10, "airflow.providers.standard.operators.python.ExternalPythonOperator.template_fields"]], "template_fields (airflow.providers.standard.operators.python.pythonoperator attribute)": [[10, "airflow.providers.standard.operators.python.PythonOperator.template_fields"]], "template_fields (airflow.providers.standard.operators.python.pythonvirtualenvoperator attribute)": [[10, "airflow.providers.standard.operators.python.PythonVirtualenvOperator.template_fields"]], "template_fields_renderers (airflow.providers.standard.operators.python.pythonoperator attribute)": [[10, "airflow.providers.standard.operators.python.PythonOperator.template_fields_renderers"]], "ui_color (airflow.providers.standard.operators.python.pythonoperator attribute)": [[10, "airflow.providers.standard.operators.python.PythonOperator.ui_color"]], "triggerdagrunlink (class in airflow.providers.standard.operators.trigger_dagrun)": [[11, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunLink"]], "triggerdagrunoperator (class in airflow.providers.standard.operators.trigger_dagrun)": [[11, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator"]], "xcom_logical_date_iso (in module airflow.providers.standard.operators.trigger_dagrun)": [[11, "airflow.providers.standard.operators.trigger_dagrun.XCOM_LOGICAL_DATE_ISO"]], "xcom_run_id (in module airflow.providers.standard.operators.trigger_dagrun)": [[11, "airflow.providers.standard.operators.trigger_dagrun.XCOM_RUN_ID"]], "airflow.providers.standard.operators.trigger_dagrun": [[11, "module-airflow.providers.standard.operators.trigger_dagrun"]], "execute() (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator method)": [[11, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.execute"]], "execute_complete() (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator method)": [[11, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.execute_complete"]], "get_link() (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunlink method)": [[11, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunLink.get_link"]], "name (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunlink attribute)": [[11, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunLink.name"]], "operator_extra_links (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[11, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.operator_extra_links"]], "template_fields (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[11, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.template_fields"]], "template_fields_renderers (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[11, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.template_fields_renderers"]], "ui_color (airflow.providers.standard.operators.trigger_dagrun.triggerdagrunoperator attribute)": [[11, "airflow.providers.standard.operators.trigger_dagrun.TriggerDagRunOperator.ui_color"]], "branchdayofweekoperator (class in airflow.providers.standard.operators.weekday)": [[12, "airflow.providers.standard.operators.weekday.BranchDayOfWeekOperator"]], "airflow.providers.standard.operators.weekday": [[12, "module-airflow.providers.standard.operators.weekday"]], "choose_branch() (airflow.providers.standard.operators.weekday.branchdayofweekoperator method)": [[12, "airflow.providers.standard.operators.weekday.BranchDayOfWeekOperator.choose_branch"]], "bashsensor (class in airflow.providers.standard.sensors.bash)": [[13, "airflow.providers.standard.sensors.bash.BashSensor"]], "airflow.providers.standard.sensors.bash": [[13, "module-airflow.providers.standard.sensors.bash"]], "poke() (airflow.providers.standard.sensors.bash.bashsensor method)": [[13, "airflow.providers.standard.sensors.bash.BashSensor.poke"]], "template_fields (airflow.providers.standard.sensors.bash.bashsensor attribute)": [[13, "airflow.providers.standard.sensors.bash.BashSensor.template_fields"]], "datetimesensor (class in airflow.providers.standard.sensors.date_time)": [[14, "airflow.providers.standard.sensors.date_time.DateTimeSensor"]], "datetimesensorasync (class in airflow.providers.standard.sensors.date_time)": [[14, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync"]], "starttriggerargs (class in airflow.providers.standard.sensors.date_time)": [[14, "airflow.providers.standard.sensors.date_time.StartTriggerArgs"]], "airflow.providers.standard.sensors.date_time": [[14, "module-airflow.providers.standard.sensors.date_time"]], "execute() (airflow.providers.standard.sensors.date_time.datetimesensorasync method)": [[14, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync.execute"]], "execute_complete() (airflow.providers.standard.sensors.date_time.datetimesensorasync method)": [[14, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync.execute_complete"]], "next_kwargs (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[14, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.next_kwargs"]], "next_method (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[14, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.next_method"]], "poke() (airflow.providers.standard.sensors.date_time.datetimesensor method)": [[14, "airflow.providers.standard.sensors.date_time.DateTimeSensor.poke"]], "start_from_trigger (airflow.providers.standard.sensors.date_time.datetimesensorasync attribute)": [[14, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync.start_from_trigger"]], "start_trigger_args (airflow.providers.standard.sensors.date_time.datetimesensorasync attribute)": [[14, "airflow.providers.standard.sensors.date_time.DateTimeSensorAsync.start_trigger_args"]], "template_fields (airflow.providers.standard.sensors.date_time.datetimesensor attribute)": [[14, "airflow.providers.standard.sensors.date_time.DateTimeSensor.template_fields"]], "timeout (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[14, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.timeout"]], "trigger_cls (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[14, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.trigger_cls"]], "trigger_kwargs (airflow.providers.standard.sensors.date_time.starttriggerargs attribute)": [[14, "airflow.providers.standard.sensors.date_time.StartTriggerArgs.trigger_kwargs"]], "externaldaglink (class in airflow.providers.standard.sensors.external_task)": [[15, "airflow.providers.standard.sensors.external_task.ExternalDagLink"]], "externaltaskmarker (class in airflow.providers.standard.sensors.external_task)": [[15, "airflow.providers.standard.sensors.external_task.ExternalTaskMarker"]], "externaltasksensor (class in airflow.providers.standard.sensors.external_task)": [[15, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor"]], "airflow.providers.standard.sensors.external_task": [[15, "module-airflow.providers.standard.sensors.external_task"]], "execute() (airflow.providers.standard.sensors.external_task.externaltasksensor method)": [[15, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.execute"]], "execute_complete() (airflow.providers.standard.sensors.external_task.externaltasksensor method)": [[15, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.execute_complete"]], "get_count() (airflow.providers.standard.sensors.external_task.externaltasksensor method)": [[15, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.get_count"]], "get_external_task_group_task_ids() (airflow.providers.standard.sensors.external_task.externaltasksensor method)": [[15, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.get_external_task_group_task_ids"]], "get_link() (airflow.providers.standard.sensors.external_task.externaldaglink method)": [[15, "airflow.providers.standard.sensors.external_task.ExternalDagLink.get_link"]], "get_serialized_fields() (airflow.providers.standard.sensors.external_task.externaltaskmarker class method)": [[15, "airflow.providers.standard.sensors.external_task.ExternalTaskMarker.get_serialized_fields"]], "name (airflow.providers.standard.sensors.external_task.externaldaglink attribute)": [[15, "airflow.providers.standard.sensors.external_task.ExternalDagLink.name"]], "operator_extra_links (airflow.providers.standard.sensors.external_task.externaltaskmarker attribute)": [[15, "airflow.providers.standard.sensors.external_task.ExternalTaskMarker.operator_extra_links"]], "operator_extra_links (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[15, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.operator_extra_links"]], "poke() (airflow.providers.standard.sensors.external_task.externaltasksensor method)": [[15, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.poke"]], "template_fields (airflow.providers.standard.sensors.external_task.externaltaskmarker attribute)": [[15, "airflow.providers.standard.sensors.external_task.ExternalTaskMarker.template_fields"]], "template_fields (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[15, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.template_fields"]], "ui_color (airflow.providers.standard.sensors.external_task.externaltaskmarker attribute)": [[15, "airflow.providers.standard.sensors.external_task.ExternalTaskMarker.ui_color"]], "ui_color (airflow.providers.standard.sensors.external_task.externaltasksensor attribute)": [[15, "airflow.providers.standard.sensors.external_task.ExternalTaskSensor.ui_color"]], "filesensor (class in airflow.providers.standard.sensors.filesystem)": [[16, "airflow.providers.standard.sensors.filesystem.FileSensor"]], "starttriggerargs (class in airflow.providers.standard.sensors.filesystem)": [[16, "airflow.providers.standard.sensors.filesystem.StartTriggerArgs"]], "airflow.providers.standard.sensors.filesystem": [[16, "module-airflow.providers.standard.sensors.filesystem"]], "execute() (airflow.providers.standard.sensors.filesystem.filesensor method)": [[16, "airflow.providers.standard.sensors.filesystem.FileSensor.execute"]], "execute_complete() (airflow.providers.standard.sensors.filesystem.filesensor method)": [[16, "airflow.providers.standard.sensors.filesystem.FileSensor.execute_complete"]], "next_kwargs (airflow.providers.standard.sensors.filesystem.starttriggerargs attribute)": [[16, "airflow.providers.standard.sensors.filesystem.StartTriggerArgs.next_kwargs"]], "next_method (airflow.providers.standard.sensors.filesystem.starttriggerargs attribute)": [[16, "airflow.providers.standard.sensors.filesystem.StartTriggerArgs.next_method"]], "path() (airflow.providers.standard.sensors.filesystem.filesensor method)": [[16, "airflow.providers.standard.sensors.filesystem.FileSensor.path"]], "poke() (airflow.providers.standard.sensors.filesystem.filesensor method)": [[16, "airflow.providers.standard.sensors.filesystem.FileSensor.poke"]], "start_from_trigger (airflow.providers.standard.sensors.filesystem.filesensor attribute)": [[16, "airflow.providers.standard.sensors.filesystem.FileSensor.start_from_trigger"]], "start_trigger_args (airflow.providers.standard.sensors.filesystem.filesensor attribute)": [[16, "airflow.providers.standard.sensors.filesystem.FileSensor.start_trigger_args"]], "template_fields (airflow.providers.standard.sensors.filesystem.filesensor attribute)": [[16, "airflow.providers.standard.sensors.filesystem.FileSensor.template_fields"]], "timeout (airflow.providers.standard.sensors.filesystem.starttriggerargs attribute)": [[16, "airflow.providers.standard.sensors.filesystem.StartTriggerArgs.timeout"]], "trigger_cls (airflow.providers.standard.sensors.filesystem.starttriggerargs attribute)": [[16, "airflow.providers.standard.sensors.filesystem.StartTriggerArgs.trigger_cls"]], "trigger_kwargs (airflow.providers.standard.sensors.filesystem.starttriggerargs attribute)": [[16, "airflow.providers.standard.sensors.filesystem.StartTriggerArgs.trigger_kwargs"]], "ui_color (airflow.providers.standard.sensors.filesystem.filesensor attribute)": [[16, "airflow.providers.standard.sensors.filesystem.FileSensor.ui_color"]], "airflow.providers.standard.sensors": [[17, "module-airflow.providers.standard.sensors"]], "pythonsensor (class in airflow.providers.standard.sensors.python)": [[18, "airflow.providers.standard.sensors.python.PythonSensor"]], "airflow.providers.standard.sensors.python": [[18, "module-airflow.providers.standard.sensors.python"]], "poke() (airflow.providers.standard.sensors.python.pythonsensor method)": [[18, "airflow.providers.standard.sensors.python.PythonSensor.poke"]], "template_fields (airflow.providers.standard.sensors.python.pythonsensor attribute)": [[18, "airflow.providers.standard.sensors.python.PythonSensor.template_fields"]], "starttriggerargs (class in airflow.providers.standard.sensors.time)": [[19, "airflow.providers.standard.sensors.time.StartTriggerArgs"]], "timesensor (class in airflow.providers.standard.sensors.time)": [[19, "airflow.providers.standard.sensors.time.TimeSensor"]], "timesensorasync (class in airflow.providers.standard.sensors.time)": [[19, "airflow.providers.standard.sensors.time.TimeSensorAsync"]], "airflow.providers.standard.sensors.time": [[19, "module-airflow.providers.standard.sensors.time"]], "execute() (airflow.providers.standard.sensors.time.timesensorasync method)": [[19, "airflow.providers.standard.sensors.time.TimeSensorAsync.execute"]], "execute_complete() (airflow.providers.standard.sensors.time.timesensorasync method)": [[19, "airflow.providers.standard.sensors.time.TimeSensorAsync.execute_complete"]], "next_kwargs (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[19, "airflow.providers.standard.sensors.time.StartTriggerArgs.next_kwargs"]], "next_method (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[19, "airflow.providers.standard.sensors.time.StartTriggerArgs.next_method"]], "poke() (airflow.providers.standard.sensors.time.timesensor method)": [[19, "airflow.providers.standard.sensors.time.TimeSensor.poke"]], "start_from_trigger (airflow.providers.standard.sensors.time.timesensorasync attribute)": [[19, "airflow.providers.standard.sensors.time.TimeSensorAsync.start_from_trigger"]], "start_trigger_args (airflow.providers.standard.sensors.time.timesensorasync attribute)": [[19, "airflow.providers.standard.sensors.time.TimeSensorAsync.start_trigger_args"]], "timeout (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[19, "airflow.providers.standard.sensors.time.StartTriggerArgs.timeout"]], "trigger_cls (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[19, "airflow.providers.standard.sensors.time.StartTriggerArgs.trigger_cls"]], "trigger_kwargs (airflow.providers.standard.sensors.time.starttriggerargs attribute)": [[19, "airflow.providers.standard.sensors.time.StartTriggerArgs.trigger_kwargs"]], "timedeltasensor (class in airflow.providers.standard.sensors.time_delta)": [[20, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensor"]], "timedeltasensorasync (class in airflow.providers.standard.sensors.time_delta)": [[20, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensorAsync"]], "waitsensor (class in airflow.providers.standard.sensors.time_delta)": [[20, "airflow.providers.standard.sensors.time_delta.WaitSensor"]], "airflow.providers.standard.sensors.time_delta": [[20, "module-airflow.providers.standard.sensors.time_delta"]], "execute() (airflow.providers.standard.sensors.time_delta.timedeltasensorasync method)": [[20, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensorAsync.execute"]], "execute() (airflow.providers.standard.sensors.time_delta.waitsensor method)": [[20, "airflow.providers.standard.sensors.time_delta.WaitSensor.execute"]], "execute_complete() (airflow.providers.standard.sensors.time_delta.timedeltasensorasync method)": [[20, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensorAsync.execute_complete"]], "poke() (airflow.providers.standard.sensors.time_delta.timedeltasensor method)": [[20, "airflow.providers.standard.sensors.time_delta.TimeDeltaSensor.poke"]], "dayofweeksensor (class in airflow.providers.standard.sensors.weekday)": [[21, "airflow.providers.standard.sensors.weekday.DayOfWeekSensor"]], "airflow.providers.standard.sensors.weekday": [[21, "module-airflow.providers.standard.sensors.weekday"]], "poke() (airflow.providers.standard.sensors.weekday.dayofweeksensor method)": [[21, "airflow.providers.standard.sensors.weekday.DayOfWeekSensor.poke"]], "dagstatetrigger (class in airflow.providers.standard.triggers.external_task)": [[22, "airflow.providers.standard.triggers.external_task.DagStateTrigger"]], "workflowtrigger (class in airflow.providers.standard.triggers.external_task)": [[22, "airflow.providers.standard.triggers.external_task.WorkflowTrigger"]], "airflow.providers.standard.triggers.external_task": [[22, "module-airflow.providers.standard.triggers.external_task"]], "count_dags() (airflow.providers.standard.triggers.external_task.dagstatetrigger method)": [[22, "airflow.providers.standard.triggers.external_task.DagStateTrigger.count_dags"]], "run() (airflow.providers.standard.triggers.external_task.dagstatetrigger method)": [[22, "airflow.providers.standard.triggers.external_task.DagStateTrigger.run"]], "run() (airflow.providers.standard.triggers.external_task.workflowtrigger method)": [[22, "airflow.providers.standard.triggers.external_task.WorkflowTrigger.run"]], "serialize() (airflow.providers.standard.triggers.external_task.dagstatetrigger method)": [[22, "airflow.providers.standard.triggers.external_task.DagStateTrigger.serialize"]], "serialize() (airflow.providers.standard.triggers.external_task.workflowtrigger method)": [[22, "airflow.providers.standard.triggers.external_task.WorkflowTrigger.serialize"]], "filetrigger (class in airflow.providers.standard.triggers.file)": [[23, "airflow.providers.standard.triggers.file.FileTrigger"]], "airflow.providers.standard.triggers.file": [[23, "module-airflow.providers.standard.triggers.file"]], "run() (airflow.providers.standard.triggers.file.filetrigger method)": [[23, "airflow.providers.standard.triggers.file.FileTrigger.run"]], "serialize() (airflow.providers.standard.triggers.file.filetrigger method)": [[23, "airflow.providers.standard.triggers.file.FileTrigger.serialize"]], "airflow.providers.standard.triggers": [[24, "module-airflow.providers.standard.triggers"]], "datetimetrigger (class in airflow.providers.standard.triggers.temporal)": [[25, "airflow.providers.standard.triggers.temporal.DateTimeTrigger"]], "timedeltatrigger (class in airflow.providers.standard.triggers.temporal)": [[25, "airflow.providers.standard.triggers.temporal.TimeDeltaTrigger"]], "airflow.providers.standard.triggers.temporal": [[25, "module-airflow.providers.standard.triggers.temporal"]], "run() (airflow.providers.standard.triggers.temporal.datetimetrigger method)": [[25, "airflow.providers.standard.triggers.temporal.DateTimeTrigger.run"]], "serialize() (airflow.providers.standard.triggers.temporal.datetimetrigger method)": [[25, "airflow.providers.standard.triggers.temporal.DateTimeTrigger.serialize"]], "airflow.providers.standard.utils": [[26, "module-airflow.providers.standard.utils"]], "airflow.providers.standard.utils.python_virtualenv": [[27, "module-airflow.providers.standard.utils.python_virtualenv"]], "prepare_virtualenv() (in module airflow.providers.standard.utils.python_virtualenv)": [[27, "airflow.providers.standard.utils.python_virtualenv.prepare_virtualenv"]], "write_python_script() (in module airflow.providers.standard.utils.python_virtualenv)": [[27, "airflow.providers.standard.utils.python_virtualenv.write_python_script"]], "airflow.providers.standard.utils.sensor_helper": [[28, "module-airflow.providers.standard.utils.sensor_helper"]], "airflow_v_2_10_plus (in module airflow.providers.standard.version_compat)": [[29, "airflow.providers.standard.version_compat.AIRFLOW_V_2_10_PLUS"]], "airflow_v_3_0_plus (in module airflow.providers.standard.version_compat)": [[29, "airflow.providers.standard.version_compat.AIRFLOW_V_3_0_PLUS"]], "airflow.providers.standard.version_compat": [[29, "module-airflow.providers.standard.version_compat"]], "get_base_airflow_version_tuple() (in module airflow.providers.standard.version_compat)": [[29, "airflow.providers.standard.version_compat.get_base_airflow_version_tuple"]]}})