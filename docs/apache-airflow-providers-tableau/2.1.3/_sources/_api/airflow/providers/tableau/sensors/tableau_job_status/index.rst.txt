:py:mod:`airflow.providers.tableau.sensors.tableau_job_status`
==============================================================

.. py:module:: airflow.providers.tableau.sensors.tableau_job_status


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.tableau.sensors.tableau_job_status.TableauJobStatusSensor




.. py:class:: TableauJobStatusSensor(*, job_id: str, site_id: Optional[str] = None, tableau_conn_id: str = 'tableau_default', **kwargs)

   Bases: :py:obj:`airflow.sensors.base.BaseSensorOperator`

   Watches the status of a Tableau Server Job.

   .. seealso:: https://tableau.github.io/server-client-python/docs/api-ref#jobs

   :param job_id: Id of the job to watch.
   :type job_id: str
   :param site_id: The id of the site where the workbook belongs to.
   :type site_id: Optional[str]
   :param tableau_conn_id: The :ref:`Tableau Connection id <howto/connection:tableau>`
       containing the credentials to authenticate to the Tableau Server.
   :type tableau_conn_id: str

   .. py:attribute:: template_fields
      :annotation: :Sequence[str] = ['job_id']

      

   .. py:method:: poke(self, context: airflow.utils.context.Context) -> bool

      Pokes until the job has successfully finished.

      :param context: The task context during execution.
      :type context: dict
      :return: True if it succeeded and False if not.
      :rtype: bool



