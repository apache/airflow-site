:py:mod:`airflow.providers.tabular.hooks.tabular`
=================================================

.. py:module:: airflow.providers.tabular.hooks.tabular


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.tabular.hooks.tabular.TabularHook




Attributes
~~~~~~~~~~

.. autoapisummary::

   airflow.providers.tabular.hooks.tabular.DEFAULT_TABULAR_URL
   airflow.providers.tabular.hooks.tabular.TOKENS_ENDPOINT


.. py:data:: DEFAULT_TABULAR_URL
   :annotation: = https://api.tabulardata.io/ws/v1

   

.. py:data:: TOKENS_ENDPOINT
   :annotation: = oauth/tokens

   

.. py:class:: TabularHook(tabular_conn_id = default_conn_name)

   Bases: :py:obj:`airflow.hooks.base.BaseHook`

   This hook acts as a base hook for tabular services. It offers the ability to generate temporary,
   short-lived session tokens to use within Airflow submitted jobs.

   :param tabular_conn_id: The :ref:`Tabular connection id<howto/connection:tabular>`
       which refers to the information to connect to the Tabular OAuth service.

   .. py:attribute:: conn_name_attr
      :annotation: = tabular_conn_id

      

   .. py:attribute:: default_conn_name
      :annotation: = tabular_default

      

   .. py:attribute:: conn_type
      :annotation: = tabular

      

   .. py:attribute:: hook_name
      :annotation: = Tabular

      

   .. py:method:: get_ui_field_behaviour()
      :staticmethod:

      Returns custom field behaviour


   .. py:method:: test_connection(self)

      Test the Tabular connection.


   .. py:method:: get_conn(self)

      Obtain a short-lived access token via a client_id and client_secret.


   .. py:method:: get_token_macro(self)



