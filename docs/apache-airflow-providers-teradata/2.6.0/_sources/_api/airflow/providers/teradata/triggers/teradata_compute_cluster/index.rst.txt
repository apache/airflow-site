:py:mod:`airflow.providers.teradata.triggers.teradata_compute_cluster`
======================================================================

.. py:module:: airflow.providers.teradata.triggers.teradata_compute_cluster


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.teradata.triggers.teradata_compute_cluster.TeradataComputeClusterSyncTrigger




.. py:class:: TeradataComputeClusterSyncTrigger(teradata_conn_id, compute_profile_name, compute_group_name = None, operation_type = None, poll_interval = None)


   Bases: :py:obj:`airflow.triggers.base.BaseTrigger`

   Fetch the status of the suspend or resume operation for the specified compute cluster.

   :param teradata_conn_id:  The :ref:`Teradata connection id <howto/connection:teradata>`
       reference to a specific Teradata database.
   :param compute_profile_name:  Name of the Compute Profile to manage.
   :param compute_group_name: Name of compute group to which compute profile belongs.
   :param opr_type: Compute cluster operation - SUSPEND/RESUME
   :param poll_interval: polling period in minutes to check for the status

   .. py:method:: serialize()

      Serialize TeradataComputeClusterSyncTrigger arguments and classpath.


   .. py:method:: run()
      :async:

      Wait for Compute Cluster operation to complete.


   .. py:method:: get_status()
      :async:

      Return compute cluster SUSPEND/RESUME operation status.



