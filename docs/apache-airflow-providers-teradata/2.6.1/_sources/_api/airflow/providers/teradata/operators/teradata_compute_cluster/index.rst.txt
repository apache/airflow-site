:py:mod:`airflow.providers.teradata.operators.teradata_compute_cluster`
=======================================================================

.. py:module:: airflow.providers.teradata.operators.teradata_compute_cluster


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.teradata.operators.teradata_compute_cluster.TeradataComputeClusterProvisionOperator
   airflow.providers.teradata.operators.teradata_compute_cluster.TeradataComputeClusterDecommissionOperator
   airflow.providers.teradata.operators.teradata_compute_cluster.TeradataComputeClusterResumeOperator
   airflow.providers.teradata.operators.teradata_compute_cluster.TeradataComputeClusterSuspendOperator




.. py:class:: TeradataComputeClusterProvisionOperator(query_strategy = None, compute_map = None, compute_attribute = None, **kwargs)


   Bases: :py:obj:`_TeradataComputeClusterOperator`

   Creates the new Computer Cluster with specified Compute Group Name and Compute Profile Name.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:TeradataComputeClusterProvisionOperator`

   :param compute_profile_name: Name of the Compute Profile to manage.
   :param compute_group_name: Name of compute group to which compute profile belongs.
   :param query_strategy: Query strategy to use. Refers to the approach or method used by the
       Teradata Optimizer to execute SQL queries efficiently within a Teradata computer cluster.
       Valid query_strategy value is either 'STANDARD' or 'ANALYTIC'. Default at database level is STANDARD.
   :param compute_map: ComputeMapName of the compute map. The compute_map in a compute cluster profile refers
       to the mapping of compute resources to a specific node or set of nodes within the cluster.
   :param compute_attribute: Optional attributes of compute profile. Example compute attribute
       MIN_COMPUTE_COUNT(1) MAX_COMPUTE_COUNT(5) INITIALLY_SUSPENDED('FALSE')
   :param teradata_conn_id: The :ref:`Teradata connection id <howto/connection:teradata>`
       reference to a specific Teradata database.
   :param timeout: Time elapsed before the task times out and fails.

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('compute_profile_name', 'compute_group_name', 'query_strategy', 'compute_map',...

      

   .. py:attribute:: ui_color
      :value: '#e07c24'

      

   .. py:method:: execute(context)

      Initiate the execution of CREATE COMPUTE SQL statement.

      Initiate the execution of the SQL statement for provisioning the compute cluster within Teradata Vantage
      Lake, effectively creates the compute cluster.
      Airflow runs this method on the worker and defers using the trigger.



.. py:class:: TeradataComputeClusterDecommissionOperator(delete_compute_group = False, **kwargs)


   Bases: :py:obj:`_TeradataComputeClusterOperator`

   Drops the compute cluster with specified Compute Group Name and Compute Profile Name.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:TeradataComputeClusterDecommissionOperator`

   :param compute_profile_name: Name of the Compute Profile to manage.
   :param compute_group_name: Name of compute group to which compute profile belongs.
   :param delete_compute_group: Indicates whether the compute group should be deleted.
       When set to True, it signals the system to remove the specified compute group.
       Conversely, when set to False, no action is taken on the compute group.
   :param teradata_conn_id: The :ref:`Teradata connection id <howto/connection:teradata>`
       reference to a specific Teradata database.
   :param timeout: Time elapsed before the task times out and fails.

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('compute_profile_name', 'compute_group_name', 'delete_compute_group', 'teradata_conn_id', 'timeout')

      

   .. py:attribute:: ui_color
      :value: '#e07c24'

      

   .. py:method:: execute(context)

      Initiate the execution of DROP COMPUTE SQL statement.

      Initiate the execution of the SQL statement for decommissioning the compute cluster within Teradata Vantage
      Lake, effectively drops the compute cluster.
      Airflow runs this method on the worker and defers using the trigger.



.. py:class:: TeradataComputeClusterResumeOperator(**kwargs)


   Bases: :py:obj:`_TeradataComputeClusterOperator`

   Teradata Compute Cluster Operator to Resume the specified Teradata Vantage Cloud Lake Compute Cluster.

   Resumes the Teradata Vantage Lake Computer Cluster by employing the RESUME SQL statement within the
   Teradata Vantage Lake Compute Cluster SQL Interface.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:TeradataComputeClusterResumeOperator`

   :param compute_profile_name: Name of the Compute Profile to manage.
   :param compute_group_name: Name of compute group to which compute profile belongs.
   :param teradata_conn_id: The :ref:`Teradata connection id <howto/connection:teradata>`
       reference to a specific Teradata database.
   :param timeout: Time elapsed before the task times out and fails. Time is in minutes.

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('compute_profile_name', 'compute_group_name', 'teradata_conn_id', 'timeout')

      

   .. py:attribute:: ui_color
      :value: '#e07c24'

      

   .. py:method:: execute(context)

      Initiate the execution of RESUME COMPUTE SQL statement.

      Initiate the execution of the SQL statement for resuming the compute cluster within Teradata Vantage
      Lake, effectively resumes the compute cluster.
      Airflow runs this method on the worker and defers using the trigger.



.. py:class:: TeradataComputeClusterSuspendOperator(**kwargs)


   Bases: :py:obj:`_TeradataComputeClusterOperator`

   Teradata Compute Cluster Operator to suspend the specified Teradata Vantage Cloud Lake Compute Cluster.

   Suspends the Teradata Vantage Lake Computer Cluster by employing the SUSPEND SQL statement within the
   Teradata Vantage Lake Compute Cluster SQL Interface.

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:TeradataComputeClusterSuspendOperator`

   :param compute_profile_name: Name of the Compute Profile to manage.
   :param compute_group_name: Name of compute group to which compute profile belongs.
   :param teradata_conn_id: The :ref:`Teradata connection id <howto/connection:teradata>`
       reference to a specific Teradata database.
   :param timeout: Time elapsed before the task times out and fails.

   .. py:attribute:: template_fields
      :type: Sequence[str]
      :value: ('compute_profile_name', 'compute_group_name', 'teradata_conn_id', 'timeout')

      

   .. py:attribute:: ui_color
      :value: '#e07c24'

      

   .. py:method:: execute(context)

      Initiate the execution of SUSPEND COMPUTE SQL statement.

      Initiate the execution of the SQL statement for suspending the compute cluster within Teradata Vantage
      Lake, effectively suspends the compute cluster.
      Airflow runs this method on the worker and defers using the trigger.



