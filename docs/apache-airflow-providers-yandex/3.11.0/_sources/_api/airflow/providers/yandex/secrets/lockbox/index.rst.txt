:py:mod:`airflow.providers.yandex.secrets.lockbox`
==================================================

.. py:module:: airflow.providers.yandex.secrets.lockbox

.. autoapi-nested-parse::

   Objects relating to sourcing secrets from Yandex Cloud Lockbox.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.yandex.secrets.lockbox.LockboxSecretBackend




.. py:class:: LockboxSecretBackend(yc_oauth_token = None, yc_sa_key_json = None, yc_sa_key_json_path = None, yc_connection_id = None, folder_id = '', connections_prefix = 'airflow/connections', variables_prefix = 'airflow/variables', config_prefix = 'airflow/config', sep = '/', endpoint = None)


   Bases: :py:obj:`airflow.secrets.BaseSecretsBackend`, :py:obj:`airflow.utils.log.logging_mixin.LoggingMixin`

   Retrieves connections or variables or configs from Yandex Lockbox.

   Configurable via ``airflow.cfg`` like so:

   .. code-block:: ini

       [secrets]
       backend = airflow.providers.yandex.secrets.lockbox.LockboxSecretBackend
       backend_kwargs = {"connections_prefix": "airflow/connections"}

   For example, when ``{"connections_prefix": "airflow/connections"}`` is set, if a secret is defined with
   the path ``airflow/connections/smtp_default``, the connection with conn_id ``smtp_default`` would be
   accessible.

   When ``{"variables_prefix": "airflow/variables"}`` is set, if a secret is defined with
   the path ``airflow/variables/hello``, the variable with the name ``hello`` would be accessible.

   When ``{"config_prefix": "airflow/config"}`` is set, if a secret is defined with
   the path ``airflow/config/sql_alchemy_conn``, the config with key ``sql_alchemy_conn`` would be
   accessible.

   If the prefix is empty, the requests will not be sent to Yandex Lockbox.

   .. code-block:: ini

       [secrets]
       backend = airflow.providers.yandex.secrets.lockbox.LockboxSecretBackend
       backend_kwargs = {"yc_connection_id": "<connection_ID>", "folder_id": "<folder_ID>"}

   You need to specify credentials or the ID of the ``yandexcloud`` connection to connect to Yandex Lockbox.
   The credentials will be used with the following priority:

   * OAuth token
   * Service account key in JSON from file
   * Service account key in JSON
   * Yandex Cloud connection

   If you do not specify any credentials,
   the system will use the default connection ID:``yandexcloud_default``.

   Also, you need to specify the Yandex Cloud folder ID to search for Yandex Lockbox secrets in.
   If you do not specify folder ID, the requests will use the connection ``folder_id`` if specified.

   :param yc_oauth_token: Specifies the user account OAuth token to connect to Yandex Lockbox.
       The parameter value should look like ``y3_xx123``.
   :param yc_sa_key_json: Specifies the service account key in JSON.
       The parameter value should look like
       ``{"id": "...", "service_account_id": "...", "private_key": "..."}``.
   :param yc_sa_key_json_path: Specifies the service account key in JSON file path.
       The parameter value should look like ``/home/airflow/authorized_key.json``,
       while the file content should have the following format:
       ``{"id": "...", "service_account_id": "...", "private_key": "..."}``.
   :param yc_connection_id: Specifies the connection ID to connect to Yandex Lockbox.
       The default value is ``yandexcloud_default``.
   :param folder_id: Specifies the folder ID to search for Yandex Lockbox secrets in.
       If set to ``None`` (``null`` in JSON),
       the requests will use the connection ``folder_id``, if specified.
   :param connections_prefix: Specifies the prefix of the secret to read to get connections.
       If set to ``None`` (``null`` in JSON),
       the requests for connections will not be sent to Yandex Lockbox.
       The default value is ``airflow/connections``.
   :param variables_prefix: Specifies the prefix of the secret to read to get variables.
       If set to ``None`` (``null`` in JSON), the requests for variables will not be sent to Yandex Lockbox.
       The default value is ``airflow/variables``.
   :param config_prefix: Specifies the prefix of the secret to read to get configurations.
       If set to ``None`` (``null`` in JSON), the requests for variables will not be sent to Yandex Lockbox.
       The default value is ``airflow/config``.
   :param sep: Specifies the separator to concatenate ``secret_prefix`` and ``secret_id``.
       The default value is ``/``.
   :param endpoint: Specifies the API endpoint.
       If set to ``None`` (``null`` in JSON), the requests will use the connection endpoint, if specified;
       otherwise, they will use the default endpoint.

   .. py:method:: get_conn_value(conn_id)

      Retrieve from Secrets Backend a string value representing the Connection object.

      :param conn_id: Connection ID
      :return: Connection Value


   .. py:method:: get_variable(key)

      Return value for Airflow Variable.

      :param key: Variable Key
      :return: Variable Value


   .. py:method:: get_config(key)

      Return value for Airflow Config Key.

      :param key: Config Key
      :return: Config Value



