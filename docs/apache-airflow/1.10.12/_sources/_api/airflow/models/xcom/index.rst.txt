:mod:`airflow.models.xcom`
==========================

.. py:module:: airflow.models.xcom


Module Contents
---------------

.. data:: log
   

   

.. data:: MAX_XCOM_SIZE
   :annotation: = 49344

   

.. data:: XCOM_RETURN_KEY
   :annotation: = return_value

   

.. py:class:: BaseXCom

   Bases: :class:`airflow.models.base.Base`, :class:`airflow.utils.log.logging_mixin.LoggingMixin`

   Base class for XCom objects.

   .. attribute:: __tablename__
      :annotation: = xcom

      

   .. attribute:: id
      

      

   .. attribute:: key
      

      

   .. attribute:: value
      

      

   .. attribute:: timestamp
      

      

   .. attribute:: execution_date
      

      

   .. attribute:: task_id
      

      

   .. attribute:: dag_id
      

      

   .. attribute:: __table_args__
      

      TODO: "pickling" has been deprecated and JSON is preferred.
      "pickling" will be removed in Airflow 2.0.


   
   .. method:: init_on_load(self)



   
   .. method:: __repr__(self)



   
   .. classmethod:: set(cls, key, value, execution_date, task_id, dag_id, session=None)

      Store an XCom value.

      :return: None



   
   .. classmethod:: get_one(cls, execution_date, key=None, task_id=None, dag_id=None, include_prior_dates=False, session=None)

      Retrieve an XCom value, optionally meeting certain criteria.
      TODO: "pickling" has been deprecated and JSON is preferred.
      "pickling" will be removed in Airflow 2.0.

      :return: XCom value



   
   .. classmethod:: get_many(cls, execution_date, key=None, task_ids=None, dag_ids=None, include_prior_dates=False, limit=100, session=None)

      Retrieve an XCom value, optionally meeting certain criteria
      TODO: "pickling" has been deprecated and JSON is preferred.
      "pickling" will be removed in Airflow 2.0.



   
   .. classmethod:: delete(cls, xcoms, session=None)



   
   .. staticmethod:: serialize_value(value)




.. function:: resolve_xcom_backend()
   Resolves custom XCom class


.. data:: XCom
   

   

