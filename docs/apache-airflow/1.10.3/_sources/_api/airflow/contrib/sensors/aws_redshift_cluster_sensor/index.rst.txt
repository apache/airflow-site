

:mod:`airflow.contrib.sensors.aws_redshift_cluster_sensor`
==========================================================

.. py:module:: airflow.contrib.sensors.aws_redshift_cluster_sensor







Module Contents
---------------






.. py:class:: AwsRedshiftClusterSensor(cluster_identifier, target_status='available', aws_conn_id='aws_default', *args, **kwargs)

   Bases::class:`airflow.sensors.base_sensor_operator.BaseSensorOperator`

   

   Waits for a Redshift cluster to reach a specific status.

   :param cluster_identifier: The identifier for the cluster being pinged.
   :type cluster_identifier: str
   :param target_status: The cluster status desired.
   :type target_status: str


   

   

   .. attribute:: template_fields
      :annotation: = ['cluster_identifier', 'target_status'] 

      



   

   

   

   .. method:: poke(self, context)

      









