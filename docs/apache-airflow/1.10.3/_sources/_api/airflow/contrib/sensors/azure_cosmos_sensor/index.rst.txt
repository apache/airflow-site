

:mod:`airflow.contrib.sensors.azure_cosmos_sensor`
==================================================

.. py:module:: airflow.contrib.sensors.azure_cosmos_sensor







Module Contents
---------------






.. py:class:: AzureCosmosDocumentSensor(database_name, collection_name, document_id, azure_cosmos_conn_id='azure_cosmos_default', *args, **kwargs)

   Bases::class:`airflow.sensors.base_sensor_operator.BaseSensorOperator`

   

   Checks for the existence of a document which
   matches the given query in CosmosDB. Example:

   >>> azure_cosmos_sensor = AzureCosmosDocumentSensor(database_name="somedatabase_name",
   ...                            collection_name="somecollection_name",
   ...                            document_id="unique-doc-id",
   ...                            azure_cosmos_conn_id="azure_cosmos_default",
   ...                            task_id="azure_cosmos_sensor")


   

   

   .. attribute:: template_fields
      :annotation: = ['database_name', 'collection_name', 'document_id'] 

      



   

   

   

   .. method:: poke(self, context)

      









