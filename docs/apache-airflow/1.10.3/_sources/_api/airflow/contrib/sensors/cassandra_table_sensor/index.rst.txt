

:mod:`airflow.contrib.sensors.cassandra_table_sensor`
=====================================================

.. py:module:: airflow.contrib.sensors.cassandra_table_sensor







Module Contents
---------------






.. py:class:: CassandraTableSensor(table, cassandra_conn_id, *args, **kwargs)

   Bases::class:`airflow.sensors.base_sensor_operator.BaseSensorOperator`

   

   Checks for the existence of a table in a Cassandra cluster.

   For example, if you want to wait for a table called 't' to be created
   in a keyspace 'k', instantiate it as follows:

   >>> cassandra_sensor = CassandraTableSensor(table="k.t",
   ...                                         cassandra_conn_id="cassandra_default",
   ...                                         task_id="cassandra_sensor")


   

   

   .. attribute:: template_fields
      :annotation: = ['table'] 

      



   

   

   

   .. method:: poke(self, context)

      









