:mod:`airflow.operators.http_operator`
======================================

.. py:module:: airflow.operators.http_operator


Module Contents
---------------

.. py:class:: SimpleHttpOperator(endpoint, method='POST', data=None, headers=None, response_check=None, extra_options=None, xcom_push=False, http_conn_id='http_default', log_response=False, *args, **kwargs)

   Bases: :class:`airflow.models.BaseOperator`

   Calls an endpoint on an HTTP system to execute an action

   :param http_conn_id: The connection to run the operator against
   :type http_conn_id: str
   :param endpoint: The relative part of the full url. (templated)
   :type endpoint: str
   :param method: The HTTP method to use, default = "POST"
   :type method: str
   :param data: The data to pass. POST-data in POST/PUT and params
       in the URL for a GET request. (templated)
   :type data: For POST/PUT, depends on the content-type parameter,
       for GET a dictionary of key/value string pairs
   :param headers: The HTTP headers to be added to the GET request
   :type headers: a dictionary of string key/value pairs
   :param response_check: A check against the 'requests' response object.
       Returns True for 'pass' and False otherwise.
   :type response_check: A lambda or defined function.
   :param extra_options: Extra options for the 'requests' library, see the
       'requests' documentation (options to modify timeout, ssl, etc.)
   :type extra_options: A dictionary of options, where key is string and value
       depends on the option that's being modified.
   :param xcom_push: Push the response to Xcom (default: False).
       If xcom_push is True, response of an HTTP request will also
       be pushed to an XCom.
   :type xcom_push: bool
   :param log_response: Log the response (default: False)
   :type log_response: bool

   .. attribute:: template_fields
      :annotation: = ['endpoint', 'data', 'headers']

      

   .. attribute:: template_ext
      :annotation: = []

      

   .. attribute:: ui_color
      :annotation: = #f4a460

      

   
   .. method:: execute(self, context)




