:mod:`airflow.operators.weekday`
================================

.. py:module:: airflow.operators.weekday


Module Contents
---------------

.. py:class:: BranchDayOfWeekOperator(*, follow_task_ids_if_true: Union[str, Iterable[str]], follow_task_ids_if_false: Union[str, Iterable[str]], week_day: Union[str, Iterable[str]], use_task_execution_day: bool = False, **kwargs)

   Bases: :class:`airflow.operators.branch.BaseBranchOperator`

   Branches into one of two lists of tasks depending on the current day.
   For more information on how to use this operator, take a look at the guide:
   :ref:`howto/operator:BranchDayOfWeekOperator`

   :param follow_task_ids_if_true: task id or task ids to follow if criteria met
   :type follow_task_ids_if_true: str or list[str]
   :param follow_task_ids_if_false: task id or task ids to follow if criteria does not met
   :type follow_task_ids_if_false: str or list[str]
   :param week_day: Day of the week to check (full name). Optionally, a set
       of days can also be provided using a set.
       Example values:

           * ``"MONDAY"``,
           * ``{"Saturday", "Sunday"}``
           * ``{WeekDay.TUESDAY}``
           * ``{WeekDay.SATURDAY, WeekDay.SUNDAY}``

   :type week_day: set or str or airflow.utils.weekday.WeekDay
   :param use_task_execution_day: If ``True``, uses task's execution day to compare
       with is_today. Execution Date is Useful for backfilling.
       If ``False``, uses system's day of the week.
   :type use_task_execution_day: bool

   
   .. method:: choose_branch(self, context: Dict)




